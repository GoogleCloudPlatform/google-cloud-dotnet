// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/container/v1/cluster_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Container.V1 {

  /// <summary>Holder for reflection information generated from google/container/v1/cluster_service.proto</summary>
  public static partial class ClusterServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/container/v1/cluster_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClusterServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY29udGFpbmVyL3YxL2NsdXN0ZXJfc2VydmljZS5wcm90bxIT",
            "Z29vZ2xlLmNvbnRhaW5lci52MRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5w",
            "cm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvIoAECgpOb2RlQ29u",
            "ZmlnEhQKDG1hY2hpbmVfdHlwZRgBIAEoCRIUCgxkaXNrX3NpemVfZ2IYAiAB",
            "KAUSFAoMb2F1dGhfc2NvcGVzGAMgAygJEhcKD3NlcnZpY2VfYWNjb3VudBgJ",
            "IAEoCRI/CghtZXRhZGF0YRgEIAMoCzItLmdvb2dsZS5jb250YWluZXIudjEu",
            "Tm9kZUNvbmZpZy5NZXRhZGF0YUVudHJ5EhIKCmltYWdlX3R5cGUYBSABKAkS",
            "OwoGbGFiZWxzGAYgAygLMisuZ29vZ2xlLmNvbnRhaW5lci52MS5Ob2RlQ29u",
            "ZmlnLkxhYmVsc0VudHJ5EhcKD2xvY2FsX3NzZF9jb3VudBgHIAEoBRIMCgR0",
            "YWdzGAggAygJEhMKC3ByZWVtcHRpYmxlGAogASgIEjwKDGFjY2VsZXJhdG9y",
            "cxgLIAMoCzImLmdvb2dsZS5jb250YWluZXIudjEuQWNjZWxlcmF0b3JDb25m",
            "aWcSEQoJZGlza190eXBlGAwgASgJEhgKEG1pbl9jcHVfcGxhdGZvcm0YDSAB",
            "KAkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEi0QEKCk1hc3RlckF1dGgSEAoIdXNlcm5hbWUYASABKAkSEAoI",
            "cGFzc3dvcmQYAiABKAkSTwoZY2xpZW50X2NlcnRpZmljYXRlX2NvbmZpZxgD",
            "IAEoCzIsLmdvb2dsZS5jb250YWluZXIudjEuQ2xpZW50Q2VydGlmaWNhdGVD",
            "b25maWcSHgoWY2x1c3Rlcl9jYV9jZXJ0aWZpY2F0ZRhkIAEoCRIaChJjbGll",
            "bnRfY2VydGlmaWNhdGUYZSABKAkSEgoKY2xpZW50X2tleRhmIAEoCSI7ChdD",
            "bGllbnRDZXJ0aWZpY2F0ZUNvbmZpZxIgChhpc3N1ZV9jbGllbnRfY2VydGlm",
            "aWNhdGUYASABKAgitwIKDEFkZG9uc0NvbmZpZxJDChNodHRwX2xvYWRfYmFs",
            "YW5jaW5nGAEgASgLMiYuZ29vZ2xlLmNvbnRhaW5lci52MS5IdHRwTG9hZEJh",
            "bGFuY2luZxJRChpob3Jpem9udGFsX3BvZF9hdXRvc2NhbGluZxgCIAEoCzIt",
            "Lmdvb2dsZS5jb250YWluZXIudjEuSG9yaXpvbnRhbFBvZEF1dG9zY2FsaW5n",
            "EkYKFGt1YmVybmV0ZXNfZGFzaGJvYXJkGAMgASgLMiguZ29vZ2xlLmNvbnRh",
            "aW5lci52MS5LdWJlcm5ldGVzRGFzaGJvYXJkEkcKFW5ldHdvcmtfcG9saWN5",
            "X2NvbmZpZxgEIAEoCzIoLmdvb2dsZS5jb250YWluZXIudjEuTmV0d29ya1Bv",
            "bGljeUNvbmZpZyIlChFIdHRwTG9hZEJhbGFuY2luZxIQCghkaXNhYmxlZBgB",
            "IAEoCCIsChhIb3Jpem9udGFsUG9kQXV0b3NjYWxpbmcSEAoIZGlzYWJsZWQY",
            "ASABKAgiJwoTS3ViZXJuZXRlc0Rhc2hib2FyZBIQCghkaXNhYmxlZBgBIAEo",
            "CCInChNOZXR3b3JrUG9saWN5Q29uZmlnEhAKCGRpc2FibGVkGAEgASgIIqgB",
            "ChRQcml2YXRlQ2x1c3RlckNvbmZpZxIcChRlbmFibGVfcHJpdmF0ZV9ub2Rl",
            "cxgBIAEoCBIfChdlbmFibGVfcHJpdmF0ZV9lbmRwb2ludBgCIAEoCBIeChZt",
            "YXN0ZXJfaXB2NF9jaWRyX2Jsb2NrGAMgASgJEhgKEHByaXZhdGVfZW5kcG9p",
            "bnQYBCABKAkSFwoPcHVibGljX2VuZHBvaW50GAUgASgJIrwBCh5NYXN0ZXJB",
            "dXRob3JpemVkTmV0d29ya3NDb25maWcSDwoHZW5hYmxlZBgBIAEoCBJSCgtj",
            "aWRyX2Jsb2NrcxgCIAMoCzI9Lmdvb2dsZS5jb250YWluZXIudjEuTWFzdGVy",
            "QXV0aG9yaXplZE5ldHdvcmtzQ29uZmlnLkNpZHJCbG9jaxo1CglDaWRyQmxv",
            "Y2sSFAoMZGlzcGxheV9uYW1lGAEgASgJEhIKCmNpZHJfYmxvY2sYAiABKAki",
            "HQoKTGVnYWN5QWJhYxIPCgdlbmFibGVkGAEgASgIIpEBCg1OZXR3b3JrUG9s",
            "aWN5Ej0KCHByb3ZpZGVyGAEgASgOMisuZ29vZ2xlLmNvbnRhaW5lci52MS5O",
            "ZXR3b3JrUG9saWN5LlByb3ZpZGVyEg8KB2VuYWJsZWQYAiABKAgiMAoIUHJv",
            "dmlkZXISGAoUUFJPVklERVJfVU5TUEVDSUZJRUQQABIKCgZDQUxJQ08QASLp",
            "AgoSSVBBbGxvY2F0aW9uUG9saWN5EhYKDnVzZV9pcF9hbGlhc2VzGAEgASgI",
            "EhkKEWNyZWF0ZV9zdWJuZXR3b3JrGAIgASgIEhcKD3N1Ym5ldHdvcmtfbmFt",
            "ZRgDIAEoCRIdChFjbHVzdGVyX2lwdjRfY2lkchgEIAEoCUICGAESGgoObm9k",
            "ZV9pcHY0X2NpZHIYBSABKAlCAhgBEh4KEnNlcnZpY2VzX2lwdjRfY2lkchgG",
            "IAEoCUICGAESJAocY2x1c3Rlcl9zZWNvbmRhcnlfcmFuZ2VfbmFtZRgHIAEo",
            "CRIlCh1zZXJ2aWNlc19zZWNvbmRhcnlfcmFuZ2VfbmFtZRgIIAEoCRIfChdj",
            "bHVzdGVyX2lwdjRfY2lkcl9ibG9jaxgJIAEoCRIcChRub2RlX2lwdjRfY2lk",
            "cl9ibG9jaxgKIAEoCRIgChhzZXJ2aWNlc19pcHY0X2NpZHJfYmxvY2sYCyAB",
            "KAki3QwKB0NsdXN0ZXISDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgC",
            "IAEoCRIaChJpbml0aWFsX25vZGVfY291bnQYAyABKAUSNAoLbm9kZV9jb25m",
            "aWcYBCABKAsyHy5nb29nbGUuY29udGFpbmVyLnYxLk5vZGVDb25maWcSNAoL",
            "bWFzdGVyX2F1dGgYBSABKAsyHy5nb29nbGUuY29udGFpbmVyLnYxLk1hc3Rl",
            "ckF1dGgSFwoPbG9nZ2luZ19zZXJ2aWNlGAYgASgJEhoKEm1vbml0b3Jpbmdf",
            "c2VydmljZRgHIAEoCRIPCgduZXR3b3JrGAggASgJEhkKEWNsdXN0ZXJfaXB2",
            "NF9jaWRyGAkgASgJEjgKDWFkZG9uc19jb25maWcYCiABKAsyIS5nb29nbGUu",
            "Y29udGFpbmVyLnYxLkFkZG9uc0NvbmZpZxISCgpzdWJuZXR3b3JrGAsgASgJ",
            "EjEKCm5vZGVfcG9vbHMYDCADKAsyHS5nb29nbGUuY29udGFpbmVyLnYxLk5v",
            "ZGVQb29sEhEKCWxvY2F0aW9ucxgNIAMoCRIfChdlbmFibGVfa3ViZXJuZXRl",
            "c19hbHBoYRgOIAEoCBJJCg9yZXNvdXJjZV9sYWJlbHMYDyADKAsyMC5nb29n",
            "bGUuY29udGFpbmVyLnYxLkNsdXN0ZXIuUmVzb3VyY2VMYWJlbHNFbnRyeRIZ",
            "ChFsYWJlbF9maW5nZXJwcmludBgQIAEoCRI0CgtsZWdhY3lfYWJhYxgSIAEo",
            "CzIfLmdvb2dsZS5jb250YWluZXIudjEuTGVnYWN5QWJhYxI6Cg5uZXR3b3Jr",
            "X3BvbGljeRgTIAEoCzIiLmdvb2dsZS5jb250YWluZXIudjEuTmV0d29ya1Bv",
            "bGljeRJFChRpcF9hbGxvY2F0aW9uX3BvbGljeRgUIAEoCzInLmdvb2dsZS5j",
            "b250YWluZXIudjEuSVBBbGxvY2F0aW9uUG9saWN5El4KIW1hc3Rlcl9hdXRo",
            "b3JpemVkX25ldHdvcmtzX2NvbmZpZxgWIAEoCzIzLmdvb2dsZS5jb250YWlu",
            "ZXIudjEuTWFzdGVyQXV0aG9yaXplZE5ldHdvcmtzQ29uZmlnEkIKEm1haW50",
            "ZW5hbmNlX3BvbGljeRgXIAEoCzImLmdvb2dsZS5jb250YWluZXIudjEuTWFp",
            "bnRlbmFuY2VQb2xpY3kSOgoObmV0d29ya19jb25maWcYGyABKAsyIi5nb29n",
            "bGUuY29udGFpbmVyLnYxLk5ldHdvcmtDb25maWcSSQoWcHJpdmF0ZV9jbHVz",
            "dGVyX2NvbmZpZxglIAEoCzIpLmdvb2dsZS5jb250YWluZXIudjEuUHJpdmF0",
            "ZUNsdXN0ZXJDb25maWcSEQoJc2VsZl9saW5rGGQgASgJEhAKBHpvbmUYZSAB",
            "KAlCAhgBEhAKCGVuZHBvaW50GGYgASgJEh8KF2luaXRpYWxfY2x1c3Rlcl92",
            "ZXJzaW9uGGcgASgJEh4KFmN1cnJlbnRfbWFzdGVyX3ZlcnNpb24YaCABKAkS",
            "IAoUY3VycmVudF9ub2RlX3ZlcnNpb24YaSABKAlCAhgBEhMKC2NyZWF0ZV90",
            "aW1lGGogASgJEjMKBnN0YXR1cxhrIAEoDjIjLmdvb2dsZS5jb250YWluZXIu",
            "djEuQ2x1c3Rlci5TdGF0dXMSFgoOc3RhdHVzX21lc3NhZ2UYbCABKAkSGwoT",
            "bm9kZV9pcHY0X2NpZHJfc2l6ZRhtIAEoBRIaChJzZXJ2aWNlc19pcHY0X2Np",
            "ZHIYbiABKAkSHwoTaW5zdGFuY2VfZ3JvdXBfdXJscxhvIAMoCUICGAESGgoS",
            "Y3VycmVudF9ub2RlX2NvdW50GHAgASgFEhMKC2V4cGlyZV90aW1lGHEgASgJ",
            "EhAKCGxvY2F0aW9uGHIgASgJGjUKE1Jlc291cmNlTGFiZWxzRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJ3CgZTdGF0dXMSFgoSU1RB",
            "VFVTX1VOU1BFQ0lGSUVEEAASEAoMUFJPVklTSU9OSU5HEAESCwoHUlVOTklO",
            "RxACEg8KC1JFQ09OQ0lMSU5HEAMSDAoIU1RPUFBJTkcQBBIJCgVFUlJPUhAF",
            "EgwKCERFR1JBREVEEAYiwQMKDUNsdXN0ZXJVcGRhdGUSHAoUZGVzaXJlZF9u",
            "b2RlX3ZlcnNpb24YBCABKAkSIgoaZGVzaXJlZF9tb25pdG9yaW5nX3NlcnZp",
            "Y2UYBSABKAkSQAoVZGVzaXJlZF9hZGRvbnNfY29uZmlnGAYgASgLMiEuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5BZGRvbnNDb25maWcSHAoUZGVzaXJlZF9ub2Rl",
            "X3Bvb2xfaWQYByABKAkSGgoSZGVzaXJlZF9pbWFnZV90eXBlGAggASgJEk8K",
            "HWRlc2lyZWRfbm9kZV9wb29sX2F1dG9zY2FsaW5nGAkgASgLMiguZ29vZ2xl",
            "LmNvbnRhaW5lci52MS5Ob2RlUG9vbEF1dG9zY2FsaW5nEhkKEWRlc2lyZWRf",
            "bG9jYXRpb25zGAogAygJEmYKKWRlc2lyZWRfbWFzdGVyX2F1dGhvcml6ZWRf",
            "bmV0d29ya3NfY29uZmlnGAwgASgLMjMuZ29vZ2xlLmNvbnRhaW5lci52MS5N",
            "YXN0ZXJBdXRob3JpemVkTmV0d29ya3NDb25maWcSHgoWZGVzaXJlZF9tYXN0",
            "ZXJfdmVyc2lvbhhkIAEoCSL7BQoJT3BlcmF0aW9uEgwKBG5hbWUYASABKAkS",
            "EAoEem9uZRgCIAEoCUICGAESOwoOb3BlcmF0aW9uX3R5cGUYAyABKA4yIy5n",
            "b29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbi5UeXBlEjUKBnN0YXR1cxgE",
            "IAEoDjIlLmdvb2dsZS5jb250YWluZXIudjEuT3BlcmF0aW9uLlN0YXR1cxIO",
            "CgZkZXRhaWwYCCABKAkSFgoOc3RhdHVzX21lc3NhZ2UYBSABKAkSEQoJc2Vs",
            "Zl9saW5rGAYgASgJEhMKC3RhcmdldF9saW5rGAcgASgJEhAKCGxvY2F0aW9u",
            "GAkgASgJEhIKCnN0YXJ0X3RpbWUYCiABKAkSEAoIZW5kX3RpbWUYCyABKAki",
            "UgoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQ",
            "ARILCgdSVU5OSU5HEAISCAoERE9ORRADEgwKCEFCT1JUSU5HEAQi/QIKBFR5",
            "cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEhIKDkNSRUFURV9DTFVTVEVSEAES",
            "EgoOREVMRVRFX0NMVVNURVIQAhISCg5VUEdSQURFX01BU1RFUhADEhEKDVVQ",
            "R1JBREVfTk9ERVMQBBISCg5SRVBBSVJfQ0xVU1RFUhAFEhIKDlVQREFURV9D",
            "TFVTVEVSEAYSFAoQQ1JFQVRFX05PREVfUE9PTBAHEhQKEERFTEVURV9OT0RF",
            "X1BPT0wQCBIcChhTRVRfTk9ERV9QT09MX01BTkFHRU1FTlQQCRIVChFBVVRP",
            "X1JFUEFJUl9OT0RFUxAKEhYKEkFVVE9fVVBHUkFERV9OT0RFUxALEg4KClNF",
            "VF9MQUJFTFMQDBITCg9TRVRfTUFTVEVSX0FVVEgQDRIWChJTRVRfTk9ERV9Q",
            "T09MX1NJWkUQDhIWChJTRVRfTkVUV09SS19QT0xJQ1kQDxIaChZTRVRfTUFJ",
            "TlRFTkFOQ0VfUE9MSUNZEBAifwoUQ3JlYXRlQ2x1c3RlclJlcXVlc3QSFgoK",
            "cHJvamVjdF9pZBgBIAEoCUICGAESEAoEem9uZRgCIAEoCUICGAESLQoHY2x1",
            "c3RlchgDIAEoCzIcLmdvb2dsZS5jb250YWluZXIudjEuQ2x1c3RlchIOCgZw",
            "YXJlbnQYBSABKAkiYwoRR2V0Q2x1c3RlclJlcXVlc3QSFgoKcHJvamVjdF9p",
            "ZBgBIAEoCUICGAESEAoEem9uZRgCIAEoCUICGAESFgoKY2x1c3Rlcl9pZBgD",
            "IAEoCUICGAESDAoEbmFtZRgFIAEoCSKaAQoUVXBkYXRlQ2x1c3RlclJlcXVl",
            "c3QSFgoKcHJvamVjdF9pZBgBIAEoCUICGAESEAoEem9uZRgCIAEoCUICGAES",
            "FgoKY2x1c3Rlcl9pZBgDIAEoCUICGAESMgoGdXBkYXRlGAQgASgLMiIuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5DbHVzdGVyVXBkYXRlEgwKBG5hbWUYBSABKAki",
            "qwEKFVVwZGF0ZU5vZGVQb29sUmVxdWVzdBIWCgpwcm9qZWN0X2lkGAEgASgJ",
            "QgIYARIQCgR6b25lGAIgASgJQgIYARIWCgpjbHVzdGVyX2lkGAMgASgJQgIY",
            "ARIYCgxub2RlX3Bvb2xfaWQYBCABKAlCAhgBEhQKDG5vZGVfdmVyc2lvbhgF",
            "IAEoCRISCgppbWFnZV90eXBlGAYgASgJEgwKBG5hbWUYCCABKAkiyAEKHVNl",
            "dE5vZGVQb29sQXV0b3NjYWxpbmdSZXF1ZXN0EhYKCnByb2plY3RfaWQYASAB",
            "KAlCAhgBEhAKBHpvbmUYAiABKAlCAhgBEhYKCmNsdXN0ZXJfaWQYAyABKAlC",
            "AhgBEhgKDG5vZGVfcG9vbF9pZBgEIAEoCUICGAESPQoLYXV0b3NjYWxpbmcY",
            "BSABKAsyKC5nb29nbGUuY29udGFpbmVyLnYxLk5vZGVQb29sQXV0b3NjYWxp",
            "bmcSDAoEbmFtZRgGIAEoCSJ/ChhTZXRMb2dnaW5nU2VydmljZVJlcXVlc3QS",
            "FgoKcHJvamVjdF9pZBgBIAEoCUICGAESDAoEem9uZRgCIAEoCRIWCgpjbHVz",
            "dGVyX2lkGAMgASgJQgIYARIXCg9sb2dnaW5nX3NlcnZpY2UYBCABKAkSDAoE",
            "bmFtZRgFIAEoCSKJAQobU2V0TW9uaXRvcmluZ1NlcnZpY2VSZXF1ZXN0EhYK",
            "CnByb2plY3RfaWQYASABKAlCAhgBEhAKBHpvbmUYAiABKAlCAhgBEhYKCmNs",
            "dXN0ZXJfaWQYAyABKAlCAhgBEhoKEm1vbml0b3Jpbmdfc2VydmljZRgEIAEo",
            "CRIMCgRuYW1lGAYgASgJIqIBChZTZXRBZGRvbnNDb25maWdSZXF1ZXN0EhYK",
            "CnByb2plY3RfaWQYASABKAlCAhgBEhAKBHpvbmUYAiABKAlCAhgBEhYKCmNs",
            "dXN0ZXJfaWQYAyABKAlCAhgBEjgKDWFkZG9uc19jb25maWcYBCABKAsyIS5n",
            "b29nbGUuY29udGFpbmVyLnYxLkFkZG9uc0NvbmZpZxIMCgRuYW1lGAYgASgJ",
            "IngKE1NldExvY2F0aW9uc1JlcXVlc3QSFgoKcHJvamVjdF9pZBgBIAEoCUIC",
            "GAESEAoEem9uZRgCIAEoCUICGAESFgoKY2x1c3Rlcl9pZBgDIAEoCUICGAES",
            "EQoJbG9jYXRpb25zGAQgAygJEgwKBG5hbWUYBiABKAkifQoTVXBkYXRlTWFz",
            "dGVyUmVxdWVzdBIWCgpwcm9qZWN0X2lkGAEgASgJQgIYARIQCgR6b25lGAIg",
            "ASgJQgIYARIWCgpjbHVzdGVyX2lkGAMgASgJQgIYARIWCg5tYXN0ZXJfdmVy",
            "c2lvbhgEIAEoCRIMCgRuYW1lGAcgASgJIqsCChRTZXRNYXN0ZXJBdXRoUmVx",
            "dWVzdBIWCgpwcm9qZWN0X2lkGAEgASgJQgIYARIQCgR6b25lGAIgASgJQgIY",
            "ARIWCgpjbHVzdGVyX2lkGAMgASgJQgIYARJACgZhY3Rpb24YBCABKA4yMC5n",
            "b29nbGUuY29udGFpbmVyLnYxLlNldE1hc3RlckF1dGhSZXF1ZXN0LkFjdGlv",
            "bhIvCgZ1cGRhdGUYBSABKAsyHy5nb29nbGUuY29udGFpbmVyLnYxLk1hc3Rl",
            "ckF1dGgSDAoEbmFtZRgHIAEoCSJQCgZBY3Rpb24SCwoHVU5LTk9XThAAEhAK",
            "DFNFVF9QQVNTV09SRBABEhUKEUdFTkVSQVRFX1BBU1NXT1JEEAISEAoMU0VU",
            "X1VTRVJOQU1FEAMiZgoURGVsZXRlQ2x1c3RlclJlcXVlc3QSFgoKcHJvamVj",
            "dF9pZBgBIAEoCUICGAESEAoEem9uZRgCIAEoCUICGAESFgoKY2x1c3Rlcl9p",
            "ZBgDIAEoCUICGAESDAoEbmFtZRgEIAEoCSJPChNMaXN0Q2x1c3RlcnNSZXF1",
            "ZXN0EhYKCnByb2plY3RfaWQYASABKAlCAhgBEhAKBHpvbmUYAiABKAlCAhgB",
            "Eg4KBnBhcmVudBgEIAEoCSJdChRMaXN0Q2x1c3RlcnNSZXNwb25zZRIuCghj",
            "bHVzdGVycxgBIAMoCzIcLmdvb2dsZS5jb250YWluZXIudjEuQ2x1c3RlchIV",
            "Cg1taXNzaW5nX3pvbmVzGAIgAygJImcKE0dldE9wZXJhdGlvblJlcXVlc3QS",
            "FgoKcHJvamVjdF9pZBgBIAEoCUICGAESEAoEem9uZRgCIAEoCUICGAESGAoM",
            "b3BlcmF0aW9uX2lkGAMgASgJQgIYARIMCgRuYW1lGAUgASgJIlEKFUxpc3RP",
            "cGVyYXRpb25zUmVxdWVzdBIWCgpwcm9qZWN0X2lkGAEgASgJQgIYARIQCgR6",
            "b25lGAIgASgJQgIYARIOCgZwYXJlbnQYBCABKAkiagoWQ2FuY2VsT3BlcmF0",
            "aW9uUmVxdWVzdBIWCgpwcm9qZWN0X2lkGAEgASgJQgIYARIQCgR6b25lGAIg",
            "ASgJQgIYARIYCgxvcGVyYXRpb25faWQYAyABKAlCAhgBEgwKBG5hbWUYBCAB",
            "KAkiYwoWTGlzdE9wZXJhdGlvbnNSZXNwb25zZRIyCgpvcGVyYXRpb25zGAEg",
            "AygLMh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24SFQoNbWlzc2lu",
            "Z196b25lcxgCIAMoCSJQChZHZXRTZXJ2ZXJDb25maWdSZXF1ZXN0EhYKCnBy",
            "b2plY3RfaWQYASABKAlCAhgBEhAKBHpvbmUYAiABKAlCAhgBEgwKBG5hbWUY",
            "BCABKAkiogEKDFNlcnZlckNvbmZpZxIfChdkZWZhdWx0X2NsdXN0ZXJfdmVy",
            "c2lvbhgBIAEoCRIbChN2YWxpZF9ub2RlX3ZlcnNpb25zGAMgAygJEhoKEmRl",
            "ZmF1bHRfaW1hZ2VfdHlwZRgEIAEoCRIZChF2YWxpZF9pbWFnZV90eXBlcxgF",
            "IAMoCRIdChV2YWxpZF9tYXN0ZXJfdmVyc2lvbnMYBiADKAkimwEKFUNyZWF0",
            "ZU5vZGVQb29sUmVxdWVzdBIWCgpwcm9qZWN0X2lkGAEgASgJQgIYARIQCgR6",
            "b25lGAIgASgJQgIYARIWCgpjbHVzdGVyX2lkGAMgASgJQgIYARIwCglub2Rl",
            "X3Bvb2wYBCABKAsyHS5nb29nbGUuY29udGFpbmVyLnYxLk5vZGVQb29sEg4K",
            "BnBhcmVudBgGIAEoCSKBAQoVRGVsZXRlTm9kZVBvb2xSZXF1ZXN0EhYKCnBy",
            "b2plY3RfaWQYASABKAlCAhgBEhAKBHpvbmUYAiABKAlCAhgBEhYKCmNsdXN0",
            "ZXJfaWQYAyABKAlCAhgBEhgKDG5vZGVfcG9vbF9pZBgEIAEoCUICGAESDAoE",
            "bmFtZRgGIAEoCSJoChRMaXN0Tm9kZVBvb2xzUmVxdWVzdBIWCgpwcm9qZWN0",
            "X2lkGAEgASgJQgIYARIQCgR6b25lGAIgASgJQgIYARIWCgpjbHVzdGVyX2lk",
            "GAMgASgJQgIYARIOCgZwYXJlbnQYBSABKAkifgoSR2V0Tm9kZVBvb2xSZXF1",
            "ZXN0EhYKCnByb2plY3RfaWQYASABKAlCAhgBEhAKBHpvbmUYAiABKAlCAhgB",
            "EhYKCmNsdXN0ZXJfaWQYAyABKAlCAhgBEhgKDG5vZGVfcG9vbF9pZBgEIAEo",
            "CUICGAESDAoEbmFtZRgGIAEoCSLwAwoITm9kZVBvb2wSDAoEbmFtZRgBIAEo",
            "CRIvCgZjb25maWcYAiABKAsyHy5nb29nbGUuY29udGFpbmVyLnYxLk5vZGVD",
            "b25maWcSGgoSaW5pdGlhbF9ub2RlX2NvdW50GAMgASgFEhEKCXNlbGZfbGlu",
            "axhkIAEoCRIPCgd2ZXJzaW9uGGUgASgJEhsKE2luc3RhbmNlX2dyb3VwX3Vy",
            "bHMYZiADKAkSNAoGc3RhdHVzGGcgASgOMiQuZ29vZ2xlLmNvbnRhaW5lci52",
            "MS5Ob2RlUG9vbC5TdGF0dXMSFgoOc3RhdHVzX21lc3NhZ2UYaCABKAkSPQoL",
            "YXV0b3NjYWxpbmcYBCABKAsyKC5nb29nbGUuY29udGFpbmVyLnYxLk5vZGVQ",
            "b29sQXV0b3NjYWxpbmcSNwoKbWFuYWdlbWVudBgFIAEoCzIjLmdvb2dsZS5j",
            "b250YWluZXIudjEuTm9kZU1hbmFnZW1lbnQigQEKBlN0YXR1cxIWChJTVEFU",
            "VVNfVU5TUEVDSUZJRUQQABIQCgxQUk9WSVNJT05JTkcQARILCgdSVU5OSU5H",
            "EAISFgoSUlVOTklOR19XSVRIX0VSUk9SEAMSDwoLUkVDT05DSUxJTkcQBBIM",
            "CghTVE9QUElORxAFEgkKBUVSUk9SEAYifQoOTm9kZU1hbmFnZW1lbnQSFAoM",
            "YXV0b191cGdyYWRlGAEgASgIEhMKC2F1dG9fcmVwYWlyGAIgASgIEkAKD3Vw",
            "Z3JhZGVfb3B0aW9ucxgKIAEoCzInLmdvb2dsZS5jb250YWluZXIudjEuQXV0",
            "b1VwZ3JhZGVPcHRpb25zIkoKEkF1dG9VcGdyYWRlT3B0aW9ucxIfChdhdXRv",
            "X3VwZ3JhZGVfc3RhcnRfdGltZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEo",
            "CSJLChFNYWludGVuYW5jZVBvbGljeRI2CgZ3aW5kb3cYASABKAsyJi5nb29n",
            "bGUuY29udGFpbmVyLnYxLk1haW50ZW5hbmNlV2luZG93Im4KEU1haW50ZW5h",
            "bmNlV2luZG93Ek8KGGRhaWx5X21haW50ZW5hbmNlX3dpbmRvdxgCIAEoCzIr",
            "Lmdvb2dsZS5jb250YWluZXIudjEuRGFpbHlNYWludGVuYW5jZVdpbmRvd0gA",
            "QggKBnBvbGljeSI+ChZEYWlseU1haW50ZW5hbmNlV2luZG93EhIKCnN0YXJ0",
            "X3RpbWUYAiABKAkSEAoIZHVyYXRpb24YAyABKAkiwQEKHFNldE5vZGVQb29s",
            "TWFuYWdlbWVudFJlcXVlc3QSFgoKcHJvamVjdF9pZBgBIAEoCUICGAESEAoE",
            "em9uZRgCIAEoCUICGAESFgoKY2x1c3Rlcl9pZBgDIAEoCUICGAESGAoMbm9k",
            "ZV9wb29sX2lkGAQgASgJQgIYARI3CgptYW5hZ2VtZW50GAUgASgLMiMuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5Ob2RlTWFuYWdlbWVudBIMCgRuYW1lGAcgASgJ",
            "IpYBChZTZXROb2RlUG9vbFNpemVSZXF1ZXN0EhYKCnByb2plY3RfaWQYASAB",
            "KAlCAhgBEhAKBHpvbmUYAiABKAlCAhgBEhYKCmNsdXN0ZXJfaWQYAyABKAlC",
            "AhgBEhgKDG5vZGVfcG9vbF9pZBgEIAEoCUICGAESEgoKbm9kZV9jb3VudBgF",
            "IAEoBRIMCgRuYW1lGAcgASgJIooBCh5Sb2xsYmFja05vZGVQb29sVXBncmFk",
            "ZVJlcXVlc3QSFgoKcHJvamVjdF9pZBgBIAEoCUICGAESEAoEem9uZRgCIAEo",
            "CUICGAESFgoKY2x1c3Rlcl9pZBgDIAEoCUICGAESGAoMbm9kZV9wb29sX2lk",
            "GAQgASgJQgIYARIMCgRuYW1lGAYgASgJIkoKFUxpc3ROb2RlUG9vbHNSZXNw",
            "b25zZRIxCgpub2RlX3Bvb2xzGAEgAygLMh0uZ29vZ2xlLmNvbnRhaW5lci52",
            "MS5Ob2RlUG9vbCJWChNOb2RlUG9vbEF1dG9zY2FsaW5nEg8KB2VuYWJsZWQY",
            "ASABKAgSFgoObWluX25vZGVfY291bnQYAiABKAUSFgoObWF4X25vZGVfY291",
            "bnQYAyABKAUiiAIKEFNldExhYmVsc1JlcXVlc3QSFgoKcHJvamVjdF9pZBgB",
            "IAEoCUICGAESEAoEem9uZRgCIAEoCUICGAESFgoKY2x1c3Rlcl9pZBgDIAEo",
            "CUICGAESUgoPcmVzb3VyY2VfbGFiZWxzGAQgAygLMjkuZ29vZ2xlLmNvbnRh",
            "aW5lci52MS5TZXRMYWJlbHNSZXF1ZXN0LlJlc291cmNlTGFiZWxzRW50cnkS",
            "GQoRbGFiZWxfZmluZ2VycHJpbnQYBSABKAkSDAoEbmFtZRgHIAEoCRo1ChNS",
            "ZXNvdXJjZUxhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAEidwoUU2V0TGVnYWN5QWJhY1JlcXVlc3QSFgoKcHJvamVjdF9pZBgB",
            "IAEoCUICGAESEAoEem9uZRgCIAEoCUICGAESFgoKY2x1c3Rlcl9pZBgDIAEo",
            "CUICGAESDwoHZW5hYmxlZBgEIAEoCBIMCgRuYW1lGAYgASgJIoQBChZTdGFy",
            "dElQUm90YXRpb25SZXF1ZXN0EhYKCnByb2plY3RfaWQYASABKAlCAhgBEhAK",
            "BHpvbmUYAiABKAlCAhgBEhYKCmNsdXN0ZXJfaWQYAyABKAlCAhgBEgwKBG5h",
            "bWUYBiABKAkSGgoScm90YXRlX2NyZWRlbnRpYWxzGAcgASgIImsKGUNvbXBs",
            "ZXRlSVBSb3RhdGlvblJlcXVlc3QSFgoKcHJvamVjdF9pZBgBIAEoCUICGAES",
            "EAoEem9uZRgCIAEoCUICGAESFgoKY2x1c3Rlcl9pZBgDIAEoCUICGAESDAoE",
            "bmFtZRgHIAEoCSJIChFBY2NlbGVyYXRvckNvbmZpZxIZChFhY2NlbGVyYXRv",
            "cl9jb3VudBgBIAEoAxIYChBhY2NlbGVyYXRvcl90eXBlGAIgASgJIqUBChdT",
            "ZXROZXR3b3JrUG9saWN5UmVxdWVzdBIWCgpwcm9qZWN0X2lkGAEgASgJQgIY",
            "ARIQCgR6b25lGAIgASgJQgIYARIWCgpjbHVzdGVyX2lkGAMgASgJQgIYARI6",
            "Cg5uZXR3b3JrX3BvbGljeRgEIAEoCzIiLmdvb2dsZS5jb250YWluZXIudjEu",
            "TmV0d29ya1BvbGljeRIMCgRuYW1lGAYgASgJIqUBChtTZXRNYWludGVuYW5j",
            "ZVBvbGljeVJlcXVlc3QSEgoKcHJvamVjdF9pZBgBIAEoCRIMCgR6b25lGAIg",
            "ASgJEhIKCmNsdXN0ZXJfaWQYAyABKAkSQgoSbWFpbnRlbmFuY2VfcG9saWN5",
            "GAQgASgLMiYuZ29vZ2xlLmNvbnRhaW5lci52MS5NYWludGVuYW5jZVBvbGlj",
            "eRIMCgRuYW1lGAUgASgJIjQKDU5ldHdvcmtDb25maWcSDwoHbmV0d29yaxgB",
            "IAEoCRISCgpzdWJuZXR3b3JrGAIgASgJMss5Cg5DbHVzdGVyTWFuYWdlchLM",
            "AQoMTGlzdENsdXN0ZXJzEiguZ29vZ2xlLmNvbnRhaW5lci52MS5MaXN0Q2x1",
            "c3RlcnNSZXF1ZXN0GikuZ29vZ2xlLmNvbnRhaW5lci52MS5MaXN0Q2x1c3Rl",
            "cnNSZXNwb25zZSJngtPkkwJhEiwvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xv",
            "Y2F0aW9ucy8qfS9jbHVzdGVyc1oxEi8vdjEvcHJvamVjdHMve3Byb2plY3Rf",
            "aWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycxLIAQoKR2V0Q2x1c3RlchImLmdv",
            "b2dsZS5jb250YWluZXIudjEuR2V0Q2x1c3RlclJlcXVlc3QaHC5nb29nbGUu",
            "Y29udGFpbmVyLnYxLkNsdXN0ZXIidILT5JMCbhIsL3YxL3tuYW1lPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMvKn1aPhI8L3YxL3Byb2plY3Rz",
            "L3twcm9qZWN0X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJf",
            "aWR9EskBCg1DcmVhdGVDbHVzdGVyEikuZ29vZ2xlLmNvbnRhaW5lci52MS5D",
            "cmVhdGVDbHVzdGVyUmVxdWVzdBoeLmdvb2dsZS5jb250YWluZXIudjEuT3Bl",
            "cmF0aW9uIm2C0+STAmciLC92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRp",
            "b25zLyp9L2NsdXN0ZXJzOgEqWjQiLy92MS9wcm9qZWN0cy97cHJvamVjdF9p",
            "ZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJzOgEqEtYBCg1VcGRhdGVDbHVzdGVy",
            "EikuZ29vZ2xlLmNvbnRhaW5lci52MS5VcGRhdGVDbHVzdGVyUmVxdWVzdBoe",
            "Lmdvb2dsZS5jb250YWluZXIudjEuT3BlcmF0aW9uInqC0+STAnQaLC92MS97",
            "bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9OgEqWkEa",
            "PC92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0",
            "ZXJzL3tjbHVzdGVyX2lkfToBKhKGAgoOVXBkYXRlTm9kZVBvb2wSKi5nb29n",
            "bGUuY29udGFpbmVyLnYxLlVwZGF0ZU5vZGVQb29sUmVxdWVzdBoeLmdvb2ds",
            "ZS5jb250YWluZXIudjEuT3BlcmF0aW9uIqcBgtPkkwKgARo4L3YxL3tuYW1l",
            "PXByb2plY3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMvKi9ub2RlUG9vbHMv",
            "Kn06ASpaYSJcL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9u",
            "ZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9L25vZGVQb29scy97bm9kZV9wb29s",
            "X2lkfS91cGRhdGU6ASoSqgIKFlNldE5vZGVQb29sQXV0b3NjYWxpbmcSMi5n",
            "b29nbGUuY29udGFpbmVyLnYxLlNldE5vZGVQb29sQXV0b3NjYWxpbmdSZXF1",
            "ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24iuwGC0+STArQB",
            "IkcvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8q",
            "L25vZGVQb29scy8qfTpzZXRBdXRvc2NhbGluZzoBKlpmImEvdjEvcHJvamVj",
            "dHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rl",
            "cl9pZH0vbm9kZVBvb2xzL3tub2RlX3Bvb2xfaWR9L2F1dG9zY2FsaW5nOgEq",
            "EvMBChFTZXRMb2dnaW5nU2VydmljZRItLmdvb2dsZS5jb250YWluZXIudjEu",
            "U2V0TG9nZ2luZ1NlcnZpY2VSZXF1ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5lci52",
            "MS5PcGVyYXRpb24ijgGC0+STAocBIjcvdjEve25hbWU9cHJvamVjdHMvKi9s",
            "b2NhdGlvbnMvKi9jbHVzdGVycy8qfTpzZXRMb2dnaW5nOgEqWkkiRC92MS9w",
            "cm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJzL3tj",
            "bHVzdGVyX2lkfS9sb2dnaW5nOgEqEv8BChRTZXRNb25pdG9yaW5nU2Vydmlj",
            "ZRIwLmdvb2dsZS5jb250YWluZXIudjEuU2V0TW9uaXRvcmluZ1NlcnZpY2VS",
            "ZXF1ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24ilAGC0+ST",
            "Ao0BIjovdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVy",
            "cy8qfTpzZXRNb25pdG9yaW5nOgEqWkwiRy92MS9wcm9qZWN0cy97cHJvamVj",
            "dF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9tb25p",
            "dG9yaW5nOgEqEu0BCg9TZXRBZGRvbnNDb25maWcSKy5nb29nbGUuY29udGFp",
            "bmVyLnYxLlNldEFkZG9uc0NvbmZpZ1JlcXVlc3QaHi5nb29nbGUuY29udGFp",
            "bmVyLnYxLk9wZXJhdGlvbiKMAYLT5JMChQEiNi92MS97bmFtZT1wcm9qZWN0",
            "cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9OnNldEFkZG9uczoBKlpIIkMv",
            "djEvcHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVy",
            "cy97Y2x1c3Rlcl9pZH0vYWRkb25zOgEqEu0BCgxTZXRMb2NhdGlvbnMSKC5n",
            "b29nbGUuY29udGFpbmVyLnYxLlNldExvY2F0aW9uc1JlcXVlc3QaHi5nb29n",
            "bGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiKSAYLT5JMCiwEiOS92MS97bmFt",
            "ZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9OnNldExvY2F0",
            "aW9uczoBKlpLIkYvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6",
            "b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH0vbG9jYXRpb25zOgEqEuoBCgxV",
            "cGRhdGVNYXN0ZXISKC5nb29nbGUuY29udGFpbmVyLnYxLlVwZGF0ZU1hc3Rl",
            "clJlcXVlc3QaHi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiKPAYLT",
            "5JMCiAEiOS92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0",
            "ZXJzLyp9OnVwZGF0ZU1hc3RlcjoBKlpIIkMvdjEvcHJvamVjdHMve3Byb2pl",
            "Y3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH0vbWFz",
            "dGVyOgEqEvQBCg1TZXRNYXN0ZXJBdXRoEikuZ29vZ2xlLmNvbnRhaW5lci52",
            "MS5TZXRNYXN0ZXJBdXRoUmVxdWVzdBoeLmdvb2dsZS5jb250YWluZXIudjEu",
            "T3BlcmF0aW9uIpcBgtPkkwKQASI6L3YxL3tuYW1lPXByb2plY3RzLyovbG9j",
            "YXRpb25zLyovY2x1c3RlcnMvKn06c2V0TWFzdGVyQXV0aDoBKlpPIkovdjEv",
            "cHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97",
            "Y2x1c3Rlcl9pZH06c2V0TWFzdGVyQXV0aDoBKhLQAQoNRGVsZXRlQ2x1c3Rl",
            "chIpLmdvb2dsZS5jb250YWluZXIudjEuRGVsZXRlQ2x1c3RlclJlcXVlc3Qa",
            "Hi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiJ0gtPkkwJuKiwvdjEv",
            "e25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qfVo+Kjwv",
            "djEvcHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVy",
            "cy97Y2x1c3Rlcl9pZH0S1gEKDkxpc3RPcGVyYXRpb25zEiouZ29vZ2xlLmNv",
            "bnRhaW5lci52MS5MaXN0T3BlcmF0aW9uc1JlcXVlc3QaKy5nb29nbGUuY29u",
            "dGFpbmVyLnYxLkxpc3RPcGVyYXRpb25zUmVzcG9uc2Uia4LT5JMCZRIuL3Yx",
            "L3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vb3BlcmF0aW9uc1oz",
            "EjEvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9vcGVy",
            "YXRpb25zEtQBCgxHZXRPcGVyYXRpb24SKC5nb29nbGUuY29udGFpbmVyLnYx",
            "LkdldE9wZXJhdGlvblJlcXVlc3QaHi5nb29nbGUuY29udGFpbmVyLnYxLk9w",
            "ZXJhdGlvbiJ6gtPkkwJ0Ei4vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlv",
            "bnMvKi9vcGVyYXRpb25zLyp9WkISQC92MS9wcm9qZWN0cy97cHJvamVjdF9p",
            "ZH0vem9uZXMve3pvbmV9L29wZXJhdGlvbnMve29wZXJhdGlvbl9pZH0S6AEK",
            "D0NhbmNlbE9wZXJhdGlvbhIrLmdvb2dsZS5jb250YWluZXIudjEuQ2FuY2Vs",
            "T3BlcmF0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSKPAYLT",
            "5JMCiAEiNS92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL29wZXJh",
            "dGlvbnMvKn06Y2FuY2VsOgEqWkwiRy92MS9wcm9qZWN0cy97cHJvamVjdF9p",
            "ZH0vem9uZXMve3pvbmV9L29wZXJhdGlvbnMve29wZXJhdGlvbl9pZH06Y2Fu",
            "Y2VsOgEqEtABCg9HZXRTZXJ2ZXJDb25maWcSKy5nb29nbGUuY29udGFpbmVy",
            "LnYxLkdldFNlcnZlckNvbmZpZ1JlcXVlc3QaIS5nb29nbGUuY29udGFpbmVy",
            "LnYxLlNlcnZlckNvbmZpZyJtgtPkkwJnEi4vdjEve25hbWU9cHJvamVjdHMv",
            "Ki9sb2NhdGlvbnMvKn0vc2VydmVyQ29uZmlnWjUSMy92MS9wcm9qZWN0cy97",
            "cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L3NlcnZlcmNvbmZpZxL0AQoNTGlz",
            "dE5vZGVQb29scxIpLmdvb2dsZS5jb250YWluZXIudjEuTGlzdE5vZGVQb29s",
            "c1JlcXVlc3QaKi5nb29nbGUuY29udGFpbmVyLnYxLkxpc3ROb2RlUG9vbHNS",
            "ZXNwb25zZSKLAYLT5JMChAESOC92MS97cGFyZW50PXByb2plY3RzLyovbG9j",
            "YXRpb25zLyovY2x1c3RlcnMvKn0vbm9kZVBvb2xzWkgSRi92MS9wcm9qZWN0",
            "cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVy",
            "X2lkfS9ub2RlUG9vbHMS8gEKC0dldE5vZGVQb29sEicuZ29vZ2xlLmNvbnRh",
            "aW5lci52MS5HZXROb2RlUG9vbFJlcXVlc3QaHS5nb29nbGUuY29udGFpbmVy",
            "LnYxLk5vZGVQb29sIpoBgtPkkwKTARI4L3YxL3tuYW1lPXByb2plY3RzLyov",
            "bG9jYXRpb25zLyovY2x1c3RlcnMvKi9ub2RlUG9vbHMvKn1aVxJVL3YxL3By",
            "b2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2Ns",
            "dXN0ZXJfaWR9L25vZGVQb29scy97bm9kZV9wb29sX2lkfRLwAQoOQ3JlYXRl",
            "Tm9kZVBvb2wSKi5nb29nbGUuY29udGFpbmVyLnYxLkNyZWF0ZU5vZGVQb29s",
            "UmVxdWVzdBoeLmdvb2dsZS5jb250YWluZXIudjEuT3BlcmF0aW9uIpEBgtPk",
            "kwKKASI4L3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVz",
            "dGVycy8qfS9ub2RlUG9vbHM6ASpaSyJGL3YxL3Byb2plY3RzL3twcm9qZWN0",
            "X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9L25vZGVQ",
            "b29sczoBKhL5AQoORGVsZXRlTm9kZVBvb2wSKi5nb29nbGUuY29udGFpbmVy",
            "LnYxLkRlbGV0ZU5vZGVQb29sUmVxdWVzdBoeLmdvb2dsZS5jb250YWluZXIu",
            "djEuT3BlcmF0aW9uIpoBgtPkkwKTASo4L3YxL3tuYW1lPXByb2plY3RzLyov",
            "bG9jYXRpb25zLyovY2x1c3RlcnMvKi9ub2RlUG9vbHMvKn1aVypVL3YxL3By",
            "b2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2Ns",
            "dXN0ZXJfaWR9L25vZGVQb29scy97bm9kZV9wb29sX2lkfRKjAgoXUm9sbGJh",
            "Y2tOb2RlUG9vbFVwZ3JhZGUSMy5nb29nbGUuY29udGFpbmVyLnYxLlJvbGxi",
            "YWNrTm9kZVBvb2xVcGdyYWRlUmVxdWVzdBoeLmdvb2dsZS5jb250YWluZXIu",
            "djEuT3BlcmF0aW9uIrIBgtPkkwKrASJBL3YxL3tuYW1lPXByb2plY3RzLyov",
            "bG9jYXRpb25zLyovY2x1c3RlcnMvKi9ub2RlUG9vbHMvKn06cm9sbGJhY2s6",
            "ASpaYyJeL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9uZX0v",
            "Y2x1c3RlcnMve2NsdXN0ZXJfaWR9L25vZGVQb29scy97bm9kZV9wb29sX2lk",
            "fTpyb2xsYmFjazoBKhKpAgoVU2V0Tm9kZVBvb2xNYW5hZ2VtZW50EjEuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5TZXROb2RlUG9vbE1hbmFnZW1lbnRSZXF1ZXN0",
            "Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24ivAGC0+STArUBIkYv",
            "djEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qL25v",
            "ZGVQb29scy8qfTpzZXRNYW5hZ2VtZW50OgEqWmgiYy92MS9wcm9qZWN0cy97",
            "cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVyX2lk",
            "fS9ub2RlUG9vbHMve25vZGVfcG9vbF9pZH0vc2V0TWFuYWdlbWVudDoBKhLx",
            "AQoJU2V0TGFiZWxzEiUuZ29vZ2xlLmNvbnRhaW5lci52MS5TZXRMYWJlbHNS",
            "ZXF1ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24inAGC0+ST",
            "ApUBIj4vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVy",
            "cy8qfTpzZXRSZXNvdXJjZUxhYmVsczoBKlpQIksvdjEvcHJvamVjdHMve3By",
            "b2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH0v",
            "cmVzb3VyY2VMYWJlbHM6ASoS8QEKDVNldExlZ2FjeUFiYWMSKS5nb29nbGUu",
            "Y29udGFpbmVyLnYxLlNldExlZ2FjeUFiYWNSZXF1ZXN0Gh4uZ29vZ2xlLmNv",
            "bnRhaW5lci52MS5PcGVyYXRpb24ilAGC0+STAo0BIjovdjEve25hbWU9cHJv",
            "amVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qfTpzZXRMZWdhY3lBYmFj",
            "OgEqWkwiRy92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9",
            "L2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9sZWdhY3lBYmFjOgEqEvwBCg9TdGFy",
            "dElQUm90YXRpb24SKy5nb29nbGUuY29udGFpbmVyLnYxLlN0YXJ0SVBSb3Rh",
            "dGlvblJlcXVlc3QaHi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiKb",
            "AYLT5JMClAEiPC92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2Ns",
            "dXN0ZXJzLyp9OnN0YXJ0SXBSb3RhdGlvbjoBKlpRIkwvdjEvcHJvamVjdHMv",
            "e3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9p",
            "ZH06c3RhcnRJcFJvdGF0aW9uOgEqEogCChJDb21wbGV0ZUlQUm90YXRpb24S",
            "Li5nb29nbGUuY29udGFpbmVyLnYxLkNvbXBsZXRlSVBSb3RhdGlvblJlcXVl",
            "c3QaHi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiKhAYLT5JMCmgEi",
            "Py92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9",
            "OmNvbXBsZXRlSXBSb3RhdGlvbjoBKlpUIk8vdjEvcHJvamVjdHMve3Byb2pl",
            "Y3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH06Y29t",
            "cGxldGVJcFJvdGF0aW9uOgEqEpECCg9TZXROb2RlUG9vbFNpemUSKy5nb29n",
            "bGUuY29udGFpbmVyLnYxLlNldE5vZGVQb29sU2l6ZVJlcXVlc3QaHi5nb29n",
            "bGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiKwAYLT5JMCqQEiQC92MS97bmFt",
            "ZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyovbm9kZVBvb2xz",
            "Lyp9OnNldFNpemU6ASpaYiJdL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96",
            "b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9L25vZGVQb29scy97",
            "bm9kZV9wb29sX2lkfS9zZXRTaXplOgEqEoACChBTZXROZXR3b3JrUG9saWN5",
            "EiwuZ29vZ2xlLmNvbnRhaW5lci52MS5TZXROZXR3b3JrUG9saWN5UmVxdWVz",
            "dBoeLmdvb2dsZS5jb250YWluZXIudjEuT3BlcmF0aW9uIp0BgtPkkwKWASI9",
            "L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMvKn06",
            "c2V0TmV0d29ya1BvbGljeToBKlpSIk0vdjEvcHJvamVjdHMve3Byb2plY3Rf",
            "aWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH06c2V0TmV0",
            "d29ya1BvbGljeToBKhKQAgoUU2V0TWFpbnRlbmFuY2VQb2xpY3kSMC5nb29n",
            "bGUuY29udGFpbmVyLnYxLlNldE1haW50ZW5hbmNlUG9saWN5UmVxdWVzdBoe",
            "Lmdvb2dsZS5jb250YWluZXIudjEuT3BlcmF0aW9uIqUBgtPkkwKeASJBL3Yx",
            "L3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMvKn06c2V0",
            "TWFpbnRlbmFuY2VQb2xpY3k6ASpaViJRL3YxL3Byb2plY3RzL3twcm9qZWN0",
            "X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9OnNldE1h",
            "aW50ZW5hbmNlUG9saWN5OgEqQqYBChdjb20uZ29vZ2xlLmNvbnRhaW5lci52",
            "MUITQ2x1c3RlclNlcnZpY2VQcm90b1ABWjxnb29nbGUuZ29sYW5nLm9yZy9n",
            "ZW5wcm90by9nb29nbGVhcGlzL2NvbnRhaW5lci92MTtjb250YWluZXKqAhlH",
            "b29nbGUuQ2xvdWQuQ29udGFpbmVyLlYxygIZR29vZ2xlXENsb3VkXENvbnRh",
            "aW5lclxWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodeConfig), global::Google.Cloud.Container.V1.NodeConfig.Parser, new[]{ "MachineType", "DiskSizeGb", "OauthScopes", "ServiceAccount", "Metadata", "ImageType", "Labels", "LocalSsdCount", "Tags", "Preemptible", "Accelerators", "DiskType", "MinCpuPlatform" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MasterAuth), global::Google.Cloud.Container.V1.MasterAuth.Parser, new[]{ "Username", "Password", "ClientCertificateConfig", "ClusterCaCertificate", "ClientCertificate", "ClientKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ClientCertificateConfig), global::Google.Cloud.Container.V1.ClientCertificateConfig.Parser, new[]{ "IssueClientCertificate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AddonsConfig), global::Google.Cloud.Container.V1.AddonsConfig.Parser, new[]{ "HttpLoadBalancing", "HorizontalPodAutoscaling", "KubernetesDashboard", "NetworkPolicyConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.HttpLoadBalancing), global::Google.Cloud.Container.V1.HttpLoadBalancing.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.HorizontalPodAutoscaling), global::Google.Cloud.Container.V1.HorizontalPodAutoscaling.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.KubernetesDashboard), global::Google.Cloud.Container.V1.KubernetesDashboard.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NetworkPolicyConfig), global::Google.Cloud.Container.V1.NetworkPolicyConfig.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.PrivateClusterConfig), global::Google.Cloud.Container.V1.PrivateClusterConfig.Parser, new[]{ "EnablePrivateNodes", "EnablePrivateEndpoint", "MasterIpv4CidrBlock", "PrivateEndpoint", "PublicEndpoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig), global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Parser, new[]{ "Enabled", "CidrBlocks" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock), global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock.Parser, new[]{ "DisplayName", "CidrBlock_" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.LegacyAbac), global::Google.Cloud.Container.V1.LegacyAbac.Parser, new[]{ "Enabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NetworkPolicy), global::Google.Cloud.Container.V1.NetworkPolicy.Parser, new[]{ "Provider", "Enabled" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.IPAllocationPolicy), global::Google.Cloud.Container.V1.IPAllocationPolicy.Parser, new[]{ "UseIpAliases", "CreateSubnetwork", "SubnetworkName", "ClusterIpv4Cidr", "NodeIpv4Cidr", "ServicesIpv4Cidr", "ClusterSecondaryRangeName", "ServicesSecondaryRangeName", "ClusterIpv4CidrBlock", "NodeIpv4CidrBlock", "ServicesIpv4CidrBlock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.Cluster), global::Google.Cloud.Container.V1.Cluster.Parser, new[]{ "Name", "Description", "InitialNodeCount", "NodeConfig", "MasterAuth", "LoggingService", "MonitoringService", "Network", "ClusterIpv4Cidr", "AddonsConfig", "Subnetwork", "NodePools", "Locations", "EnableKubernetesAlpha", "ResourceLabels", "LabelFingerprint", "LegacyAbac", "NetworkPolicy", "IpAllocationPolicy", "MasterAuthorizedNetworksConfig", "MaintenancePolicy", "NetworkConfig", "PrivateClusterConfig", "SelfLink", "Zone", "Endpoint", "InitialClusterVersion", "CurrentMasterVersion", "CurrentNodeVersion", "CreateTime", "Status", "StatusMessage", "NodeIpv4CidrSize", "ServicesIpv4Cidr", "InstanceGroupUrls", "CurrentNodeCount", "ExpireTime", "Location" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.Cluster.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ClusterUpdate), global::Google.Cloud.Container.V1.ClusterUpdate.Parser, new[]{ "DesiredNodeVersion", "DesiredMonitoringService", "DesiredAddonsConfig", "DesiredNodePoolId", "DesiredImageType", "DesiredNodePoolAutoscaling", "DesiredLocations", "DesiredMasterAuthorizedNetworksConfig", "DesiredMasterVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.Operation), global::Google.Cloud.Container.V1.Operation.Parser, new[]{ "Name", "Zone", "OperationType", "Status", "Detail", "StatusMessage", "SelfLink", "TargetLink", "Location", "StartTime", "EndTime" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.Operation.Types.Status), typeof(global::Google.Cloud.Container.V1.Operation.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CreateClusterRequest), global::Google.Cloud.Container.V1.CreateClusterRequest.Parser, new[]{ "ProjectId", "Zone", "Cluster", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetClusterRequest), global::Google.Cloud.Container.V1.GetClusterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UpdateClusterRequest), global::Google.Cloud.Container.V1.UpdateClusterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Update", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UpdateNodePoolRequest), global::Google.Cloud.Container.V1.UpdateNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "NodeVersion", "ImageType", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNodePoolAutoscalingRequest), global::Google.Cloud.Container.V1.SetNodePoolAutoscalingRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Autoscaling", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLoggingServiceRequest), global::Google.Cloud.Container.V1.SetLoggingServiceRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "LoggingService", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetMonitoringServiceRequest), global::Google.Cloud.Container.V1.SetMonitoringServiceRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "MonitoringService", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetAddonsConfigRequest), global::Google.Cloud.Container.V1.SetAddonsConfigRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "AddonsConfig", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLocationsRequest), global::Google.Cloud.Container.V1.SetLocationsRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Locations", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UpdateMasterRequest), global::Google.Cloud.Container.V1.UpdateMasterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "MasterVersion", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetMasterAuthRequest), global::Google.Cloud.Container.V1.SetMasterAuthRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Action", "Update", "Name" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.DeleteClusterRequest), global::Google.Cloud.Container.V1.DeleteClusterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListClustersRequest), global::Google.Cloud.Container.V1.ListClustersRequest.Parser, new[]{ "ProjectId", "Zone", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListClustersResponse), global::Google.Cloud.Container.V1.ListClustersResponse.Parser, new[]{ "Clusters", "MissingZones" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetOperationRequest), global::Google.Cloud.Container.V1.GetOperationRequest.Parser, new[]{ "ProjectId", "Zone", "OperationId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListOperationsRequest), global::Google.Cloud.Container.V1.ListOperationsRequest.Parser, new[]{ "ProjectId", "Zone", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CancelOperationRequest), global::Google.Cloud.Container.V1.CancelOperationRequest.Parser, new[]{ "ProjectId", "Zone", "OperationId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListOperationsResponse), global::Google.Cloud.Container.V1.ListOperationsResponse.Parser, new[]{ "Operations", "MissingZones" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetServerConfigRequest), global::Google.Cloud.Container.V1.GetServerConfigRequest.Parser, new[]{ "ProjectId", "Zone", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ServerConfig), global::Google.Cloud.Container.V1.ServerConfig.Parser, new[]{ "DefaultClusterVersion", "ValidNodeVersions", "DefaultImageType", "ValidImageTypes", "ValidMasterVersions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CreateNodePoolRequest), global::Google.Cloud.Container.V1.CreateNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePool", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.DeleteNodePoolRequest), global::Google.Cloud.Container.V1.DeleteNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListNodePoolsRequest), global::Google.Cloud.Container.V1.ListNodePoolsRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetNodePoolRequest), global::Google.Cloud.Container.V1.GetNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodePool), global::Google.Cloud.Container.V1.NodePool.Parser, new[]{ "Name", "Config", "InitialNodeCount", "SelfLink", "Version", "InstanceGroupUrls", "Status", "StatusMessage", "Autoscaling", "Management" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.NodePool.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodeManagement), global::Google.Cloud.Container.V1.NodeManagement.Parser, new[]{ "AutoUpgrade", "AutoRepair", "UpgradeOptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AutoUpgradeOptions), global::Google.Cloud.Container.V1.AutoUpgradeOptions.Parser, new[]{ "AutoUpgradeStartTime", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MaintenancePolicy), global::Google.Cloud.Container.V1.MaintenancePolicy.Parser, new[]{ "Window" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MaintenanceWindow), global::Google.Cloud.Container.V1.MaintenanceWindow.Parser, new[]{ "DailyMaintenanceWindow" }, new[]{ "Policy" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.DailyMaintenanceWindow), global::Google.Cloud.Container.V1.DailyMaintenanceWindow.Parser, new[]{ "StartTime", "Duration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNodePoolManagementRequest), global::Google.Cloud.Container.V1.SetNodePoolManagementRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Management", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNodePoolSizeRequest), global::Google.Cloud.Container.V1.SetNodePoolSizeRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "NodeCount", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.RollbackNodePoolUpgradeRequest), global::Google.Cloud.Container.V1.RollbackNodePoolUpgradeRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListNodePoolsResponse), global::Google.Cloud.Container.V1.ListNodePoolsResponse.Parser, new[]{ "NodePools" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodePoolAutoscaling), global::Google.Cloud.Container.V1.NodePoolAutoscaling.Parser, new[]{ "Enabled", "MinNodeCount", "MaxNodeCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLabelsRequest), global::Google.Cloud.Container.V1.SetLabelsRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "ResourceLabels", "LabelFingerprint", "Name" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLegacyAbacRequest), global::Google.Cloud.Container.V1.SetLegacyAbacRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Enabled", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.StartIPRotationRequest), global::Google.Cloud.Container.V1.StartIPRotationRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name", "RotateCredentials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CompleteIPRotationRequest), global::Google.Cloud.Container.V1.CompleteIPRotationRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AcceleratorConfig), global::Google.Cloud.Container.V1.AcceleratorConfig.Parser, new[]{ "AcceleratorCount", "AcceleratorType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNetworkPolicyRequest), global::Google.Cloud.Container.V1.SetNetworkPolicyRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NetworkPolicy", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetMaintenancePolicyRequest), global::Google.Cloud.Container.V1.SetMaintenancePolicyRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "MaintenancePolicy", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NetworkConfig), global::Google.Cloud.Container.V1.NetworkConfig.Parser, new[]{ "Network", "Subnetwork" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Parameters that describe the nodes in a cluster.
  /// </summary>
  public sealed partial class NodeConfig : pb::IMessage<NodeConfig> {
    private static readonly pb::MessageParser<NodeConfig> _parser = new pb::MessageParser<NodeConfig>(() => new NodeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeConfig(NodeConfig other) : this() {
      machineType_ = other.machineType_;
      diskSizeGb_ = other.diskSizeGb_;
      oauthScopes_ = other.oauthScopes_.Clone();
      serviceAccount_ = other.serviceAccount_;
      metadata_ = other.metadata_.Clone();
      imageType_ = other.imageType_;
      labels_ = other.labels_.Clone();
      localSsdCount_ = other.localSsdCount_;
      tags_ = other.tags_.Clone();
      preemptible_ = other.preemptible_;
      accelerators_ = other.accelerators_.Clone();
      diskType_ = other.diskType_;
      minCpuPlatform_ = other.minCpuPlatform_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeConfig Clone() {
      return new NodeConfig(this);
    }

    /// <summary>Field number for the "machine_type" field.</summary>
    public const int MachineTypeFieldNumber = 1;
    private string machineType_ = "";
    /// <summary>
    /// The name of a Google Compute Engine [machine
    /// type](/compute/docs/machine-types) (e.g.
    /// `n1-standard-1`).
    ///
    /// If unspecified, the default machine type is
    /// `n1-standard-1`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineType {
      get { return machineType_; }
      set {
        machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disk_size_gb" field.</summary>
    public const int DiskSizeGbFieldNumber = 2;
    private int diskSizeGb_;
    /// <summary>
    /// Size of the disk attached to each node, specified in GB.
    /// The smallest allowed disk size is 10GB.
    ///
    /// If unspecified, the default disk size is 100GB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DiskSizeGb {
      get { return diskSizeGb_; }
      set {
        diskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "oauth_scopes" field.</summary>
    public const int OauthScopesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_oauthScopes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> oauthScopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The set of Google API scopes to be made available on all of the
    /// node VMs under the "default" service account.
    ///
    /// The following scopes are recommended, but not required, and by default are
    /// not included:
    ///
    /// * `https://www.googleapis.com/auth/compute` is required for mounting
    /// persistent storage on your nodes.
    /// * `https://www.googleapis.com/auth/devstorage.read_only` is required for
    /// communicating with **gcr.io**
    /// (the [Google Container Registry](/container-registry/)).
    ///
    /// If unspecified, no scopes are added, unless Cloud Logging or Cloud
    /// Monitoring are enabled, in which case their required scopes will be added.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OauthScopes {
      get { return oauthScopes_; }
    }

    /// <summary>Field number for the "service_account" field.</summary>
    public const int ServiceAccountFieldNumber = 9;
    private string serviceAccount_ = "";
    /// <summary>
    /// The Google Cloud Platform Service Account to be used by the node VMs. If
    /// no Service Account is specified, the "default" service account is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccount {
      get { return serviceAccount_; }
      set {
        serviceAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The metadata key/value pairs assigned to instances in the cluster.
    ///
    /// Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
    /// in length. These are reflected as part of a URL in the metadata server.
    /// Additionally, to avoid ambiguity, keys must not conflict with any other
    /// metadata keys for the project or be one of the reserved keys:
    ///  "cluster-location"
    ///  "cluster-name"
    ///  "cluster-uid"
    ///  "configure-sh"
    ///  "enable-os-login"
    ///  "gci-update-strategy"
    ///  "gci-ensure-gke-docker"
    ///  "instance-template"
    ///  "kube-env"
    ///  "startup-script"
    ///  "user-data"
    ///
    /// Values are free-form strings, and only have meaning as interpreted by
    /// the image running in the instance. The only restriction placed on them is
    /// that each value's size must be less than or equal to 32 KB.
    ///
    /// The total size of all keys and values must be less than 512 KB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "image_type" field.</summary>
    public const int ImageTypeFieldNumber = 5;
    private string imageType_ = "";
    /// <summary>
    /// The image type to use for this node. Note that for a given image type,
    /// the latest version of it will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageType {
      get { return imageType_; }
      set {
        imageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The map of Kubernetes labels (key/value pairs) to be applied to each node.
    /// These will added in addition to any default label(s) that
    /// Kubernetes may apply to the node.
    /// In case of conflict in label keys, the applied set may differ depending on
    /// the Kubernetes version -- it's best to assume the behavior is undefined
    /// and conflicts should be avoided.
    /// For more information, including usage and the valid values, see:
    /// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "local_ssd_count" field.</summary>
    public const int LocalSsdCountFieldNumber = 7;
    private int localSsdCount_;
    /// <summary>
    /// The number of local SSD disks to be attached to the node.
    ///
    /// The limit for this value is dependant upon the maximum number of
    /// disks available on a machine per zone. See:
    /// https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocalSsdCount {
      get { return localSsdCount_; }
      set {
        localSsdCount_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of instance tags applied to all nodes. Tags are used to identify
    /// valid sources or targets for network firewalls and are specified by
    /// the client during cluster or node pool creation. Each tag within the list
    /// must comply with RFC1035.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "preemptible" field.</summary>
    public const int PreemptibleFieldNumber = 10;
    private bool preemptible_;
    /// <summary>
    /// Whether the nodes are created as preemptible VM instances. See:
    /// https://cloud.google.com/compute/docs/instances/preemptible for more
    /// information about preemptible VM instances.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Preemptible {
      get { return preemptible_; }
      set {
        preemptible_ = value;
      }
    }

    /// <summary>Field number for the "accelerators" field.</summary>
    public const int AcceleratorsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.AcceleratorConfig> _repeated_accelerators_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Cloud.Container.V1.AcceleratorConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.AcceleratorConfig> accelerators_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.AcceleratorConfig>();
    /// <summary>
    /// A list of hardware accelerators to be attached to each node.
    /// See https://cloud.google.com/compute/docs/gpus for more information about
    /// support for GPUs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.AcceleratorConfig> Accelerators {
      get { return accelerators_; }
    }

    /// <summary>Field number for the "disk_type" field.</summary>
    public const int DiskTypeFieldNumber = 12;
    private string diskType_ = "";
    /// <summary>
    /// Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd')
    ///
    /// If unspecified, the default disk type is 'pd-standard'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiskType {
      get { return diskType_; }
      set {
        diskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_cpu_platform" field.</summary>
    public const int MinCpuPlatformFieldNumber = 13;
    private string minCpuPlatform_ = "";
    /// <summary>
    /// Minimum CPU platform to be used by this instance. The instance may be
    /// scheduled on the specified or newer CPU platform. Applicable values are the
    /// friendly names of CPU platforms, such as
    /// &lt;code>minCpuPlatform: &amp;quot;Intel Haswell&amp;quot;&lt;/code> or
    /// &lt;code>minCpuPlatform: &amp;quot;Intel Sandy Bridge&amp;quot;&lt;/code>. For more
    /// information, read [how to specify min CPU
    /// platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinCpuPlatform {
      get { return minCpuPlatform_; }
      set {
        minCpuPlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MachineType != other.MachineType) return false;
      if (DiskSizeGb != other.DiskSizeGb) return false;
      if(!oauthScopes_.Equals(other.oauthScopes_)) return false;
      if (ServiceAccount != other.ServiceAccount) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (ImageType != other.ImageType) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (LocalSsdCount != other.LocalSsdCount) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (Preemptible != other.Preemptible) return false;
      if(!accelerators_.Equals(other.accelerators_)) return false;
      if (DiskType != other.DiskType) return false;
      if (MinCpuPlatform != other.MinCpuPlatform) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
      if (DiskSizeGb != 0) hash ^= DiskSizeGb.GetHashCode();
      hash ^= oauthScopes_.GetHashCode();
      if (ServiceAccount.Length != 0) hash ^= ServiceAccount.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (ImageType.Length != 0) hash ^= ImageType.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (LocalSsdCount != 0) hash ^= LocalSsdCount.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (Preemptible != false) hash ^= Preemptible.GetHashCode();
      hash ^= accelerators_.GetHashCode();
      if (DiskType.Length != 0) hash ^= DiskType.GetHashCode();
      if (MinCpuPlatform.Length != 0) hash ^= MinCpuPlatform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MachineType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MachineType);
      }
      if (DiskSizeGb != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DiskSizeGb);
      }
      oauthScopes_.WriteTo(output, _repeated_oauthScopes_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      if (ImageType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ImageType);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (LocalSsdCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LocalSsdCount);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (ServiceAccount.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ServiceAccount);
      }
      if (Preemptible != false) {
        output.WriteRawTag(80);
        output.WriteBool(Preemptible);
      }
      accelerators_.WriteTo(output, _repeated_accelerators_codec);
      if (DiskType.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DiskType);
      }
      if (MinCpuPlatform.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MinCpuPlatform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MachineType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
      }
      if (DiskSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DiskSizeGb);
      }
      size += oauthScopes_.CalculateSize(_repeated_oauthScopes_codec);
      if (ServiceAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccount);
      }
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (ImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageType);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (LocalSsdCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocalSsdCount);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (Preemptible != false) {
        size += 1 + 1;
      }
      size += accelerators_.CalculateSize(_repeated_accelerators_codec);
      if (DiskType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskType);
      }
      if (MinCpuPlatform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinCpuPlatform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeConfig other) {
      if (other == null) {
        return;
      }
      if (other.MachineType.Length != 0) {
        MachineType = other.MachineType;
      }
      if (other.DiskSizeGb != 0) {
        DiskSizeGb = other.DiskSizeGb;
      }
      oauthScopes_.Add(other.oauthScopes_);
      if (other.ServiceAccount.Length != 0) {
        ServiceAccount = other.ServiceAccount;
      }
      metadata_.Add(other.metadata_);
      if (other.ImageType.Length != 0) {
        ImageType = other.ImageType;
      }
      labels_.Add(other.labels_);
      if (other.LocalSsdCount != 0) {
        LocalSsdCount = other.LocalSsdCount;
      }
      tags_.Add(other.tags_);
      if (other.Preemptible != false) {
        Preemptible = other.Preemptible;
      }
      accelerators_.Add(other.accelerators_);
      if (other.DiskType.Length != 0) {
        DiskType = other.DiskType;
      }
      if (other.MinCpuPlatform.Length != 0) {
        MinCpuPlatform = other.MinCpuPlatform;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MachineType = input.ReadString();
            break;
          }
          case 16: {
            DiskSizeGb = input.ReadInt32();
            break;
          }
          case 26: {
            oauthScopes_.AddEntriesFrom(input, _repeated_oauthScopes_codec);
            break;
          }
          case 34: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 42: {
            ImageType = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 56: {
            LocalSsdCount = input.ReadInt32();
            break;
          }
          case 66: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 74: {
            ServiceAccount = input.ReadString();
            break;
          }
          case 80: {
            Preemptible = input.ReadBool();
            break;
          }
          case 90: {
            accelerators_.AddEntriesFrom(input, _repeated_accelerators_codec);
            break;
          }
          case 98: {
            DiskType = input.ReadString();
            break;
          }
          case 106: {
            MinCpuPlatform = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The authentication information for accessing the master endpoint.
  /// Authentication can be done using HTTP basic auth or using client
  /// certificates.
  /// </summary>
  public sealed partial class MasterAuth : pb::IMessage<MasterAuth> {
    private static readonly pb::MessageParser<MasterAuth> _parser = new pb::MessageParser<MasterAuth>(() => new MasterAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MasterAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuth(MasterAuth other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      clientCertificateConfig_ = other.clientCertificateConfig_ != null ? other.clientCertificateConfig_.Clone() : null;
      clusterCaCertificate_ = other.clusterCaCertificate_;
      clientCertificate_ = other.clientCertificate_;
      clientKey_ = other.clientKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuth Clone() {
      return new MasterAuth(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    /// <summary>
    /// The username to use for HTTP basic authentication to the master endpoint.
    /// For clusters v1.6.0 and later, you can disable basic authentication by
    /// providing an empty username.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// The password to use for HTTP basic authentication to the master endpoint.
    /// Because the master endpoint is open to the Internet, you should create a
    /// strong password.  If a password is provided for cluster creation, username
    /// must be non-empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_certificate_config" field.</summary>
    public const int ClientCertificateConfigFieldNumber = 3;
    private global::Google.Cloud.Container.V1.ClientCertificateConfig clientCertificateConfig_;
    /// <summary>
    /// Configuration for client certificate authentication on the cluster. For
    /// clusters before v1.12, if no configuration is specified, a client
    /// certificate is issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ClientCertificateConfig ClientCertificateConfig {
      get { return clientCertificateConfig_; }
      set {
        clientCertificateConfig_ = value;
      }
    }

    /// <summary>Field number for the "cluster_ca_certificate" field.</summary>
    public const int ClusterCaCertificateFieldNumber = 100;
    private string clusterCaCertificate_ = "";
    /// <summary>
    /// [Output only] Base64-encoded public certificate that is the root of
    /// trust for the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterCaCertificate {
      get { return clusterCaCertificate_; }
      set {
        clusterCaCertificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_certificate" field.</summary>
    public const int ClientCertificateFieldNumber = 101;
    private string clientCertificate_ = "";
    /// <summary>
    /// [Output only] Base64-encoded public certificate used by clients to
    /// authenticate to the cluster endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientCertificate {
      get { return clientCertificate_; }
      set {
        clientCertificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_key" field.</summary>
    public const int ClientKeyFieldNumber = 102;
    private string clientKey_ = "";
    /// <summary>
    /// [Output only] Base64-encoded private key used by clients to authenticate
    /// to the cluster endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientKey {
      get { return clientKey_; }
      set {
        clientKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MasterAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MasterAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (!object.Equals(ClientCertificateConfig, other.ClientCertificateConfig)) return false;
      if (ClusterCaCertificate != other.ClusterCaCertificate) return false;
      if (ClientCertificate != other.ClientCertificate) return false;
      if (ClientKey != other.ClientKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (clientCertificateConfig_ != null) hash ^= ClientCertificateConfig.GetHashCode();
      if (ClusterCaCertificate.Length != 0) hash ^= ClusterCaCertificate.GetHashCode();
      if (ClientCertificate.Length != 0) hash ^= ClientCertificate.GetHashCode();
      if (ClientKey.Length != 0) hash ^= ClientKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (clientCertificateConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ClientCertificateConfig);
      }
      if (ClusterCaCertificate.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(ClusterCaCertificate);
      }
      if (ClientCertificate.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(ClientCertificate);
      }
      if (ClientKey.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(ClientKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (clientCertificateConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientCertificateConfig);
      }
      if (ClusterCaCertificate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClusterCaCertificate);
      }
      if (ClientCertificate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientCertificate);
      }
      if (ClientKey.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MasterAuth other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.clientCertificateConfig_ != null) {
        if (clientCertificateConfig_ == null) {
          ClientCertificateConfig = new global::Google.Cloud.Container.V1.ClientCertificateConfig();
        }
        ClientCertificateConfig.MergeFrom(other.ClientCertificateConfig);
      }
      if (other.ClusterCaCertificate.Length != 0) {
        ClusterCaCertificate = other.ClusterCaCertificate;
      }
      if (other.ClientCertificate.Length != 0) {
        ClientCertificate = other.ClientCertificate;
      }
      if (other.ClientKey.Length != 0) {
        ClientKey = other.ClientKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            if (clientCertificateConfig_ == null) {
              ClientCertificateConfig = new global::Google.Cloud.Container.V1.ClientCertificateConfig();
            }
            input.ReadMessage(ClientCertificateConfig);
            break;
          }
          case 802: {
            ClusterCaCertificate = input.ReadString();
            break;
          }
          case 810: {
            ClientCertificate = input.ReadString();
            break;
          }
          case 818: {
            ClientKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for client certificates on the cluster.
  /// </summary>
  public sealed partial class ClientCertificateConfig : pb::IMessage<ClientCertificateConfig> {
    private static readonly pb::MessageParser<ClientCertificateConfig> _parser = new pb::MessageParser<ClientCertificateConfig>(() => new ClientCertificateConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientCertificateConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCertificateConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCertificateConfig(ClientCertificateConfig other) : this() {
      issueClientCertificate_ = other.issueClientCertificate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCertificateConfig Clone() {
      return new ClientCertificateConfig(this);
    }

    /// <summary>Field number for the "issue_client_certificate" field.</summary>
    public const int IssueClientCertificateFieldNumber = 1;
    private bool issueClientCertificate_;
    /// <summary>
    /// Issue a client certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IssueClientCertificate {
      get { return issueClientCertificate_; }
      set {
        issueClientCertificate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientCertificateConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientCertificateConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IssueClientCertificate != other.IssueClientCertificate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IssueClientCertificate != false) hash ^= IssueClientCertificate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IssueClientCertificate != false) {
        output.WriteRawTag(8);
        output.WriteBool(IssueClientCertificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IssueClientCertificate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientCertificateConfig other) {
      if (other == null) {
        return;
      }
      if (other.IssueClientCertificate != false) {
        IssueClientCertificate = other.IssueClientCertificate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IssueClientCertificate = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for the addons that can be automatically spun up in the
  /// cluster, enabling additional functionality.
  /// </summary>
  public sealed partial class AddonsConfig : pb::IMessage<AddonsConfig> {
    private static readonly pb::MessageParser<AddonsConfig> _parser = new pb::MessageParser<AddonsConfig>(() => new AddonsConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddonsConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonsConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonsConfig(AddonsConfig other) : this() {
      httpLoadBalancing_ = other.httpLoadBalancing_ != null ? other.httpLoadBalancing_.Clone() : null;
      horizontalPodAutoscaling_ = other.horizontalPodAutoscaling_ != null ? other.horizontalPodAutoscaling_.Clone() : null;
      kubernetesDashboard_ = other.kubernetesDashboard_ != null ? other.kubernetesDashboard_.Clone() : null;
      networkPolicyConfig_ = other.networkPolicyConfig_ != null ? other.networkPolicyConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonsConfig Clone() {
      return new AddonsConfig(this);
    }

    /// <summary>Field number for the "http_load_balancing" field.</summary>
    public const int HttpLoadBalancingFieldNumber = 1;
    private global::Google.Cloud.Container.V1.HttpLoadBalancing httpLoadBalancing_;
    /// <summary>
    /// Configuration for the HTTP (L7) load balancing controller addon, which
    /// makes it easy to set up HTTP load balancers for services in a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.HttpLoadBalancing HttpLoadBalancing {
      get { return httpLoadBalancing_; }
      set {
        httpLoadBalancing_ = value;
      }
    }

    /// <summary>Field number for the "horizontal_pod_autoscaling" field.</summary>
    public const int HorizontalPodAutoscalingFieldNumber = 2;
    private global::Google.Cloud.Container.V1.HorizontalPodAutoscaling horizontalPodAutoscaling_;
    /// <summary>
    /// Configuration for the horizontal pod autoscaling feature, which
    /// increases or decreases the number of replica pods a replication controller
    /// has based on the resource usage of the existing pods.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.HorizontalPodAutoscaling HorizontalPodAutoscaling {
      get { return horizontalPodAutoscaling_; }
      set {
        horizontalPodAutoscaling_ = value;
      }
    }

    /// <summary>Field number for the "kubernetes_dashboard" field.</summary>
    public const int KubernetesDashboardFieldNumber = 3;
    private global::Google.Cloud.Container.V1.KubernetesDashboard kubernetesDashboard_;
    /// <summary>
    /// Configuration for the Kubernetes Dashboard.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.KubernetesDashboard KubernetesDashboard {
      get { return kubernetesDashboard_; }
      set {
        kubernetesDashboard_ = value;
      }
    }

    /// <summary>Field number for the "network_policy_config" field.</summary>
    public const int NetworkPolicyConfigFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NetworkPolicyConfig networkPolicyConfig_;
    /// <summary>
    /// Configuration for NetworkPolicy. This only tracks whether the addon
    /// is enabled or not on the Master, it does not track whether network policy
    /// is enabled for the nodes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicyConfig NetworkPolicyConfig {
      get { return networkPolicyConfig_; }
      set {
        networkPolicyConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddonsConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddonsConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HttpLoadBalancing, other.HttpLoadBalancing)) return false;
      if (!object.Equals(HorizontalPodAutoscaling, other.HorizontalPodAutoscaling)) return false;
      if (!object.Equals(KubernetesDashboard, other.KubernetesDashboard)) return false;
      if (!object.Equals(NetworkPolicyConfig, other.NetworkPolicyConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (httpLoadBalancing_ != null) hash ^= HttpLoadBalancing.GetHashCode();
      if (horizontalPodAutoscaling_ != null) hash ^= HorizontalPodAutoscaling.GetHashCode();
      if (kubernetesDashboard_ != null) hash ^= KubernetesDashboard.GetHashCode();
      if (networkPolicyConfig_ != null) hash ^= NetworkPolicyConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (httpLoadBalancing_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HttpLoadBalancing);
      }
      if (horizontalPodAutoscaling_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HorizontalPodAutoscaling);
      }
      if (kubernetesDashboard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(KubernetesDashboard);
      }
      if (networkPolicyConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NetworkPolicyConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (httpLoadBalancing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpLoadBalancing);
      }
      if (horizontalPodAutoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HorizontalPodAutoscaling);
      }
      if (kubernetesDashboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KubernetesDashboard);
      }
      if (networkPolicyConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkPolicyConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddonsConfig other) {
      if (other == null) {
        return;
      }
      if (other.httpLoadBalancing_ != null) {
        if (httpLoadBalancing_ == null) {
          HttpLoadBalancing = new global::Google.Cloud.Container.V1.HttpLoadBalancing();
        }
        HttpLoadBalancing.MergeFrom(other.HttpLoadBalancing);
      }
      if (other.horizontalPodAutoscaling_ != null) {
        if (horizontalPodAutoscaling_ == null) {
          HorizontalPodAutoscaling = new global::Google.Cloud.Container.V1.HorizontalPodAutoscaling();
        }
        HorizontalPodAutoscaling.MergeFrom(other.HorizontalPodAutoscaling);
      }
      if (other.kubernetesDashboard_ != null) {
        if (kubernetesDashboard_ == null) {
          KubernetesDashboard = new global::Google.Cloud.Container.V1.KubernetesDashboard();
        }
        KubernetesDashboard.MergeFrom(other.KubernetesDashboard);
      }
      if (other.networkPolicyConfig_ != null) {
        if (networkPolicyConfig_ == null) {
          NetworkPolicyConfig = new global::Google.Cloud.Container.V1.NetworkPolicyConfig();
        }
        NetworkPolicyConfig.MergeFrom(other.NetworkPolicyConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (httpLoadBalancing_ == null) {
              HttpLoadBalancing = new global::Google.Cloud.Container.V1.HttpLoadBalancing();
            }
            input.ReadMessage(HttpLoadBalancing);
            break;
          }
          case 18: {
            if (horizontalPodAutoscaling_ == null) {
              HorizontalPodAutoscaling = new global::Google.Cloud.Container.V1.HorizontalPodAutoscaling();
            }
            input.ReadMessage(HorizontalPodAutoscaling);
            break;
          }
          case 26: {
            if (kubernetesDashboard_ == null) {
              KubernetesDashboard = new global::Google.Cloud.Container.V1.KubernetesDashboard();
            }
            input.ReadMessage(KubernetesDashboard);
            break;
          }
          case 34: {
            if (networkPolicyConfig_ == null) {
              NetworkPolicyConfig = new global::Google.Cloud.Container.V1.NetworkPolicyConfig();
            }
            input.ReadMessage(NetworkPolicyConfig);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the HTTP (L7) load balancing controller addon,
  /// which makes it easy to set up HTTP load balancers for services in a cluster.
  /// </summary>
  public sealed partial class HttpLoadBalancing : pb::IMessage<HttpLoadBalancing> {
    private static readonly pb::MessageParser<HttpLoadBalancing> _parser = new pb::MessageParser<HttpLoadBalancing>(() => new HttpLoadBalancing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpLoadBalancing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpLoadBalancing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpLoadBalancing(HttpLoadBalancing other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpLoadBalancing Clone() {
      return new HttpLoadBalancing(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether the HTTP Load Balancing controller is enabled in the cluster.
    /// When enabled, it runs a small pod in the cluster that manages the load
    /// balancers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpLoadBalancing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpLoadBalancing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpLoadBalancing other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the horizontal pod autoscaling feature, which
  /// increases or decreases the number of replica pods a replication controller
  /// has based on the resource usage of the existing pods.
  /// </summary>
  public sealed partial class HorizontalPodAutoscaling : pb::IMessage<HorizontalPodAutoscaling> {
    private static readonly pb::MessageParser<HorizontalPodAutoscaling> _parser = new pb::MessageParser<HorizontalPodAutoscaling>(() => new HorizontalPodAutoscaling());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HorizontalPodAutoscaling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HorizontalPodAutoscaling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HorizontalPodAutoscaling(HorizontalPodAutoscaling other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HorizontalPodAutoscaling Clone() {
      return new HorizontalPodAutoscaling(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
    /// When enabled, it ensures that a Heapster pod is running in the cluster,
    /// which is also used by the Cloud Monitoring service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HorizontalPodAutoscaling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HorizontalPodAutoscaling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HorizontalPodAutoscaling other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for the Kubernetes Dashboard.
  /// </summary>
  public sealed partial class KubernetesDashboard : pb::IMessage<KubernetesDashboard> {
    private static readonly pb::MessageParser<KubernetesDashboard> _parser = new pb::MessageParser<KubernetesDashboard>(() => new KubernetesDashboard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KubernetesDashboard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesDashboard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesDashboard(KubernetesDashboard other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesDashboard Clone() {
      return new KubernetesDashboard(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether the Kubernetes Dashboard is enabled for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KubernetesDashboard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KubernetesDashboard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KubernetesDashboard other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for NetworkPolicy. This only tracks whether the addon
  /// is enabled or not on the Master, it does not track whether network policy
  /// is enabled for the nodes.
  /// </summary>
  public sealed partial class NetworkPolicyConfig : pb::IMessage<NetworkPolicyConfig> {
    private static readonly pb::MessageParser<NetworkPolicyConfig> _parser = new pb::MessageParser<NetworkPolicyConfig>(() => new NetworkPolicyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkPolicyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicyConfig(NetworkPolicyConfig other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicyConfig Clone() {
      return new NetworkPolicyConfig(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether NetworkPolicy is enabled for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkPolicyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkPolicyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkPolicyConfig other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for private clusters.
  /// </summary>
  public sealed partial class PrivateClusterConfig : pb::IMessage<PrivateClusterConfig> {
    private static readonly pb::MessageParser<PrivateClusterConfig> _parser = new pb::MessageParser<PrivateClusterConfig>(() => new PrivateClusterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivateClusterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateClusterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateClusterConfig(PrivateClusterConfig other) : this() {
      enablePrivateNodes_ = other.enablePrivateNodes_;
      enablePrivateEndpoint_ = other.enablePrivateEndpoint_;
      masterIpv4CidrBlock_ = other.masterIpv4CidrBlock_;
      privateEndpoint_ = other.privateEndpoint_;
      publicEndpoint_ = other.publicEndpoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateClusterConfig Clone() {
      return new PrivateClusterConfig(this);
    }

    /// <summary>Field number for the "enable_private_nodes" field.</summary>
    public const int EnablePrivateNodesFieldNumber = 1;
    private bool enablePrivateNodes_;
    /// <summary>
    /// Whether nodes have internal IP addresses only. If enabled, all nodes are
    /// given only RFC 1918 private addresses and communicate with the master via
    /// private networking.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnablePrivateNodes {
      get { return enablePrivateNodes_; }
      set {
        enablePrivateNodes_ = value;
      }
    }

    /// <summary>Field number for the "enable_private_endpoint" field.</summary>
    public const int EnablePrivateEndpointFieldNumber = 2;
    private bool enablePrivateEndpoint_;
    /// <summary>
    /// Whether the master's internal IP address is used as the cluster endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnablePrivateEndpoint {
      get { return enablePrivateEndpoint_; }
      set {
        enablePrivateEndpoint_ = value;
      }
    }

    /// <summary>Field number for the "master_ipv4_cidr_block" field.</summary>
    public const int MasterIpv4CidrBlockFieldNumber = 3;
    private string masterIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP range in CIDR notation to use for the hosted master network. This
    /// range will be used for assigning internal IP addresses to the master or
    /// set of masters, as well as the ILB VIP. This range must not overlap with
    /// any other ranges in use within the cluster's network.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MasterIpv4CidrBlock {
      get { return masterIpv4CidrBlock_; }
      set {
        masterIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private_endpoint" field.</summary>
    public const int PrivateEndpointFieldNumber = 4;
    private string privateEndpoint_ = "";
    /// <summary>
    /// Output only. The internal IP address of this cluster's master endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateEndpoint {
      get { return privateEndpoint_; }
      set {
        privateEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_endpoint" field.</summary>
    public const int PublicEndpointFieldNumber = 5;
    private string publicEndpoint_ = "";
    /// <summary>
    /// Output only. The external IP address of this cluster's master endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicEndpoint {
      get { return publicEndpoint_; }
      set {
        publicEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivateClusterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivateClusterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnablePrivateNodes != other.EnablePrivateNodes) return false;
      if (EnablePrivateEndpoint != other.EnablePrivateEndpoint) return false;
      if (MasterIpv4CidrBlock != other.MasterIpv4CidrBlock) return false;
      if (PrivateEndpoint != other.PrivateEndpoint) return false;
      if (PublicEndpoint != other.PublicEndpoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnablePrivateNodes != false) hash ^= EnablePrivateNodes.GetHashCode();
      if (EnablePrivateEndpoint != false) hash ^= EnablePrivateEndpoint.GetHashCode();
      if (MasterIpv4CidrBlock.Length != 0) hash ^= MasterIpv4CidrBlock.GetHashCode();
      if (PrivateEndpoint.Length != 0) hash ^= PrivateEndpoint.GetHashCode();
      if (PublicEndpoint.Length != 0) hash ^= PublicEndpoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnablePrivateNodes != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnablePrivateNodes);
      }
      if (EnablePrivateEndpoint != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnablePrivateEndpoint);
      }
      if (MasterIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MasterIpv4CidrBlock);
      }
      if (PrivateEndpoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PrivateEndpoint);
      }
      if (PublicEndpoint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PublicEndpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnablePrivateNodes != false) {
        size += 1 + 1;
      }
      if (EnablePrivateEndpoint != false) {
        size += 1 + 1;
      }
      if (MasterIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterIpv4CidrBlock);
      }
      if (PrivateEndpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateEndpoint);
      }
      if (PublicEndpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicEndpoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivateClusterConfig other) {
      if (other == null) {
        return;
      }
      if (other.EnablePrivateNodes != false) {
        EnablePrivateNodes = other.EnablePrivateNodes;
      }
      if (other.EnablePrivateEndpoint != false) {
        EnablePrivateEndpoint = other.EnablePrivateEndpoint;
      }
      if (other.MasterIpv4CidrBlock.Length != 0) {
        MasterIpv4CidrBlock = other.MasterIpv4CidrBlock;
      }
      if (other.PrivateEndpoint.Length != 0) {
        PrivateEndpoint = other.PrivateEndpoint;
      }
      if (other.PublicEndpoint.Length != 0) {
        PublicEndpoint = other.PublicEndpoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnablePrivateNodes = input.ReadBool();
            break;
          }
          case 16: {
            EnablePrivateEndpoint = input.ReadBool();
            break;
          }
          case 26: {
            MasterIpv4CidrBlock = input.ReadString();
            break;
          }
          case 34: {
            PrivateEndpoint = input.ReadString();
            break;
          }
          case 42: {
            PublicEndpoint = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the master authorized networks feature. Enabled
  /// master authorized networks will disallow all external traffic to access
  /// Kubernetes master through HTTPS except traffic from the given CIDR blocks,
  /// Google Compute Engine Public IPs and Google Prod IPs.
  /// </summary>
  public sealed partial class MasterAuthorizedNetworksConfig : pb::IMessage<MasterAuthorizedNetworksConfig> {
    private static readonly pb::MessageParser<MasterAuthorizedNetworksConfig> _parser = new pb::MessageParser<MasterAuthorizedNetworksConfig>(() => new MasterAuthorizedNetworksConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MasterAuthorizedNetworksConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuthorizedNetworksConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig other) : this() {
      enabled_ = other.enabled_;
      cidrBlocks_ = other.cidrBlocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuthorizedNetworksConfig Clone() {
      return new MasterAuthorizedNetworksConfig(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Whether or not master authorized networks is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "cidr_blocks" field.</summary>
    public const int CidrBlocksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock> _repeated_cidrBlocks_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock> cidrBlocks_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock>();
    /// <summary>
    /// cidr_blocks define up to 10 external networks that could access
    /// Kubernetes master through HTTPS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock> CidrBlocks {
      get { return cidrBlocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MasterAuthorizedNetworksConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MasterAuthorizedNetworksConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if(!cidrBlocks_.Equals(other.cidrBlocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      hash ^= cidrBlocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      cidrBlocks_.WriteTo(output, _repeated_cidrBlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      size += cidrBlocks_.CalculateSize(_repeated_cidrBlocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MasterAuthorizedNetworksConfig other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      cidrBlocks_.Add(other.cidrBlocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 18: {
            cidrBlocks_.AddEntriesFrom(input, _repeated_cidrBlocks_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MasterAuthorizedNetworksConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// CidrBlock contains an optional name and one CIDR block.
      /// </summary>
      public sealed partial class CidrBlock : pb::IMessage<CidrBlock> {
        private static readonly pb::MessageParser<CidrBlock> _parser = new pb::MessageParser<CidrBlock>(() => new CidrBlock());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CidrBlock> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CidrBlock() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CidrBlock(CidrBlock other) : this() {
          displayName_ = other.displayName_;
          cidrBlock_ = other.cidrBlock_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CidrBlock Clone() {
          return new CidrBlock(this);
        }

        /// <summary>Field number for the "display_name" field.</summary>
        public const int DisplayNameFieldNumber = 1;
        private string displayName_ = "";
        /// <summary>
        /// display_name is an optional field for users to identify CIDR blocks.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cidr_block" field.</summary>
        public const int CidrBlock_FieldNumber = 2;
        private string cidrBlock_ = "";
        /// <summary>
        /// cidr_block must be specified in CIDR notation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CidrBlock_ {
          get { return cidrBlock_; }
          set {
            cidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CidrBlock);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CidrBlock other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DisplayName != other.DisplayName) return false;
          if (CidrBlock_ != other.CidrBlock_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
          if (CidrBlock_.Length != 0) hash ^= CidrBlock_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DisplayName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DisplayName);
          }
          if (CidrBlock_.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CidrBlock_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DisplayName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
          }
          if (CidrBlock_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CidrBlock_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CidrBlock other) {
          if (other == null) {
            return;
          }
          if (other.DisplayName.Length != 0) {
            DisplayName = other.DisplayName;
          }
          if (other.CidrBlock_.Length != 0) {
            CidrBlock_ = other.CidrBlock_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DisplayName = input.ReadString();
                break;
              }
              case 18: {
                CidrBlock_ = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration for the legacy Attribute Based Access Control authorization
  /// mode.
  /// </summary>
  public sealed partial class LegacyAbac : pb::IMessage<LegacyAbac> {
    private static readonly pb::MessageParser<LegacyAbac> _parser = new pb::MessageParser<LegacyAbac>(() => new LegacyAbac());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LegacyAbac> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAbac() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAbac(LegacyAbac other) : this() {
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAbac Clone() {
      return new LegacyAbac(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Whether the ABAC authorizer is enabled for this cluster. When enabled,
    /// identities in the system, including service accounts, nodes, and
    /// controllers, will have statically granted permissions beyond those
    /// provided by the RBAC configuration or IAM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LegacyAbac);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LegacyAbac other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LegacyAbac other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the NetworkPolicy feature.
  /// https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
  /// </summary>
  public sealed partial class NetworkPolicy : pb::IMessage<NetworkPolicy> {
    private static readonly pb::MessageParser<NetworkPolicy> _parser = new pb::MessageParser<NetworkPolicy>(() => new NetworkPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicy(NetworkPolicy other) : this() {
      provider_ = other.provider_;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicy Clone() {
      return new NetworkPolicy(this);
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 1;
    private global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider provider_ = 0;
    /// <summary>
    /// The selected network policy provider.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider Provider {
      get { return provider_; }
      set {
        provider_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 2;
    private bool enabled_;
    /// <summary>
    /// Whether network policy is enabled on the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Provider != other.Provider) return false;
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Provider != 0) hash ^= Provider.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Provider != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Provider);
      }
      if (Enabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Provider != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Provider);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkPolicy other) {
      if (other == null) {
        return;
      }
      if (other.Provider != 0) {
        Provider = other.Provider;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Provider = (global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider) input.ReadEnum();
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NetworkPolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Allowed Network Policy providers.
      /// </summary>
      public enum Provider {
        /// <summary>
        /// Not set
        /// </summary>
        [pbr::OriginalName("PROVIDER_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Tigera (Calico Felix).
        /// </summary>
        [pbr::OriginalName("CALICO")] Calico = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration for controlling how IPs are allocated in the cluster.
  /// </summary>
  public sealed partial class IPAllocationPolicy : pb::IMessage<IPAllocationPolicy> {
    private static readonly pb::MessageParser<IPAllocationPolicy> _parser = new pb::MessageParser<IPAllocationPolicy>(() => new IPAllocationPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IPAllocationPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAllocationPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAllocationPolicy(IPAllocationPolicy other) : this() {
      useIpAliases_ = other.useIpAliases_;
      createSubnetwork_ = other.createSubnetwork_;
      subnetworkName_ = other.subnetworkName_;
      clusterIpv4Cidr_ = other.clusterIpv4Cidr_;
      nodeIpv4Cidr_ = other.nodeIpv4Cidr_;
      servicesIpv4Cidr_ = other.servicesIpv4Cidr_;
      clusterSecondaryRangeName_ = other.clusterSecondaryRangeName_;
      servicesSecondaryRangeName_ = other.servicesSecondaryRangeName_;
      clusterIpv4CidrBlock_ = other.clusterIpv4CidrBlock_;
      nodeIpv4CidrBlock_ = other.nodeIpv4CidrBlock_;
      servicesIpv4CidrBlock_ = other.servicesIpv4CidrBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAllocationPolicy Clone() {
      return new IPAllocationPolicy(this);
    }

    /// <summary>Field number for the "use_ip_aliases" field.</summary>
    public const int UseIpAliasesFieldNumber = 1;
    private bool useIpAliases_;
    /// <summary>
    /// Whether alias IPs will be used for pod IPs in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseIpAliases {
      get { return useIpAliases_; }
      set {
        useIpAliases_ = value;
      }
    }

    /// <summary>Field number for the "create_subnetwork" field.</summary>
    public const int CreateSubnetworkFieldNumber = 2;
    private bool createSubnetwork_;
    /// <summary>
    /// Whether a new subnetwork will be created automatically for the cluster.
    ///
    /// This field is only applicable when `use_ip_aliases` is true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CreateSubnetwork {
      get { return createSubnetwork_; }
      set {
        createSubnetwork_ = value;
      }
    }

    /// <summary>Field number for the "subnetwork_name" field.</summary>
    public const int SubnetworkNameFieldNumber = 3;
    private string subnetworkName_ = "";
    /// <summary>
    /// A custom subnetwork name to be used if `create_subnetwork` is true.  If
    /// this field is empty, then an automatic name will be chosen for the new
    /// subnetwork.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetworkName {
      get { return subnetworkName_; }
      set {
        subnetworkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_ipv4_cidr" field.</summary>
    public const int ClusterIpv4CidrFieldNumber = 4;
    private string clusterIpv4Cidr_ = "";
    /// <summary>
    /// This field is deprecated, use cluster_ipv4_cidr_block.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterIpv4Cidr {
      get { return clusterIpv4Cidr_; }
      set {
        clusterIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_ipv4_cidr" field.</summary>
    public const int NodeIpv4CidrFieldNumber = 5;
    private string nodeIpv4Cidr_ = "";
    /// <summary>
    /// This field is deprecated, use node_ipv4_cidr_block.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeIpv4Cidr {
      get { return nodeIpv4Cidr_; }
      set {
        nodeIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services_ipv4_cidr" field.</summary>
    public const int ServicesIpv4CidrFieldNumber = 6;
    private string servicesIpv4Cidr_ = "";
    /// <summary>
    /// This field is deprecated, use services_ipv4_cidr_block.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesIpv4Cidr {
      get { return servicesIpv4Cidr_; }
      set {
        servicesIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_secondary_range_name" field.</summary>
    public const int ClusterSecondaryRangeNameFieldNumber = 7;
    private string clusterSecondaryRangeName_ = "";
    /// <summary>
    /// The name of the secondary range to be used for the cluster CIDR
    /// block.  The secondary range will be used for pod IP
    /// addresses. This must be an existing secondary range associated
    /// with the cluster subnetwork.
    ///
    /// This field is only applicable with use_ip_aliases is true and
    /// create_subnetwork is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterSecondaryRangeName {
      get { return clusterSecondaryRangeName_; }
      set {
        clusterSecondaryRangeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services_secondary_range_name" field.</summary>
    public const int ServicesSecondaryRangeNameFieldNumber = 8;
    private string servicesSecondaryRangeName_ = "";
    /// <summary>
    /// The name of the secondary range to be used as for the services
    /// CIDR block.  The secondary range will be used for service
    /// ClusterIPs. This must be an existing secondary range associated
    /// with the cluster subnetwork.
    ///
    /// This field is only applicable with use_ip_aliases is true and
    /// create_subnetwork is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesSecondaryRangeName {
      get { return servicesSecondaryRangeName_; }
      set {
        servicesSecondaryRangeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_ipv4_cidr_block" field.</summary>
    public const int ClusterIpv4CidrBlockFieldNumber = 9;
    private string clusterIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP address range for the cluster pod IPs. If this field is set, then
    /// `cluster.cluster_ipv4_cidr` must be left blank.
    ///
    /// This field is only applicable when `use_ip_aliases` is true.
    ///
    /// Set to blank to have a range chosen with the default size.
    ///
    /// Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    /// netmask.
    ///
    /// Set to a
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    /// `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    /// to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterIpv4CidrBlock {
      get { return clusterIpv4CidrBlock_; }
      set {
        clusterIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_ipv4_cidr_block" field.</summary>
    public const int NodeIpv4CidrBlockFieldNumber = 10;
    private string nodeIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP address range of the instance IPs in this cluster.
    ///
    /// This is applicable only if `create_subnetwork` is true.
    ///
    /// Set to blank to have a range chosen with the default size.
    ///
    /// Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    /// netmask.
    ///
    /// Set to a
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    /// `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    /// to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeIpv4CidrBlock {
      get { return nodeIpv4CidrBlock_; }
      set {
        nodeIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services_ipv4_cidr_block" field.</summary>
    public const int ServicesIpv4CidrBlockFieldNumber = 11;
    private string servicesIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP address range of the services IPs in this cluster. If blank, a range
    /// will be automatically chosen with the default size.
    ///
    /// This field is only applicable when `use_ip_aliases` is true.
    ///
    /// Set to blank to have a range chosen with the default size.
    ///
    /// Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    /// netmask.
    ///
    /// Set to a
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    /// `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    /// to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesIpv4CidrBlock {
      get { return servicesIpv4CidrBlock_; }
      set {
        servicesIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IPAllocationPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IPAllocationPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UseIpAliases != other.UseIpAliases) return false;
      if (CreateSubnetwork != other.CreateSubnetwork) return false;
      if (SubnetworkName != other.SubnetworkName) return false;
      if (ClusterIpv4Cidr != other.ClusterIpv4Cidr) return false;
      if (NodeIpv4Cidr != other.NodeIpv4Cidr) return false;
      if (ServicesIpv4Cidr != other.ServicesIpv4Cidr) return false;
      if (ClusterSecondaryRangeName != other.ClusterSecondaryRangeName) return false;
      if (ServicesSecondaryRangeName != other.ServicesSecondaryRangeName) return false;
      if (ClusterIpv4CidrBlock != other.ClusterIpv4CidrBlock) return false;
      if (NodeIpv4CidrBlock != other.NodeIpv4CidrBlock) return false;
      if (ServicesIpv4CidrBlock != other.ServicesIpv4CidrBlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UseIpAliases != false) hash ^= UseIpAliases.GetHashCode();
      if (CreateSubnetwork != false) hash ^= CreateSubnetwork.GetHashCode();
      if (SubnetworkName.Length != 0) hash ^= SubnetworkName.GetHashCode();
      if (ClusterIpv4Cidr.Length != 0) hash ^= ClusterIpv4Cidr.GetHashCode();
      if (NodeIpv4Cidr.Length != 0) hash ^= NodeIpv4Cidr.GetHashCode();
      if (ServicesIpv4Cidr.Length != 0) hash ^= ServicesIpv4Cidr.GetHashCode();
      if (ClusterSecondaryRangeName.Length != 0) hash ^= ClusterSecondaryRangeName.GetHashCode();
      if (ServicesSecondaryRangeName.Length != 0) hash ^= ServicesSecondaryRangeName.GetHashCode();
      if (ClusterIpv4CidrBlock.Length != 0) hash ^= ClusterIpv4CidrBlock.GetHashCode();
      if (NodeIpv4CidrBlock.Length != 0) hash ^= NodeIpv4CidrBlock.GetHashCode();
      if (ServicesIpv4CidrBlock.Length != 0) hash ^= ServicesIpv4CidrBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UseIpAliases != false) {
        output.WriteRawTag(8);
        output.WriteBool(UseIpAliases);
      }
      if (CreateSubnetwork != false) {
        output.WriteRawTag(16);
        output.WriteBool(CreateSubnetwork);
      }
      if (SubnetworkName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubnetworkName);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterIpv4Cidr);
      }
      if (NodeIpv4Cidr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeIpv4Cidr);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ServicesIpv4Cidr);
      }
      if (ClusterSecondaryRangeName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ClusterSecondaryRangeName);
      }
      if (ServicesSecondaryRangeName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ServicesSecondaryRangeName);
      }
      if (ClusterIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ClusterIpv4CidrBlock);
      }
      if (NodeIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NodeIpv4CidrBlock);
      }
      if (ServicesIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ServicesIpv4CidrBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UseIpAliases != false) {
        size += 1 + 1;
      }
      if (CreateSubnetwork != false) {
        size += 1 + 1;
      }
      if (SubnetworkName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetworkName);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterIpv4Cidr);
      }
      if (NodeIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeIpv4Cidr);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicesIpv4Cidr);
      }
      if (ClusterSecondaryRangeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterSecondaryRangeName);
      }
      if (ServicesSecondaryRangeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicesSecondaryRangeName);
      }
      if (ClusterIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterIpv4CidrBlock);
      }
      if (NodeIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeIpv4CidrBlock);
      }
      if (ServicesIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicesIpv4CidrBlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IPAllocationPolicy other) {
      if (other == null) {
        return;
      }
      if (other.UseIpAliases != false) {
        UseIpAliases = other.UseIpAliases;
      }
      if (other.CreateSubnetwork != false) {
        CreateSubnetwork = other.CreateSubnetwork;
      }
      if (other.SubnetworkName.Length != 0) {
        SubnetworkName = other.SubnetworkName;
      }
      if (other.ClusterIpv4Cidr.Length != 0) {
        ClusterIpv4Cidr = other.ClusterIpv4Cidr;
      }
      if (other.NodeIpv4Cidr.Length != 0) {
        NodeIpv4Cidr = other.NodeIpv4Cidr;
      }
      if (other.ServicesIpv4Cidr.Length != 0) {
        ServicesIpv4Cidr = other.ServicesIpv4Cidr;
      }
      if (other.ClusterSecondaryRangeName.Length != 0) {
        ClusterSecondaryRangeName = other.ClusterSecondaryRangeName;
      }
      if (other.ServicesSecondaryRangeName.Length != 0) {
        ServicesSecondaryRangeName = other.ServicesSecondaryRangeName;
      }
      if (other.ClusterIpv4CidrBlock.Length != 0) {
        ClusterIpv4CidrBlock = other.ClusterIpv4CidrBlock;
      }
      if (other.NodeIpv4CidrBlock.Length != 0) {
        NodeIpv4CidrBlock = other.NodeIpv4CidrBlock;
      }
      if (other.ServicesIpv4CidrBlock.Length != 0) {
        ServicesIpv4CidrBlock = other.ServicesIpv4CidrBlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UseIpAliases = input.ReadBool();
            break;
          }
          case 16: {
            CreateSubnetwork = input.ReadBool();
            break;
          }
          case 26: {
            SubnetworkName = input.ReadString();
            break;
          }
          case 34: {
            ClusterIpv4Cidr = input.ReadString();
            break;
          }
          case 42: {
            NodeIpv4Cidr = input.ReadString();
            break;
          }
          case 50: {
            ServicesIpv4Cidr = input.ReadString();
            break;
          }
          case 58: {
            ClusterSecondaryRangeName = input.ReadString();
            break;
          }
          case 66: {
            ServicesSecondaryRangeName = input.ReadString();
            break;
          }
          case 74: {
            ClusterIpv4CidrBlock = input.ReadString();
            break;
          }
          case 82: {
            NodeIpv4CidrBlock = input.ReadString();
            break;
          }
          case 90: {
            ServicesIpv4CidrBlock = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Google Kubernetes Engine cluster.
  /// </summary>
  public sealed partial class Cluster : pb::IMessage<Cluster> {
    private static readonly pb::MessageParser<Cluster> _parser = new pb::MessageParser<Cluster>(() => new Cluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster(Cluster other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      initialNodeCount_ = other.initialNodeCount_;
      nodeConfig_ = other.nodeConfig_ != null ? other.nodeConfig_.Clone() : null;
      masterAuth_ = other.masterAuth_ != null ? other.masterAuth_.Clone() : null;
      loggingService_ = other.loggingService_;
      monitoringService_ = other.monitoringService_;
      network_ = other.network_;
      clusterIpv4Cidr_ = other.clusterIpv4Cidr_;
      addonsConfig_ = other.addonsConfig_ != null ? other.addonsConfig_.Clone() : null;
      subnetwork_ = other.subnetwork_;
      nodePools_ = other.nodePools_.Clone();
      locations_ = other.locations_.Clone();
      enableKubernetesAlpha_ = other.enableKubernetesAlpha_;
      resourceLabels_ = other.resourceLabels_.Clone();
      labelFingerprint_ = other.labelFingerprint_;
      legacyAbac_ = other.legacyAbac_ != null ? other.legacyAbac_.Clone() : null;
      networkPolicy_ = other.networkPolicy_ != null ? other.networkPolicy_.Clone() : null;
      ipAllocationPolicy_ = other.ipAllocationPolicy_ != null ? other.ipAllocationPolicy_.Clone() : null;
      masterAuthorizedNetworksConfig_ = other.masterAuthorizedNetworksConfig_ != null ? other.masterAuthorizedNetworksConfig_.Clone() : null;
      maintenancePolicy_ = other.maintenancePolicy_ != null ? other.maintenancePolicy_.Clone() : null;
      networkConfig_ = other.networkConfig_ != null ? other.networkConfig_.Clone() : null;
      privateClusterConfig_ = other.privateClusterConfig_ != null ? other.privateClusterConfig_.Clone() : null;
      selfLink_ = other.selfLink_;
      zone_ = other.zone_;
      endpoint_ = other.endpoint_;
      initialClusterVersion_ = other.initialClusterVersion_;
      currentMasterVersion_ = other.currentMasterVersion_;
      currentNodeVersion_ = other.currentNodeVersion_;
      createTime_ = other.createTime_;
      status_ = other.status_;
      statusMessage_ = other.statusMessage_;
      nodeIpv4CidrSize_ = other.nodeIpv4CidrSize_;
      servicesIpv4Cidr_ = other.servicesIpv4Cidr_;
      instanceGroupUrls_ = other.instanceGroupUrls_.Clone();
      currentNodeCount_ = other.currentNodeCount_;
      expireTime_ = other.expireTime_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster Clone() {
      return new Cluster(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of this cluster. The name must be unique within this project
    /// and zone, and can be up to 40 characters with the following restrictions:
    ///
    /// * Lowercase letters, numbers, and hyphens only.
    /// * Must start with a letter.
    /// * Must end with a number or a letter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// An optional description of this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initial_node_count" field.</summary>
    public const int InitialNodeCountFieldNumber = 3;
    private int initialNodeCount_;
    /// <summary>
    /// The number of nodes to create in this cluster. You must ensure that your
    /// Compute Engine &lt;a href="/compute/docs/resource-quotas">resource quota&lt;/a>
    /// is sufficient for this number of instances. You must also have available
    /// firewall and routes quota.
    /// For requests, this field should only be used in lieu of a
    /// "node_pool" object, since this configuration (along with the
    /// "node_config") will be used to create a "NodePool" object with an
    /// auto-generated name. Do not use this and a node_pool at the same time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitialNodeCount {
      get { return initialNodeCount_; }
      set {
        initialNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "node_config" field.</summary>
    public const int NodeConfigFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NodeConfig nodeConfig_;
    /// <summary>
    /// Parameters used in creating the cluster's nodes.
    /// See `nodeConfig` for the description of its properties.
    /// For requests, this field should only be used in lieu of a
    /// "node_pool" object, since this configuration (along with the
    /// "initial_node_count") will be used to create a "NodePool" object with an
    /// auto-generated name. Do not use this and a node_pool at the same time.
    /// For responses, this field will be populated with the node configuration of
    /// the first node pool.
    ///
    /// If unspecified, the defaults are used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeConfig NodeConfig {
      get { return nodeConfig_; }
      set {
        nodeConfig_ = value;
      }
    }

    /// <summary>Field number for the "master_auth" field.</summary>
    public const int MasterAuthFieldNumber = 5;
    private global::Google.Cloud.Container.V1.MasterAuth masterAuth_;
    /// <summary>
    /// The authentication information for accessing the master endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuth MasterAuth {
      get { return masterAuth_; }
      set {
        masterAuth_ = value;
      }
    }

    /// <summary>Field number for the "logging_service" field.</summary>
    public const int LoggingServiceFieldNumber = 6;
    private string loggingService_ = "";
    /// <summary>
    /// The logging service the cluster should use to write logs.
    /// Currently available options:
    ///
    /// * `logging.googleapis.com` - the Google Cloud Logging service.
    /// * `none` - no logs will be exported from the cluster.
    /// * if left as an empty string,`logging.googleapis.com` will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoggingService {
      get { return loggingService_; }
      set {
        loggingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monitoring_service" field.</summary>
    public const int MonitoringServiceFieldNumber = 7;
    private string monitoringService_ = "";
    /// <summary>
    /// The monitoring service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
    /// * `none` - no metrics will be exported from the cluster.
    /// * if left as an empty string, `monitoring.googleapis.com` will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MonitoringService {
      get { return monitoringService_; }
      set {
        monitoringService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 8;
    private string network_ = "";
    /// <summary>
    /// The name of the Google Compute Engine
    /// [network](/compute/docs/networks-and-firewalls#networks) to which the
    /// cluster is connected. If left unspecified, the `default` network
    /// will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_ipv4_cidr" field.</summary>
    public const int ClusterIpv4CidrFieldNumber = 9;
    private string clusterIpv4Cidr_ = "";
    /// <summary>
    /// The IP address range of the container pods in this cluster, in
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`). Leave blank to have
    /// one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterIpv4Cidr {
      get { return clusterIpv4Cidr_; }
      set {
        clusterIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addons_config" field.</summary>
    public const int AddonsConfigFieldNumber = 10;
    private global::Google.Cloud.Container.V1.AddonsConfig addonsConfig_;
    /// <summary>
    /// Configurations for the various addons available to run in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AddonsConfig AddonsConfig {
      get { return addonsConfig_; }
      set {
        addonsConfig_ = value;
      }
    }

    /// <summary>Field number for the "subnetwork" field.</summary>
    public const int SubnetworkFieldNumber = 11;
    private string subnetwork_ = "";
    /// <summary>
    /// The name of the Google Compute Engine
    /// [subnetwork](/compute/docs/subnetworks) to which the
    /// cluster is connected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subnetwork {
      get { return subnetwork_; }
      set {
        subnetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pools" field.</summary>
    public const int NodePoolsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.NodePool> _repeated_nodePools_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Cloud.Container.V1.NodePool.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> nodePools_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool>();
    /// <summary>
    /// The node pools associated with this cluster.
    /// This field should not be set if "node_config" or "initial_node_count" are
    /// specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> NodePools {
      get { return nodePools_; }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_locations_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> locations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of Google Compute Engine
    /// [locations](/compute/docs/zones#available) in which the cluster's nodes
    /// should be located.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Locations {
      get { return locations_; }
    }

    /// <summary>Field number for the "enable_kubernetes_alpha" field.</summary>
    public const int EnableKubernetesAlphaFieldNumber = 14;
    private bool enableKubernetesAlpha_;
    /// <summary>
    /// Kubernetes alpha features are enabled on this cluster. This includes alpha
    /// API groups (e.g. v1alpha1) and features that may not be production ready in
    /// the kubernetes version of the master and nodes.
    /// The cluster has no SLA for uptime and master/node upgrades are disabled.
    /// Alpha enabled clusters are automatically deleted thirty days after
    /// creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableKubernetesAlpha {
      get { return enableKubernetesAlpha_; }
      set {
        enableKubernetesAlpha_ = value;
      }
    }

    /// <summary>Field number for the "resource_labels" field.</summary>
    public const int ResourceLabelsFieldNumber = 15;
    private static readonly pbc::MapField<string, string>.Codec _map_resourceLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 122);
    private readonly pbc::MapField<string, string> resourceLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The resource labels for the cluster to use to annotate any related
    /// Google Compute Engine resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ResourceLabels {
      get { return resourceLabels_; }
    }

    /// <summary>Field number for the "label_fingerprint" field.</summary>
    public const int LabelFingerprintFieldNumber = 16;
    private string labelFingerprint_ = "";
    /// <summary>
    /// The fingerprint of the set of labels for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelFingerprint {
      get { return labelFingerprint_; }
      set {
        labelFingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legacy_abac" field.</summary>
    public const int LegacyAbacFieldNumber = 18;
    private global::Google.Cloud.Container.V1.LegacyAbac legacyAbac_;
    /// <summary>
    /// Configuration for the legacy ABAC authorization mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.LegacyAbac LegacyAbac {
      get { return legacyAbac_; }
      set {
        legacyAbac_ = value;
      }
    }

    /// <summary>Field number for the "network_policy" field.</summary>
    public const int NetworkPolicyFieldNumber = 19;
    private global::Google.Cloud.Container.V1.NetworkPolicy networkPolicy_;
    /// <summary>
    /// Configuration options for the NetworkPolicy feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicy NetworkPolicy {
      get { return networkPolicy_; }
      set {
        networkPolicy_ = value;
      }
    }

    /// <summary>Field number for the "ip_allocation_policy" field.</summary>
    public const int IpAllocationPolicyFieldNumber = 20;
    private global::Google.Cloud.Container.V1.IPAllocationPolicy ipAllocationPolicy_;
    /// <summary>
    /// Configuration for cluster IP allocation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.IPAllocationPolicy IpAllocationPolicy {
      get { return ipAllocationPolicy_; }
      set {
        ipAllocationPolicy_ = value;
      }
    }

    /// <summary>Field number for the "master_authorized_networks_config" field.</summary>
    public const int MasterAuthorizedNetworksConfigFieldNumber = 22;
    private global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig_;
    /// <summary>
    /// The configuration options for master authorized networks feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig MasterAuthorizedNetworksConfig {
      get { return masterAuthorizedNetworksConfig_; }
      set {
        masterAuthorizedNetworksConfig_ = value;
      }
    }

    /// <summary>Field number for the "maintenance_policy" field.</summary>
    public const int MaintenancePolicyFieldNumber = 23;
    private global::Google.Cloud.Container.V1.MaintenancePolicy maintenancePolicy_;
    /// <summary>
    /// Configure the maintenance policy for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaintenancePolicy MaintenancePolicy {
      get { return maintenancePolicy_; }
      set {
        maintenancePolicy_ = value;
      }
    }

    /// <summary>Field number for the "network_config" field.</summary>
    public const int NetworkConfigFieldNumber = 27;
    private global::Google.Cloud.Container.V1.NetworkConfig networkConfig_;
    /// <summary>
    /// Configuration for cluster networking.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkConfig NetworkConfig {
      get { return networkConfig_; }
      set {
        networkConfig_ = value;
      }
    }

    /// <summary>Field number for the "private_cluster_config" field.</summary>
    public const int PrivateClusterConfigFieldNumber = 37;
    private global::Google.Cloud.Container.V1.PrivateClusterConfig privateClusterConfig_;
    /// <summary>
    /// Configuration for private cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.PrivateClusterConfig PrivateClusterConfig {
      get { return privateClusterConfig_; }
      set {
        privateClusterConfig_ = value;
      }
    }

    /// <summary>Field number for the "self_link" field.</summary>
    public const int SelfLinkFieldNumber = 100;
    private string selfLink_ = "";
    /// <summary>
    /// [Output only] Server-defined URL for the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelfLink {
      get { return selfLink_; }
      set {
        selfLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 101;
    private string zone_ = "";
    /// <summary>
    /// [Output only] The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field is deprecated, use location instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 102;
    private string endpoint_ = "";
    /// <summary>
    /// [Output only] The IP address of this cluster's master endpoint.
    /// The endpoint can be accessed from the internet at
    /// `https://username:password@endpoint/`.
    ///
    /// See the `masterAuth` property of this resource for username and
    /// password information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initial_cluster_version" field.</summary>
    public const int InitialClusterVersionFieldNumber = 103;
    private string initialClusterVersion_ = "";
    /// <summary>
    /// The initial Kubernetes version for this cluster.  Valid versions are those
    /// found in validMasterVersions returned by getServerConfig.  The version can
    /// be upgraded over time; such upgrades are reflected in
    /// currentMasterVersion and currentNodeVersion.
    ///
    /// Users may specify either explicit versions offered by
    /// Kubernetes Engine or version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "","-": picks the default Kubernetes version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InitialClusterVersion {
      get { return initialClusterVersion_; }
      set {
        initialClusterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_master_version" field.</summary>
    public const int CurrentMasterVersionFieldNumber = 104;
    private string currentMasterVersion_ = "";
    /// <summary>
    /// [Output only] The current software version of the master endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentMasterVersion {
      get { return currentMasterVersion_; }
      set {
        currentMasterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_node_version" field.</summary>
    public const int CurrentNodeVersionFieldNumber = 105;
    private string currentNodeVersion_ = "";
    /// <summary>
    /// [Output only] Deprecated, use
    /// [NodePool.version](/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters.nodePool)
    /// instead. The current version of the node software components. If they are
    /// currently at multiple versions because they're in the process of being
    /// upgraded, this reflects the minimum version of all nodes.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentNodeVersion {
      get { return currentNodeVersion_; }
      set {
        currentNodeVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 106;
    private string createTime_ = "";
    /// <summary>
    /// [Output only] The time the cluster was created, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 107;
    private global::Google.Cloud.Container.V1.Cluster.Types.Status status_ = 0;
    /// <summary>
    /// [Output only] The current status of this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Cluster.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 108;
    private string statusMessage_ = "";
    /// <summary>
    /// [Output only] Additional information about the current status of this
    /// cluster, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_ipv4_cidr_size" field.</summary>
    public const int NodeIpv4CidrSizeFieldNumber = 109;
    private int nodeIpv4CidrSize_;
    /// <summary>
    /// [Output only] The size of the address space on each node for hosting
    /// containers. This is provisioned from within the `container_ipv4_cidr`
    /// range.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeIpv4CidrSize {
      get { return nodeIpv4CidrSize_; }
      set {
        nodeIpv4CidrSize_ = value;
      }
    }

    /// <summary>Field number for the "services_ipv4_cidr" field.</summary>
    public const int ServicesIpv4CidrFieldNumber = 110;
    private string servicesIpv4Cidr_ = "";
    /// <summary>
    /// [Output only] The IP address range of the Kubernetes services in
    /// this cluster, in
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `1.2.3.4/29`). Service addresses are
    /// typically put in the last `/16` from the container CIDR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesIpv4Cidr {
      get { return servicesIpv4Cidr_; }
      set {
        servicesIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_group_urls" field.</summary>
    public const int InstanceGroupUrlsFieldNumber = 111;
    private static readonly pb::FieldCodec<string> _repeated_instanceGroupUrls_codec
        = pb::FieldCodec.ForString(890);
    private readonly pbc::RepeatedField<string> instanceGroupUrls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Deprecated. Use node_pools.instance_group_urls.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InstanceGroupUrls {
      get { return instanceGroupUrls_; }
    }

    /// <summary>Field number for the "current_node_count" field.</summary>
    public const int CurrentNodeCountFieldNumber = 112;
    private int currentNodeCount_;
    /// <summary>
    /// [Output only] The number of nodes currently in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentNodeCount {
      get { return currentNodeCount_; }
      set {
        currentNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 113;
    private string expireTime_ = "";
    /// <summary>
    /// [Output only] The time the cluster will be automatically
    /// deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 114;
    private string location_ = "";
    /// <summary>
    /// [Output only] The name of the Google Compute Engine
    /// [zone](/compute/docs/regions-zones/regions-zones#available) or
    /// [region](/compute/docs/regions-zones/regions-zones#available) in which
    /// the cluster resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (InitialNodeCount != other.InitialNodeCount) return false;
      if (!object.Equals(NodeConfig, other.NodeConfig)) return false;
      if (!object.Equals(MasterAuth, other.MasterAuth)) return false;
      if (LoggingService != other.LoggingService) return false;
      if (MonitoringService != other.MonitoringService) return false;
      if (Network != other.Network) return false;
      if (ClusterIpv4Cidr != other.ClusterIpv4Cidr) return false;
      if (!object.Equals(AddonsConfig, other.AddonsConfig)) return false;
      if (Subnetwork != other.Subnetwork) return false;
      if(!nodePools_.Equals(other.nodePools_)) return false;
      if(!locations_.Equals(other.locations_)) return false;
      if (EnableKubernetesAlpha != other.EnableKubernetesAlpha) return false;
      if (!ResourceLabels.Equals(other.ResourceLabels)) return false;
      if (LabelFingerprint != other.LabelFingerprint) return false;
      if (!object.Equals(LegacyAbac, other.LegacyAbac)) return false;
      if (!object.Equals(NetworkPolicy, other.NetworkPolicy)) return false;
      if (!object.Equals(IpAllocationPolicy, other.IpAllocationPolicy)) return false;
      if (!object.Equals(MasterAuthorizedNetworksConfig, other.MasterAuthorizedNetworksConfig)) return false;
      if (!object.Equals(MaintenancePolicy, other.MaintenancePolicy)) return false;
      if (!object.Equals(NetworkConfig, other.NetworkConfig)) return false;
      if (!object.Equals(PrivateClusterConfig, other.PrivateClusterConfig)) return false;
      if (SelfLink != other.SelfLink) return false;
      if (Zone != other.Zone) return false;
      if (Endpoint != other.Endpoint) return false;
      if (InitialClusterVersion != other.InitialClusterVersion) return false;
      if (CurrentMasterVersion != other.CurrentMasterVersion) return false;
      if (CurrentNodeVersion != other.CurrentNodeVersion) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Status != other.Status) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (NodeIpv4CidrSize != other.NodeIpv4CidrSize) return false;
      if (ServicesIpv4Cidr != other.ServicesIpv4Cidr) return false;
      if(!instanceGroupUrls_.Equals(other.instanceGroupUrls_)) return false;
      if (CurrentNodeCount != other.CurrentNodeCount) return false;
      if (ExpireTime != other.ExpireTime) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (InitialNodeCount != 0) hash ^= InitialNodeCount.GetHashCode();
      if (nodeConfig_ != null) hash ^= NodeConfig.GetHashCode();
      if (masterAuth_ != null) hash ^= MasterAuth.GetHashCode();
      if (LoggingService.Length != 0) hash ^= LoggingService.GetHashCode();
      if (MonitoringService.Length != 0) hash ^= MonitoringService.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (ClusterIpv4Cidr.Length != 0) hash ^= ClusterIpv4Cidr.GetHashCode();
      if (addonsConfig_ != null) hash ^= AddonsConfig.GetHashCode();
      if (Subnetwork.Length != 0) hash ^= Subnetwork.GetHashCode();
      hash ^= nodePools_.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (EnableKubernetesAlpha != false) hash ^= EnableKubernetesAlpha.GetHashCode();
      hash ^= ResourceLabels.GetHashCode();
      if (LabelFingerprint.Length != 0) hash ^= LabelFingerprint.GetHashCode();
      if (legacyAbac_ != null) hash ^= LegacyAbac.GetHashCode();
      if (networkPolicy_ != null) hash ^= NetworkPolicy.GetHashCode();
      if (ipAllocationPolicy_ != null) hash ^= IpAllocationPolicy.GetHashCode();
      if (masterAuthorizedNetworksConfig_ != null) hash ^= MasterAuthorizedNetworksConfig.GetHashCode();
      if (maintenancePolicy_ != null) hash ^= MaintenancePolicy.GetHashCode();
      if (networkConfig_ != null) hash ^= NetworkConfig.GetHashCode();
      if (privateClusterConfig_ != null) hash ^= PrivateClusterConfig.GetHashCode();
      if (SelfLink.Length != 0) hash ^= SelfLink.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (InitialClusterVersion.Length != 0) hash ^= InitialClusterVersion.GetHashCode();
      if (CurrentMasterVersion.Length != 0) hash ^= CurrentMasterVersion.GetHashCode();
      if (CurrentNodeVersion.Length != 0) hash ^= CurrentNodeVersion.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (NodeIpv4CidrSize != 0) hash ^= NodeIpv4CidrSize.GetHashCode();
      if (ServicesIpv4Cidr.Length != 0) hash ^= ServicesIpv4Cidr.GetHashCode();
      hash ^= instanceGroupUrls_.GetHashCode();
      if (CurrentNodeCount != 0) hash ^= CurrentNodeCount.GetHashCode();
      if (ExpireTime.Length != 0) hash ^= ExpireTime.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (InitialNodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialNodeCount);
      }
      if (nodeConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NodeConfig);
      }
      if (masterAuth_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MasterAuth);
      }
      if (LoggingService.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LoggingService);
      }
      if (MonitoringService.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MonitoringService);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Network);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ClusterIpv4Cidr);
      }
      if (addonsConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AddonsConfig);
      }
      if (Subnetwork.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Subnetwork);
      }
      nodePools_.WriteTo(output, _repeated_nodePools_codec);
      locations_.WriteTo(output, _repeated_locations_codec);
      if (EnableKubernetesAlpha != false) {
        output.WriteRawTag(112);
        output.WriteBool(EnableKubernetesAlpha);
      }
      resourceLabels_.WriteTo(output, _map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LabelFingerprint);
      }
      if (legacyAbac_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LegacyAbac);
      }
      if (networkPolicy_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NetworkPolicy);
      }
      if (ipAllocationPolicy_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(IpAllocationPolicy);
      }
      if (masterAuthorizedNetworksConfig_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(MasterAuthorizedNetworksConfig);
      }
      if (maintenancePolicy_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(MaintenancePolicy);
      }
      if (networkConfig_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(NetworkConfig);
      }
      if (privateClusterConfig_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PrivateClusterConfig);
      }
      if (SelfLink.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(SelfLink);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Zone);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(Endpoint);
      }
      if (InitialClusterVersion.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(InitialClusterVersion);
      }
      if (CurrentMasterVersion.Length != 0) {
        output.WriteRawTag(194, 6);
        output.WriteString(CurrentMasterVersion);
      }
      if (CurrentNodeVersion.Length != 0) {
        output.WriteRawTag(202, 6);
        output.WriteString(CurrentNodeVersion);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(CreateTime);
      }
      if (Status != 0) {
        output.WriteRawTag(216, 6);
        output.WriteEnum((int) Status);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(226, 6);
        output.WriteString(StatusMessage);
      }
      if (NodeIpv4CidrSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(NodeIpv4CidrSize);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        output.WriteRawTag(242, 6);
        output.WriteString(ServicesIpv4Cidr);
      }
      instanceGroupUrls_.WriteTo(output, _repeated_instanceGroupUrls_codec);
      if (CurrentNodeCount != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(CurrentNodeCount);
      }
      if (ExpireTime.Length != 0) {
        output.WriteRawTag(138, 7);
        output.WriteString(ExpireTime);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(146, 7);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (InitialNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialNodeCount);
      }
      if (nodeConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeConfig);
      }
      if (masterAuth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MasterAuth);
      }
      if (LoggingService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoggingService);
      }
      if (MonitoringService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MonitoringService);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterIpv4Cidr);
      }
      if (addonsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddonsConfig);
      }
      if (Subnetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnetwork);
      }
      size += nodePools_.CalculateSize(_repeated_nodePools_codec);
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (EnableKubernetesAlpha != false) {
        size += 1 + 1;
      }
      size += resourceLabels_.CalculateSize(_map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LabelFingerprint);
      }
      if (legacyAbac_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LegacyAbac);
      }
      if (networkPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NetworkPolicy);
      }
      if (ipAllocationPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IpAllocationPolicy);
      }
      if (masterAuthorizedNetworksConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MasterAuthorizedNetworksConfig);
      }
      if (maintenancePolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaintenancePolicy);
      }
      if (networkConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NetworkConfig);
      }
      if (privateClusterConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrivateClusterConfig);
      }
      if (SelfLink.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SelfLink);
      }
      if (Zone.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Endpoint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (InitialClusterVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InitialClusterVersion);
      }
      if (CurrentMasterVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurrentMasterVersion);
      }
      if (CurrentNodeVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurrentNodeVersion);
      }
      if (CreateTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (Status != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusMessage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (NodeIpv4CidrSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NodeIpv4CidrSize);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ServicesIpv4Cidr);
      }
      size += instanceGroupUrls_.CalculateSize(_repeated_instanceGroupUrls_codec);
      if (CurrentNodeCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurrentNodeCount);
      }
      if (ExpireTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExpireTime);
      }
      if (Location.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cluster other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.InitialNodeCount != 0) {
        InitialNodeCount = other.InitialNodeCount;
      }
      if (other.nodeConfig_ != null) {
        if (nodeConfig_ == null) {
          NodeConfig = new global::Google.Cloud.Container.V1.NodeConfig();
        }
        NodeConfig.MergeFrom(other.NodeConfig);
      }
      if (other.masterAuth_ != null) {
        if (masterAuth_ == null) {
          MasterAuth = new global::Google.Cloud.Container.V1.MasterAuth();
        }
        MasterAuth.MergeFrom(other.MasterAuth);
      }
      if (other.LoggingService.Length != 0) {
        LoggingService = other.LoggingService;
      }
      if (other.MonitoringService.Length != 0) {
        MonitoringService = other.MonitoringService;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.ClusterIpv4Cidr.Length != 0) {
        ClusterIpv4Cidr = other.ClusterIpv4Cidr;
      }
      if (other.addonsConfig_ != null) {
        if (addonsConfig_ == null) {
          AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
        }
        AddonsConfig.MergeFrom(other.AddonsConfig);
      }
      if (other.Subnetwork.Length != 0) {
        Subnetwork = other.Subnetwork;
      }
      nodePools_.Add(other.nodePools_);
      locations_.Add(other.locations_);
      if (other.EnableKubernetesAlpha != false) {
        EnableKubernetesAlpha = other.EnableKubernetesAlpha;
      }
      resourceLabels_.Add(other.resourceLabels_);
      if (other.LabelFingerprint.Length != 0) {
        LabelFingerprint = other.LabelFingerprint;
      }
      if (other.legacyAbac_ != null) {
        if (legacyAbac_ == null) {
          LegacyAbac = new global::Google.Cloud.Container.V1.LegacyAbac();
        }
        LegacyAbac.MergeFrom(other.LegacyAbac);
      }
      if (other.networkPolicy_ != null) {
        if (networkPolicy_ == null) {
          NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
        }
        NetworkPolicy.MergeFrom(other.NetworkPolicy);
      }
      if (other.ipAllocationPolicy_ != null) {
        if (ipAllocationPolicy_ == null) {
          IpAllocationPolicy = new global::Google.Cloud.Container.V1.IPAllocationPolicy();
        }
        IpAllocationPolicy.MergeFrom(other.IpAllocationPolicy);
      }
      if (other.masterAuthorizedNetworksConfig_ != null) {
        if (masterAuthorizedNetworksConfig_ == null) {
          MasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
        }
        MasterAuthorizedNetworksConfig.MergeFrom(other.MasterAuthorizedNetworksConfig);
      }
      if (other.maintenancePolicy_ != null) {
        if (maintenancePolicy_ == null) {
          MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
        }
        MaintenancePolicy.MergeFrom(other.MaintenancePolicy);
      }
      if (other.networkConfig_ != null) {
        if (networkConfig_ == null) {
          NetworkConfig = new global::Google.Cloud.Container.V1.NetworkConfig();
        }
        NetworkConfig.MergeFrom(other.NetworkConfig);
      }
      if (other.privateClusterConfig_ != null) {
        if (privateClusterConfig_ == null) {
          PrivateClusterConfig = new global::Google.Cloud.Container.V1.PrivateClusterConfig();
        }
        PrivateClusterConfig.MergeFrom(other.PrivateClusterConfig);
      }
      if (other.SelfLink.Length != 0) {
        SelfLink = other.SelfLink;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.InitialClusterVersion.Length != 0) {
        InitialClusterVersion = other.InitialClusterVersion;
      }
      if (other.CurrentMasterVersion.Length != 0) {
        CurrentMasterVersion = other.CurrentMasterVersion;
      }
      if (other.CurrentNodeVersion.Length != 0) {
        CurrentNodeVersion = other.CurrentNodeVersion;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.NodeIpv4CidrSize != 0) {
        NodeIpv4CidrSize = other.NodeIpv4CidrSize;
      }
      if (other.ServicesIpv4Cidr.Length != 0) {
        ServicesIpv4Cidr = other.ServicesIpv4Cidr;
      }
      instanceGroupUrls_.Add(other.instanceGroupUrls_);
      if (other.CurrentNodeCount != 0) {
        CurrentNodeCount = other.CurrentNodeCount;
      }
      if (other.ExpireTime.Length != 0) {
        ExpireTime = other.ExpireTime;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            InitialNodeCount = input.ReadInt32();
            break;
          }
          case 34: {
            if (nodeConfig_ == null) {
              NodeConfig = new global::Google.Cloud.Container.V1.NodeConfig();
            }
            input.ReadMessage(NodeConfig);
            break;
          }
          case 42: {
            if (masterAuth_ == null) {
              MasterAuth = new global::Google.Cloud.Container.V1.MasterAuth();
            }
            input.ReadMessage(MasterAuth);
            break;
          }
          case 50: {
            LoggingService = input.ReadString();
            break;
          }
          case 58: {
            MonitoringService = input.ReadString();
            break;
          }
          case 66: {
            Network = input.ReadString();
            break;
          }
          case 74: {
            ClusterIpv4Cidr = input.ReadString();
            break;
          }
          case 82: {
            if (addonsConfig_ == null) {
              AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
            }
            input.ReadMessage(AddonsConfig);
            break;
          }
          case 90: {
            Subnetwork = input.ReadString();
            break;
          }
          case 98: {
            nodePools_.AddEntriesFrom(input, _repeated_nodePools_codec);
            break;
          }
          case 106: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
          case 112: {
            EnableKubernetesAlpha = input.ReadBool();
            break;
          }
          case 122: {
            resourceLabels_.AddEntriesFrom(input, _map_resourceLabels_codec);
            break;
          }
          case 130: {
            LabelFingerprint = input.ReadString();
            break;
          }
          case 146: {
            if (legacyAbac_ == null) {
              LegacyAbac = new global::Google.Cloud.Container.V1.LegacyAbac();
            }
            input.ReadMessage(LegacyAbac);
            break;
          }
          case 154: {
            if (networkPolicy_ == null) {
              NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
            }
            input.ReadMessage(NetworkPolicy);
            break;
          }
          case 162: {
            if (ipAllocationPolicy_ == null) {
              IpAllocationPolicy = new global::Google.Cloud.Container.V1.IPAllocationPolicy();
            }
            input.ReadMessage(IpAllocationPolicy);
            break;
          }
          case 178: {
            if (masterAuthorizedNetworksConfig_ == null) {
              MasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
            }
            input.ReadMessage(MasterAuthorizedNetworksConfig);
            break;
          }
          case 186: {
            if (maintenancePolicy_ == null) {
              MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
            }
            input.ReadMessage(MaintenancePolicy);
            break;
          }
          case 218: {
            if (networkConfig_ == null) {
              NetworkConfig = new global::Google.Cloud.Container.V1.NetworkConfig();
            }
            input.ReadMessage(NetworkConfig);
            break;
          }
          case 298: {
            if (privateClusterConfig_ == null) {
              PrivateClusterConfig = new global::Google.Cloud.Container.V1.PrivateClusterConfig();
            }
            input.ReadMessage(PrivateClusterConfig);
            break;
          }
          case 802: {
            SelfLink = input.ReadString();
            break;
          }
          case 810: {
            Zone = input.ReadString();
            break;
          }
          case 818: {
            Endpoint = input.ReadString();
            break;
          }
          case 826: {
            InitialClusterVersion = input.ReadString();
            break;
          }
          case 834: {
            CurrentMasterVersion = input.ReadString();
            break;
          }
          case 842: {
            CurrentNodeVersion = input.ReadString();
            break;
          }
          case 850: {
            CreateTime = input.ReadString();
            break;
          }
          case 856: {
            Status = (global::Google.Cloud.Container.V1.Cluster.Types.Status) input.ReadEnum();
            break;
          }
          case 866: {
            StatusMessage = input.ReadString();
            break;
          }
          case 872: {
            NodeIpv4CidrSize = input.ReadInt32();
            break;
          }
          case 882: {
            ServicesIpv4Cidr = input.ReadString();
            break;
          }
          case 890: {
            instanceGroupUrls_.AddEntriesFrom(input, _repeated_instanceGroupUrls_codec);
            break;
          }
          case 896: {
            CurrentNodeCount = input.ReadInt32();
            break;
          }
          case 906: {
            ExpireTime = input.ReadString();
            break;
          }
          case 914: {
            Location = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Cluster message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The current status of the cluster.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The PROVISIONING state indicates the cluster is being created.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// The RUNNING state indicates the cluster has been created and is fully
        /// usable.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The RECONCILING state indicates that some work is actively being done on
        /// the cluster, such as upgrading the master or node software. Details can
        /// be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("RECONCILING")] Reconciling = 3,
        /// <summary>
        /// The STOPPING state indicates the cluster is being deleted.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 4,
        /// <summary>
        /// The ERROR state indicates the cluster may be unusable. Details
        /// can be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 5,
        /// <summary>
        /// The DEGRADED state indicates the cluster requires user action to restore
        /// full functionality. Details can be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("DEGRADED")] Degraded = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// ClusterUpdate describes an update to the cluster. Exactly one update can
  /// be applied to a cluster with each request, so at most one field can be
  /// provided.
  /// </summary>
  public sealed partial class ClusterUpdate : pb::IMessage<ClusterUpdate> {
    private static readonly pb::MessageParser<ClusterUpdate> _parser = new pb::MessageParser<ClusterUpdate>(() => new ClusterUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterUpdate(ClusterUpdate other) : this() {
      desiredNodeVersion_ = other.desiredNodeVersion_;
      desiredMonitoringService_ = other.desiredMonitoringService_;
      desiredAddonsConfig_ = other.desiredAddonsConfig_ != null ? other.desiredAddonsConfig_.Clone() : null;
      desiredNodePoolId_ = other.desiredNodePoolId_;
      desiredImageType_ = other.desiredImageType_;
      desiredNodePoolAutoscaling_ = other.desiredNodePoolAutoscaling_ != null ? other.desiredNodePoolAutoscaling_.Clone() : null;
      desiredLocations_ = other.desiredLocations_.Clone();
      desiredMasterAuthorizedNetworksConfig_ = other.desiredMasterAuthorizedNetworksConfig_ != null ? other.desiredMasterAuthorizedNetworksConfig_.Clone() : null;
      desiredMasterVersion_ = other.desiredMasterVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterUpdate Clone() {
      return new ClusterUpdate(this);
    }

    /// <summary>Field number for the "desired_node_version" field.</summary>
    public const int DesiredNodeVersionFieldNumber = 4;
    private string desiredNodeVersion_ = "";
    /// <summary>
    /// The Kubernetes version to change the nodes to (typically an
    /// upgrade).
    ///
    /// Users may specify either explicit versions offered by
    /// Kubernetes Engine or version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the Kubernetes master version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredNodeVersion {
      get { return desiredNodeVersion_; }
      set {
        desiredNodeVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_monitoring_service" field.</summary>
    public const int DesiredMonitoringServiceFieldNumber = 5;
    private string desiredMonitoringService_ = "";
    /// <summary>
    /// The monitoring service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * "monitoring.googleapis.com" - the Google Cloud Monitoring service
    /// * "none" - no metrics will be exported from the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredMonitoringService {
      get { return desiredMonitoringService_; }
      set {
        desiredMonitoringService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_addons_config" field.</summary>
    public const int DesiredAddonsConfigFieldNumber = 6;
    private global::Google.Cloud.Container.V1.AddonsConfig desiredAddonsConfig_;
    /// <summary>
    /// Configurations for the various addons available to run in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AddonsConfig DesiredAddonsConfig {
      get { return desiredAddonsConfig_; }
      set {
        desiredAddonsConfig_ = value;
      }
    }

    /// <summary>Field number for the "desired_node_pool_id" field.</summary>
    public const int DesiredNodePoolIdFieldNumber = 7;
    private string desiredNodePoolId_ = "";
    /// <summary>
    /// The node pool to be upgraded. This field is mandatory if
    /// "desired_node_version", "desired_image_family" or
    /// "desired_node_pool_autoscaling" is specified and there is more than one
    /// node pool on the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredNodePoolId {
      get { return desiredNodePoolId_; }
      set {
        desiredNodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_image_type" field.</summary>
    public const int DesiredImageTypeFieldNumber = 8;
    private string desiredImageType_ = "";
    /// <summary>
    /// The desired image type for the node pool.
    /// NOTE: Set the "desired_node_pool" field as well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredImageType {
      get { return desiredImageType_; }
      set {
        desiredImageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_node_pool_autoscaling" field.</summary>
    public const int DesiredNodePoolAutoscalingFieldNumber = 9;
    private global::Google.Cloud.Container.V1.NodePoolAutoscaling desiredNodePoolAutoscaling_;
    /// <summary>
    /// Autoscaler configuration for the node pool specified in
    /// desired_node_pool_id. If there is only one pool in the
    /// cluster and desired_node_pool_id is not provided then
    /// the change applies to that single node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePoolAutoscaling DesiredNodePoolAutoscaling {
      get { return desiredNodePoolAutoscaling_; }
      set {
        desiredNodePoolAutoscaling_ = value;
      }
    }

    /// <summary>Field number for the "desired_locations" field.</summary>
    public const int DesiredLocationsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_desiredLocations_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> desiredLocations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The desired list of Google Compute Engine
    /// [locations](/compute/docs/zones#available) in which the cluster's nodes
    /// should be located. Changing the locations a cluster is in will result
    /// in nodes being either created or removed from the cluster, depending on
    /// whether locations are being added or removed.
    ///
    /// This list must always include the cluster's primary zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DesiredLocations {
      get { return desiredLocations_; }
    }

    /// <summary>Field number for the "desired_master_authorized_networks_config" field.</summary>
    public const int DesiredMasterAuthorizedNetworksConfigFieldNumber = 12;
    private global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig desiredMasterAuthorizedNetworksConfig_;
    /// <summary>
    /// The desired configuration options for master authorized networks feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig DesiredMasterAuthorizedNetworksConfig {
      get { return desiredMasterAuthorizedNetworksConfig_; }
      set {
        desiredMasterAuthorizedNetworksConfig_ = value;
      }
    }

    /// <summary>Field number for the "desired_master_version" field.</summary>
    public const int DesiredMasterVersionFieldNumber = 100;
    private string desiredMasterVersion_ = "";
    /// <summary>
    /// The Kubernetes version to change the master to.
    ///
    /// Users may specify either explicit versions offered by
    /// Kubernetes Engine or version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the default Kubernetes version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredMasterVersion {
      get { return desiredMasterVersion_; }
      set {
        desiredMasterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DesiredNodeVersion != other.DesiredNodeVersion) return false;
      if (DesiredMonitoringService != other.DesiredMonitoringService) return false;
      if (!object.Equals(DesiredAddonsConfig, other.DesiredAddonsConfig)) return false;
      if (DesiredNodePoolId != other.DesiredNodePoolId) return false;
      if (DesiredImageType != other.DesiredImageType) return false;
      if (!object.Equals(DesiredNodePoolAutoscaling, other.DesiredNodePoolAutoscaling)) return false;
      if(!desiredLocations_.Equals(other.desiredLocations_)) return false;
      if (!object.Equals(DesiredMasterAuthorizedNetworksConfig, other.DesiredMasterAuthorizedNetworksConfig)) return false;
      if (DesiredMasterVersion != other.DesiredMasterVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DesiredNodeVersion.Length != 0) hash ^= DesiredNodeVersion.GetHashCode();
      if (DesiredMonitoringService.Length != 0) hash ^= DesiredMonitoringService.GetHashCode();
      if (desiredAddonsConfig_ != null) hash ^= DesiredAddonsConfig.GetHashCode();
      if (DesiredNodePoolId.Length != 0) hash ^= DesiredNodePoolId.GetHashCode();
      if (DesiredImageType.Length != 0) hash ^= DesiredImageType.GetHashCode();
      if (desiredNodePoolAutoscaling_ != null) hash ^= DesiredNodePoolAutoscaling.GetHashCode();
      hash ^= desiredLocations_.GetHashCode();
      if (desiredMasterAuthorizedNetworksConfig_ != null) hash ^= DesiredMasterAuthorizedNetworksConfig.GetHashCode();
      if (DesiredMasterVersion.Length != 0) hash ^= DesiredMasterVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DesiredNodeVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DesiredNodeVersion);
      }
      if (DesiredMonitoringService.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DesiredMonitoringService);
      }
      if (desiredAddonsConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DesiredAddonsConfig);
      }
      if (DesiredNodePoolId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DesiredNodePoolId);
      }
      if (DesiredImageType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DesiredImageType);
      }
      if (desiredNodePoolAutoscaling_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DesiredNodePoolAutoscaling);
      }
      desiredLocations_.WriteTo(output, _repeated_desiredLocations_codec);
      if (desiredMasterAuthorizedNetworksConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DesiredMasterAuthorizedNetworksConfig);
      }
      if (DesiredMasterVersion.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(DesiredMasterVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DesiredNodeVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredNodeVersion);
      }
      if (DesiredMonitoringService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredMonitoringService);
      }
      if (desiredAddonsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesiredAddonsConfig);
      }
      if (DesiredNodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredNodePoolId);
      }
      if (DesiredImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredImageType);
      }
      if (desiredNodePoolAutoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesiredNodePoolAutoscaling);
      }
      size += desiredLocations_.CalculateSize(_repeated_desiredLocations_codec);
      if (desiredMasterAuthorizedNetworksConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesiredMasterAuthorizedNetworksConfig);
      }
      if (DesiredMasterVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DesiredMasterVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterUpdate other) {
      if (other == null) {
        return;
      }
      if (other.DesiredNodeVersion.Length != 0) {
        DesiredNodeVersion = other.DesiredNodeVersion;
      }
      if (other.DesiredMonitoringService.Length != 0) {
        DesiredMonitoringService = other.DesiredMonitoringService;
      }
      if (other.desiredAddonsConfig_ != null) {
        if (desiredAddonsConfig_ == null) {
          DesiredAddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
        }
        DesiredAddonsConfig.MergeFrom(other.DesiredAddonsConfig);
      }
      if (other.DesiredNodePoolId.Length != 0) {
        DesiredNodePoolId = other.DesiredNodePoolId;
      }
      if (other.DesiredImageType.Length != 0) {
        DesiredImageType = other.DesiredImageType;
      }
      if (other.desiredNodePoolAutoscaling_ != null) {
        if (desiredNodePoolAutoscaling_ == null) {
          DesiredNodePoolAutoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
        }
        DesiredNodePoolAutoscaling.MergeFrom(other.DesiredNodePoolAutoscaling);
      }
      desiredLocations_.Add(other.desiredLocations_);
      if (other.desiredMasterAuthorizedNetworksConfig_ != null) {
        if (desiredMasterAuthorizedNetworksConfig_ == null) {
          DesiredMasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
        }
        DesiredMasterAuthorizedNetworksConfig.MergeFrom(other.DesiredMasterAuthorizedNetworksConfig);
      }
      if (other.DesiredMasterVersion.Length != 0) {
        DesiredMasterVersion = other.DesiredMasterVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            DesiredNodeVersion = input.ReadString();
            break;
          }
          case 42: {
            DesiredMonitoringService = input.ReadString();
            break;
          }
          case 50: {
            if (desiredAddonsConfig_ == null) {
              DesiredAddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
            }
            input.ReadMessage(DesiredAddonsConfig);
            break;
          }
          case 58: {
            DesiredNodePoolId = input.ReadString();
            break;
          }
          case 66: {
            DesiredImageType = input.ReadString();
            break;
          }
          case 74: {
            if (desiredNodePoolAutoscaling_ == null) {
              DesiredNodePoolAutoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
            }
            input.ReadMessage(DesiredNodePoolAutoscaling);
            break;
          }
          case 82: {
            desiredLocations_.AddEntriesFrom(input, _repeated_desiredLocations_codec);
            break;
          }
          case 98: {
            if (desiredMasterAuthorizedNetworksConfig_ == null) {
              DesiredMasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
            }
            input.ReadMessage(DesiredMasterAuthorizedNetworksConfig);
            break;
          }
          case 802: {
            DesiredMasterVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// This operation resource represents operations that may have happened or are
  /// happening on the cluster. All fields are output only.
  /// </summary>
  public sealed partial class Operation : pb::IMessage<Operation> {
    private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Operation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation(Operation other) : this() {
      name_ = other.name_;
      zone_ = other.zone_;
      operationType_ = other.operationType_;
      status_ = other.status_;
      detail_ = other.detail_;
      statusMessage_ = other.statusMessage_;
      selfLink_ = other.selfLink_;
      targetLink_ = other.targetLink_;
      location_ = other.location_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation Clone() {
      return new Operation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The server-assigned ID for the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the operation
    /// is taking place.
    /// This field is deprecated, use location instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_type" field.</summary>
    public const int OperationTypeFieldNumber = 3;
    private global::Google.Cloud.Container.V1.Operation.Types.Type operationType_ = 0;
    /// <summary>
    /// The operation type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Operation.Types.Type OperationType {
      get { return operationType_; }
      set {
        operationType_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Google.Cloud.Container.V1.Operation.Types.Status status_ = 0;
    /// <summary>
    /// The current status of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Operation.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 8;
    private string detail_ = "";
    /// <summary>
    /// Detailed operation progress, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 5;
    private string statusMessage_ = "";
    /// <summary>
    /// If an error has occurred, a textual description of the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "self_link" field.</summary>
    public const int SelfLinkFieldNumber = 6;
    private string selfLink_ = "";
    /// <summary>
    /// Server-defined URL for the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelfLink {
      get { return selfLink_; }
      set {
        selfLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_link" field.</summary>
    public const int TargetLinkFieldNumber = 7;
    private string targetLink_ = "";
    /// <summary>
    /// Server-defined URL for the target of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetLink {
      get { return targetLink_; }
      set {
        targetLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 9;
    private string location_ = "";
    /// <summary>
    /// [Output only] The name of the Google Compute Engine
    /// [zone](/compute/docs/regions-zones/regions-zones#available) or
    /// [region](/compute/docs/regions-zones/regions-zones#available) in which
    /// the cluster resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 10;
    private string startTime_ = "";
    /// <summary>
    /// [Output only] The time the operation started, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 11;
    private string endTime_ = "";
    /// <summary>
    /// [Output only] The time the operation completed, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Operation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Operation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Zone != other.Zone) return false;
      if (OperationType != other.OperationType) return false;
      if (Status != other.Status) return false;
      if (Detail != other.Detail) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (SelfLink != other.SelfLink) return false;
      if (TargetLink != other.TargetLink) return false;
      if (Location != other.Location) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (OperationType != 0) hash ^= OperationType.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (SelfLink.Length != 0) hash ^= SelfLink.GetHashCode();
      if (TargetLink.Length != 0) hash ^= TargetLink.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (OperationType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationType);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (SelfLink.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SelfLink);
      }
      if (TargetLink.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TargetLink);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Detail);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Location);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (OperationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationType);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (SelfLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelfLink);
      }
      if (TargetLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetLink);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Operation other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.OperationType != 0) {
        OperationType = other.OperationType;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.SelfLink.Length != 0) {
        SelfLink = other.SelfLink;
      }
      if (other.TargetLink.Length != 0) {
        TargetLink = other.TargetLink;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 24: {
            OperationType = (global::Google.Cloud.Container.V1.Operation.Types.Type) input.ReadEnum();
            break;
          }
          case 32: {
            Status = (global::Google.Cloud.Container.V1.Operation.Types.Status) input.ReadEnum();
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
          case 50: {
            SelfLink = input.ReadString();
            break;
          }
          case 58: {
            TargetLink = input.ReadString();
            break;
          }
          case 66: {
            Detail = input.ReadString();
            break;
          }
          case 74: {
            Location = input.ReadString();
            break;
          }
          case 82: {
            StartTime = input.ReadString();
            break;
          }
          case 90: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Operation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Current status of the operation.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The operation has been created.
        /// </summary>
        [pbr::OriginalName("PENDING")] Pending = 1,
        /// <summary>
        /// The operation is currently running.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The operation is done, either cancelled or completed.
        /// </summary>
        [pbr::OriginalName("DONE")] Done = 3,
        /// <summary>
        /// The operation is aborting.
        /// </summary>
        [pbr::OriginalName("ABORTING")] Aborting = 4,
      }

      /// <summary>
      /// Operation type.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Cluster create.
        /// </summary>
        [pbr::OriginalName("CREATE_CLUSTER")] CreateCluster = 1,
        /// <summary>
        /// Cluster delete.
        /// </summary>
        [pbr::OriginalName("DELETE_CLUSTER")] DeleteCluster = 2,
        /// <summary>
        /// A master upgrade.
        /// </summary>
        [pbr::OriginalName("UPGRADE_MASTER")] UpgradeMaster = 3,
        /// <summary>
        /// A node upgrade.
        /// </summary>
        [pbr::OriginalName("UPGRADE_NODES")] UpgradeNodes = 4,
        /// <summary>
        /// Cluster repair.
        /// </summary>
        [pbr::OriginalName("REPAIR_CLUSTER")] RepairCluster = 5,
        /// <summary>
        /// Cluster update.
        /// </summary>
        [pbr::OriginalName("UPDATE_CLUSTER")] UpdateCluster = 6,
        /// <summary>
        /// Node pool create.
        /// </summary>
        [pbr::OriginalName("CREATE_NODE_POOL")] CreateNodePool = 7,
        /// <summary>
        /// Node pool delete.
        /// </summary>
        [pbr::OriginalName("DELETE_NODE_POOL")] DeleteNodePool = 8,
        /// <summary>
        /// Set node pool management.
        /// </summary>
        [pbr::OriginalName("SET_NODE_POOL_MANAGEMENT")] SetNodePoolManagement = 9,
        /// <summary>
        /// Automatic node pool repair.
        /// </summary>
        [pbr::OriginalName("AUTO_REPAIR_NODES")] AutoRepairNodes = 10,
        /// <summary>
        /// Automatic node upgrade.
        /// </summary>
        [pbr::OriginalName("AUTO_UPGRADE_NODES")] AutoUpgradeNodes = 11,
        /// <summary>
        /// Set labels.
        /// </summary>
        [pbr::OriginalName("SET_LABELS")] SetLabels = 12,
        /// <summary>
        /// Set/generate master auth materials
        /// </summary>
        [pbr::OriginalName("SET_MASTER_AUTH")] SetMasterAuth = 13,
        /// <summary>
        /// Set node pool size.
        /// </summary>
        [pbr::OriginalName("SET_NODE_POOL_SIZE")] SetNodePoolSize = 14,
        /// <summary>
        /// Updates network policy for a cluster.
        /// </summary>
        [pbr::OriginalName("SET_NETWORK_POLICY")] SetNetworkPolicy = 15,
        /// <summary>
        /// Set the maintenance policy.
        /// </summary>
        [pbr::OriginalName("SET_MAINTENANCE_POLICY")] SetMaintenancePolicy = 16,
      }

    }
    #endregion

  }

  /// <summary>
  /// CreateClusterRequest creates a cluster.
  /// </summary>
  public sealed partial class CreateClusterRequest : pb::IMessage<CreateClusterRequest> {
    private static readonly pb::MessageParser<CreateClusterRequest> _parser = new pb::MessageParser<CreateClusterRequest>(() => new CreateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest(CreateClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      cluster_ = other.cluster_ != null ? other.cluster_.Clone() : null;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest Clone() {
      return new CreateClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster" field.</summary>
    public const int ClusterFieldNumber = 3;
    private global::Google.Cloud.Container.V1.Cluster cluster_;
    /// <summary>
    /// A [cluster
    /// resource](/container-engine/reference/rest/v1/projects.zones.clusters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Cluster Cluster {
      get { return cluster_; }
      set {
        cluster_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 5;
    private string parent_ = "";
    /// <summary>
    /// The parent (project and location) where the cluster will be created.
    /// Specified in the format 'projects/*/locations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (!object.Equals(Cluster, other.Cluster)) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (cluster_ != null) hash ^= Cluster.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (cluster_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cluster);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (cluster_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cluster);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.cluster_ != null) {
        if (cluster_ == null) {
          Cluster = new global::Google.Cloud.Container.V1.Cluster();
        }
        Cluster.MergeFrom(other.Cluster);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            if (cluster_ == null) {
              Cluster = new global::Google.Cloud.Container.V1.Cluster();
            }
            input.ReadMessage(Cluster);
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetClusterRequest gets the settings of a cluster.
  /// </summary>
  public sealed partial class GetClusterRequest : pb::IMessage<GetClusterRequest> {
    private static readonly pb::MessageParser<GetClusterRequest> _parser = new pb::MessageParser<GetClusterRequest>(() => new GetClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest(GetClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest Clone() {
      return new GetClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to retrieve.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to retrieve.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UpdateClusterRequest updates the settings of a cluster.
  /// </summary>
  public sealed partial class UpdateClusterRequest : pb::IMessage<UpdateClusterRequest> {
    private static readonly pb::MessageParser<UpdateClusterRequest> _parser = new pb::MessageParser<UpdateClusterRequest>(() => new UpdateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest(UpdateClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      update_ = other.update_ != null ? other.update_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest Clone() {
      return new UpdateClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 4;
    private global::Google.Cloud.Container.V1.ClusterUpdate update_;
    /// <summary>
    /// A description of the update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ClusterUpdate Update {
      get { return update_; }
      set {
        update_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to update.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (update_ != null) hash ^= Update.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (update_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Update);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (update_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.update_ != null) {
        if (update_ == null) {
          Update = new global::Google.Cloud.Container.V1.ClusterUpdate();
        }
        Update.MergeFrom(other.Update);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (update_ == null) {
              Update = new global::Google.Cloud.Container.V1.ClusterUpdate();
            }
            input.ReadMessage(Update);
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UpdateNodePoolRequests update a node pool's image and/or version.
  /// </summary>
  public sealed partial class UpdateNodePoolRequest : pb::IMessage<UpdateNodePoolRequest> {
    private static readonly pb::MessageParser<UpdateNodePoolRequest> _parser = new pb::MessageParser<UpdateNodePoolRequest>(() => new UpdateNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNodePoolRequest(UpdateNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      nodeVersion_ = other.nodeVersion_;
      imageType_ = other.imageType_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNodePoolRequest Clone() {
      return new UpdateNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Deprecated. The name of the node pool to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_version" field.</summary>
    public const int NodeVersionFieldNumber = 5;
    private string nodeVersion_ = "";
    /// <summary>
    /// The Kubernetes version to change the nodes to (typically an
    /// upgrade).
    ///
    /// Users may specify either explicit versions offered by Kubernetes Engine or
    /// version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the Kubernetes master version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeVersion {
      get { return nodeVersion_; }
      set {
        nodeVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_type" field.</summary>
    public const int ImageTypeFieldNumber = 6;
    private string imageType_ = "";
    /// <summary>
    /// The desired image type for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageType {
      get { return imageType_; }
      set {
        imageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool) of the node pool to
    /// update. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (NodeVersion != other.NodeVersion) return false;
      if (ImageType != other.ImageType) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (NodeVersion.Length != 0) hash ^= NodeVersion.GetHashCode();
      if (ImageType.Length != 0) hash ^= ImageType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (NodeVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeVersion);
      }
      if (ImageType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImageType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (NodeVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeVersion);
      }
      if (ImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.NodeVersion.Length != 0) {
        NodeVersion = other.NodeVersion;
      }
      if (other.ImageType.Length != 0) {
        ImageType = other.ImageType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 42: {
            NodeVersion = input.ReadString();
            break;
          }
          case 50: {
            ImageType = input.ReadString();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.
  /// </summary>
  public sealed partial class SetNodePoolAutoscalingRequest : pb::IMessage<SetNodePoolAutoscalingRequest> {
    private static readonly pb::MessageParser<SetNodePoolAutoscalingRequest> _parser = new pb::MessageParser<SetNodePoolAutoscalingRequest>(() => new SetNodePoolAutoscalingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNodePoolAutoscalingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolAutoscalingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolAutoscalingRequest(SetNodePoolAutoscalingRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      autoscaling_ = other.autoscaling_ != null ? other.autoscaling_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolAutoscalingRequest Clone() {
      return new SetNodePoolAutoscalingRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Deprecated. The name of the node pool to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "autoscaling" field.</summary>
    public const int AutoscalingFieldNumber = 5;
    private global::Google.Cloud.Container.V1.NodePoolAutoscaling autoscaling_;
    /// <summary>
    /// Autoscaling configuration for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePoolAutoscaling Autoscaling {
      get { return autoscaling_; }
      set {
        autoscaling_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool) of the node pool to set
    /// autoscaler settings. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNodePoolAutoscalingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNodePoolAutoscalingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (!object.Equals(Autoscaling, other.Autoscaling)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (autoscaling_ != null) hash ^= Autoscaling.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (autoscaling_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Autoscaling);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (autoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Autoscaling);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNodePoolAutoscalingRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.autoscaling_ != null) {
        if (autoscaling_ == null) {
          Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
        }
        Autoscaling.MergeFrom(other.Autoscaling);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 42: {
            if (autoscaling_ == null) {
              Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
            }
            input.ReadMessage(Autoscaling);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLoggingServiceRequest sets the logging service of a cluster.
  /// </summary>
  public sealed partial class SetLoggingServiceRequest : pb::IMessage<SetLoggingServiceRequest> {
    private static readonly pb::MessageParser<SetLoggingServiceRequest> _parser = new pb::MessageParser<SetLoggingServiceRequest>(() => new SetLoggingServiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLoggingServiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLoggingServiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLoggingServiceRequest(SetLoggingServiceRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      loggingService_ = other.loggingService_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLoggingServiceRequest Clone() {
      return new SetLoggingServiceRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logging_service" field.</summary>
    public const int LoggingServiceFieldNumber = 4;
    private string loggingService_ = "";
    /// <summary>
    /// The logging service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * "logging.googleapis.com" - the Google Cloud Logging service
    /// * "none" - no metrics will be exported from the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoggingService {
      get { return loggingService_; }
      set {
        loggingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set logging.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLoggingServiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLoggingServiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (LoggingService != other.LoggingService) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (LoggingService.Length != 0) hash ^= LoggingService.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (LoggingService.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LoggingService);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (LoggingService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoggingService);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLoggingServiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.LoggingService.Length != 0) {
        LoggingService = other.LoggingService;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            LoggingService = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetMonitoringServiceRequest sets the monitoring service of a cluster.
  /// </summary>
  public sealed partial class SetMonitoringServiceRequest : pb::IMessage<SetMonitoringServiceRequest> {
    private static readonly pb::MessageParser<SetMonitoringServiceRequest> _parser = new pb::MessageParser<SetMonitoringServiceRequest>(() => new SetMonitoringServiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMonitoringServiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMonitoringServiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMonitoringServiceRequest(SetMonitoringServiceRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      monitoringService_ = other.monitoringService_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMonitoringServiceRequest Clone() {
      return new SetMonitoringServiceRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monitoring_service" field.</summary>
    public const int MonitoringServiceFieldNumber = 4;
    private string monitoringService_ = "";
    /// <summary>
    /// The monitoring service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * "monitoring.googleapis.com" - the Google Cloud Monitoring service
    /// * "none" - no metrics will be exported from the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MonitoringService {
      get { return monitoringService_; }
      set {
        monitoringService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set monitoring.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMonitoringServiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMonitoringServiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (MonitoringService != other.MonitoringService) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (MonitoringService.Length != 0) hash ^= MonitoringService.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (MonitoringService.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MonitoringService);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (MonitoringService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MonitoringService);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMonitoringServiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.MonitoringService.Length != 0) {
        MonitoringService = other.MonitoringService;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            MonitoringService = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetAddonsConfigRequest sets the addons associated with the cluster.
  /// </summary>
  public sealed partial class SetAddonsConfigRequest : pb::IMessage<SetAddonsConfigRequest> {
    private static readonly pb::MessageParser<SetAddonsConfigRequest> _parser = new pb::MessageParser<SetAddonsConfigRequest>(() => new SetAddonsConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAddonsConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAddonsConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAddonsConfigRequest(SetAddonsConfigRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      addonsConfig_ = other.addonsConfig_ != null ? other.addonsConfig_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAddonsConfigRequest Clone() {
      return new SetAddonsConfigRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addons_config" field.</summary>
    public const int AddonsConfigFieldNumber = 4;
    private global::Google.Cloud.Container.V1.AddonsConfig addonsConfig_;
    /// <summary>
    /// The desired configurations for the various addons available to run in the
    /// cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AddonsConfig AddonsConfig {
      get { return addonsConfig_; }
      set {
        addonsConfig_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set addons.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAddonsConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAddonsConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(AddonsConfig, other.AddonsConfig)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (addonsConfig_ != null) hash ^= AddonsConfig.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (addonsConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddonsConfig);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (addonsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddonsConfig);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAddonsConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.addonsConfig_ != null) {
        if (addonsConfig_ == null) {
          AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
        }
        AddonsConfig.MergeFrom(other.AddonsConfig);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (addonsConfig_ == null) {
              AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
            }
            input.ReadMessage(AddonsConfig);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLocationsRequest sets the locations of the cluster.
  /// </summary>
  public sealed partial class SetLocationsRequest : pb::IMessage<SetLocationsRequest> {
    private static readonly pb::MessageParser<SetLocationsRequest> _parser = new pb::MessageParser<SetLocationsRequest>(() => new SetLocationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLocationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocationsRequest(SetLocationsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      locations_ = other.locations_.Clone();
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocationsRequest Clone() {
      return new SetLocationsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_locations_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> locations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The desired list of Google Compute Engine
    /// [locations](/compute/docs/zones#available) in which the cluster's nodes
    /// should be located. Changing the locations a cluster is in will result
    /// in nodes being either created or removed from the cluster, depending on
    /// whether locations are being added or removed.
    ///
    /// This list must always include the cluster's primary zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Locations {
      get { return locations_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set locations.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLocationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLocationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if(!locations_.Equals(other.locations_)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      locations_.WriteTo(output, _repeated_locations_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLocationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      locations_.Add(other.locations_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UpdateMasterRequest updates the master of the cluster.
  /// </summary>
  public sealed partial class UpdateMasterRequest : pb::IMessage<UpdateMasterRequest> {
    private static readonly pb::MessageParser<UpdateMasterRequest> _parser = new pb::MessageParser<UpdateMasterRequest>(() => new UpdateMasterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMasterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterRequest(UpdateMasterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      masterVersion_ = other.masterVersion_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterRequest Clone() {
      return new UpdateMasterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "master_version" field.</summary>
    public const int MasterVersionFieldNumber = 4;
    private string masterVersion_ = "";
    /// <summary>
    /// The Kubernetes version to change the master to.
    ///
    /// Users may specify either explicit versions offered by Kubernetes Engine or
    /// version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the default Kubernetes version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MasterVersion {
      get { return masterVersion_; }
      set {
        masterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to update.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMasterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMasterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (MasterVersion != other.MasterVersion) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (MasterVersion.Length != 0) hash ^= MasterVersion.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (MasterVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MasterVersion);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (MasterVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterVersion);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMasterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.MasterVersion.Length != 0) {
        MasterVersion = other.MasterVersion;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            MasterVersion = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetMasterAuthRequest updates the admin password of a cluster.
  /// </summary>
  public sealed partial class SetMasterAuthRequest : pb::IMessage<SetMasterAuthRequest> {
    private static readonly pb::MessageParser<SetMasterAuthRequest> _parser = new pb::MessageParser<SetMasterAuthRequest>(() => new SetMasterAuthRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMasterAuthRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMasterAuthRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMasterAuthRequest(SetMasterAuthRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      action_ = other.action_;
      update_ = other.update_ != null ? other.update_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMasterAuthRequest Clone() {
      return new SetMasterAuthRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action action_ = 0;
    /// <summary>
    /// The exact form of action to be taken on the master auth.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 5;
    private global::Google.Cloud.Container.V1.MasterAuth update_;
    /// <summary>
    /// A description of the update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuth Update {
      get { return update_; }
      set {
        update_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set auth.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMasterAuthRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMasterAuthRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Action != other.Action) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (update_ != null) hash ^= Update.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Action != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Action);
      }
      if (update_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Update);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (update_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMasterAuthRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.update_ != null) {
        if (update_ == null) {
          Update = new global::Google.Cloud.Container.V1.MasterAuth();
        }
        Update.MergeFrom(other.Update);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 32: {
            Action = (global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action) input.ReadEnum();
            break;
          }
          case 42: {
            if (update_ == null) {
              Update = new global::Google.Cloud.Container.V1.MasterAuth();
            }
            input.ReadMessage(Update);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetMasterAuthRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Operation type: what type update to perform.
      /// </summary>
      public enum Action {
        /// <summary>
        /// Operation is unknown and will error out.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Set the password to a user generated value.
        /// </summary>
        [pbr::OriginalName("SET_PASSWORD")] SetPassword = 1,
        /// <summary>
        /// Generate a new password and set it to that.
        /// </summary>
        [pbr::OriginalName("GENERATE_PASSWORD")] GeneratePassword = 2,
        /// <summary>
        /// Set the username.  If an empty username is provided, basic authentication
        /// is disabled for the cluster.  If a non-empty username is provided, basic
        /// authentication is enabled, with either a provided password or a generated
        /// one.
        /// </summary>
        [pbr::OriginalName("SET_USERNAME")] SetUsername = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// DeleteClusterRequest deletes a cluster.
  /// </summary>
  public sealed partial class DeleteClusterRequest : pb::IMessage<DeleteClusterRequest> {
    private static readonly pb::MessageParser<DeleteClusterRequest> _parser = new pb::MessageParser<DeleteClusterRequest>(() => new DeleteClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest(DeleteClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest Clone() {
      return new DeleteClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to delete.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to delete.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListClustersRequest lists clusters.
  /// </summary>
  public sealed partial class ListClustersRequest : pb::IMessage<ListClustersRequest> {
    private static readonly pb::MessageParser<ListClustersRequest> _parser = new pb::MessageParser<ListClustersRequest>(() => new ListClustersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest(ListClustersRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest Clone() {
      return new ListClustersRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides, or "-" for all zones.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private string parent_ = "";
    /// <summary>
    /// The parent (project and location) where the clusters will be listed.
    /// Specified in the format 'projects/*/locations/*'.
    /// Location "-" matches all zones and all regions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListClustersResponse is the result of ListClustersRequest.
  /// </summary>
  public sealed partial class ListClustersResponse : pb::IMessage<ListClustersResponse> {
    private static readonly pb::MessageParser<ListClustersResponse> _parser = new pb::MessageParser<ListClustersResponse>(() => new ListClustersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse(ListClustersResponse other) : this() {
      clusters_ = other.clusters_.Clone();
      missingZones_ = other.missingZones_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse Clone() {
      return new ListClustersResponse(this);
    }

    /// <summary>Field number for the "clusters" field.</summary>
    public const int ClustersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.Cluster> _repeated_clusters_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Container.V1.Cluster.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.Cluster> clusters_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.Cluster>();
    /// <summary>
    /// A list of clusters in the project in the specified zone, or
    /// across all ones.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.Cluster> Clusters {
      get { return clusters_; }
    }

    /// <summary>Field number for the "missing_zones" field.</summary>
    public const int MissingZonesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_missingZones_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> missingZones_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If any zones are listed here, the list of clusters returned
    /// may be missing those zones.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MissingZones {
      get { return missingZones_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clusters_.Equals(other.clusters_)) return false;
      if(!missingZones_.Equals(other.missingZones_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clusters_.GetHashCode();
      hash ^= missingZones_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clusters_.WriteTo(output, _repeated_clusters_codec);
      missingZones_.WriteTo(output, _repeated_missingZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clusters_.CalculateSize(_repeated_clusters_codec);
      size += missingZones_.CalculateSize(_repeated_missingZones_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersResponse other) {
      if (other == null) {
        return;
      }
      clusters_.Add(other.clusters_);
      missingZones_.Add(other.missingZones_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clusters_.AddEntriesFrom(input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            missingZones_.AddEntriesFrom(input, _repeated_missingZones_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetOperationRequest gets a single operation.
  /// </summary>
  public sealed partial class GetOperationRequest : pb::IMessage<GetOperationRequest> {
    private static readonly pb::MessageParser<GetOperationRequest> _parser = new pb::MessageParser<GetOperationRequest>(() => new GetOperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationRequest(GetOperationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      operationId_ = other.operationId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationRequest Clone() {
      return new GetOperationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_id" field.</summary>
    public const int OperationIdFieldNumber = 3;
    private string operationId_ = "";
    /// <summary>
    /// Deprecated. The server-assigned `name` of the operation.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationId {
      get { return operationId_; }
      set {
        operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, operation id) of the operation to get.
    /// Specified in the format 'projects/*/locations/*/operations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (OperationId != other.OperationId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (OperationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (OperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.OperationId.Length != 0) {
        OperationId = other.OperationId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            OperationId = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListOperationsRequest lists operations.
  /// </summary>
  public sealed partial class ListOperationsRequest : pb::IMessage<ListOperationsRequest> {
    private static readonly pb::MessageParser<ListOperationsRequest> _parser = new pb::MessageParser<ListOperationsRequest>(() => new ListOperationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOperationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsRequest(ListOperationsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsRequest Clone() {
      return new ListOperationsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) to return operations for, or `-` for
    /// all zones. This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private string parent_ = "";
    /// <summary>
    /// The parent (project and location) where the operations will be listed.
    /// Specified in the format 'projects/*/locations/*'.
    /// Location "-" matches all zones and all regions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOperationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOperationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOperationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CancelOperationRequest cancels a single operation.
  /// </summary>
  public sealed partial class CancelOperationRequest : pb::IMessage<CancelOperationRequest> {
    private static readonly pb::MessageParser<CancelOperationRequest> _parser = new pb::MessageParser<CancelOperationRequest>(() => new CancelOperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOperationRequest(CancelOperationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      operationId_ = other.operationId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOperationRequest Clone() {
      return new CancelOperationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the operation resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_id" field.</summary>
    public const int OperationIdFieldNumber = 3;
    private string operationId_ = "";
    /// <summary>
    /// Deprecated. The server-assigned `name` of the operation.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationId {
      get { return operationId_; }
      set {
        operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, operation id) of the operation to cancel.
    /// Specified in the format 'projects/*/locations/*/operations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (OperationId != other.OperationId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (OperationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (OperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.OperationId.Length != 0) {
        OperationId = other.OperationId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            OperationId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListOperationsResponse is the result of ListOperationsRequest.
  /// </summary>
  public sealed partial class ListOperationsResponse : pb::IMessage<ListOperationsResponse> {
    private static readonly pb::MessageParser<ListOperationsResponse> _parser = new pb::MessageParser<ListOperationsResponse>(() => new ListOperationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOperationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsResponse(ListOperationsResponse other) : this() {
      operations_ = other.operations_.Clone();
      missingZones_ = other.missingZones_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsResponse Clone() {
      return new ListOperationsResponse(this);
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Container.V1.Operation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.Operation> operations_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.Operation>();
    /// <summary>
    /// A list of operations in the project in the specified zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "missing_zones" field.</summary>
    public const int MissingZonesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_missingZones_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> missingZones_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If any zones are listed here, the list of operations returned
    /// may be missing the operations from those zones.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MissingZones {
      get { return missingZones_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOperationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOperationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!operations_.Equals(other.operations_)) return false;
      if(!missingZones_.Equals(other.missingZones_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= operations_.GetHashCode();
      hash ^= missingZones_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      operations_.WriteTo(output, _repeated_operations_codec);
      missingZones_.WriteTo(output, _repeated_missingZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += operations_.CalculateSize(_repeated_operations_codec);
      size += missingZones_.CalculateSize(_repeated_missingZones_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOperationsResponse other) {
      if (other == null) {
        return;
      }
      operations_.Add(other.operations_);
      missingZones_.Add(other.missingZones_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 18: {
            missingZones_.AddEntriesFrom(input, _repeated_missingZones_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gets the current Kubernetes Engine service configuration.
  /// </summary>
  public sealed partial class GetServerConfigRequest : pb::IMessage<GetServerConfigRequest> {
    private static readonly pb::MessageParser<GetServerConfigRequest> _parser = new pb::MessageParser<GetServerConfigRequest>(() => new GetServerConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetServerConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServerConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServerConfigRequest(GetServerConfigRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServerConfigRequest Clone() {
      return new GetServerConfigRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) to return operations for.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The name (project and location) of the server config to get
    /// Specified in the format 'projects/*/locations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetServerConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetServerConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetServerConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Kubernetes Engine service configuration.
  /// </summary>
  public sealed partial class ServerConfig : pb::IMessage<ServerConfig> {
    private static readonly pb::MessageParser<ServerConfig> _parser = new pb::MessageParser<ServerConfig>(() => new ServerConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerConfig(ServerConfig other) : this() {
      defaultClusterVersion_ = other.defaultClusterVersion_;
      validNodeVersions_ = other.validNodeVersions_.Clone();
      defaultImageType_ = other.defaultImageType_;
      validImageTypes_ = other.validImageTypes_.Clone();
      validMasterVersions_ = other.validMasterVersions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerConfig Clone() {
      return new ServerConfig(this);
    }

    /// <summary>Field number for the "default_cluster_version" field.</summary>
    public const int DefaultClusterVersionFieldNumber = 1;
    private string defaultClusterVersion_ = "";
    /// <summary>
    /// Version of Kubernetes the service deploys by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultClusterVersion {
      get { return defaultClusterVersion_; }
      set {
        defaultClusterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_node_versions" field.</summary>
    public const int ValidNodeVersionsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_validNodeVersions_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> validNodeVersions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of valid node upgrade target versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValidNodeVersions {
      get { return validNodeVersions_; }
    }

    /// <summary>Field number for the "default_image_type" field.</summary>
    public const int DefaultImageTypeFieldNumber = 4;
    private string defaultImageType_ = "";
    /// <summary>
    /// Default image type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultImageType {
      get { return defaultImageType_; }
      set {
        defaultImageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_image_types" field.</summary>
    public const int ValidImageTypesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_validImageTypes_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> validImageTypes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of valid image types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValidImageTypes {
      get { return validImageTypes_; }
    }

    /// <summary>Field number for the "valid_master_versions" field.</summary>
    public const int ValidMasterVersionsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_validMasterVersions_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> validMasterVersions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of valid master versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValidMasterVersions {
      get { return validMasterVersions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultClusterVersion != other.DefaultClusterVersion) return false;
      if(!validNodeVersions_.Equals(other.validNodeVersions_)) return false;
      if (DefaultImageType != other.DefaultImageType) return false;
      if(!validImageTypes_.Equals(other.validImageTypes_)) return false;
      if(!validMasterVersions_.Equals(other.validMasterVersions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultClusterVersion.Length != 0) hash ^= DefaultClusterVersion.GetHashCode();
      hash ^= validNodeVersions_.GetHashCode();
      if (DefaultImageType.Length != 0) hash ^= DefaultImageType.GetHashCode();
      hash ^= validImageTypes_.GetHashCode();
      hash ^= validMasterVersions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefaultClusterVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DefaultClusterVersion);
      }
      validNodeVersions_.WriteTo(output, _repeated_validNodeVersions_codec);
      if (DefaultImageType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DefaultImageType);
      }
      validImageTypes_.WriteTo(output, _repeated_validImageTypes_codec);
      validMasterVersions_.WriteTo(output, _repeated_validMasterVersions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultClusterVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultClusterVersion);
      }
      size += validNodeVersions_.CalculateSize(_repeated_validNodeVersions_codec);
      if (DefaultImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultImageType);
      }
      size += validImageTypes_.CalculateSize(_repeated_validImageTypes_codec);
      size += validMasterVersions_.CalculateSize(_repeated_validMasterVersions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerConfig other) {
      if (other == null) {
        return;
      }
      if (other.DefaultClusterVersion.Length != 0) {
        DefaultClusterVersion = other.DefaultClusterVersion;
      }
      validNodeVersions_.Add(other.validNodeVersions_);
      if (other.DefaultImageType.Length != 0) {
        DefaultImageType = other.DefaultImageType;
      }
      validImageTypes_.Add(other.validImageTypes_);
      validMasterVersions_.Add(other.validMasterVersions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DefaultClusterVersion = input.ReadString();
            break;
          }
          case 26: {
            validNodeVersions_.AddEntriesFrom(input, _repeated_validNodeVersions_codec);
            break;
          }
          case 34: {
            DefaultImageType = input.ReadString();
            break;
          }
          case 42: {
            validImageTypes_.AddEntriesFrom(input, _repeated_validImageTypes_codec);
            break;
          }
          case 50: {
            validMasterVersions_.AddEntriesFrom(input, _repeated_validMasterVersions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CreateNodePoolRequest creates a node pool for a cluster.
  /// </summary>
  public sealed partial class CreateNodePoolRequest : pb::IMessage<CreateNodePoolRequest> {
    private static readonly pb::MessageParser<CreateNodePoolRequest> _parser = new pb::MessageParser<CreateNodePoolRequest>(() => new CreateNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodePoolRequest(CreateNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePool_ = other.nodePool_ != null ? other.nodePool_.Clone() : null;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodePoolRequest Clone() {
      return new CreateNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool" field.</summary>
    public const int NodePoolFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NodePool nodePool_;
    /// <summary>
    /// The node pool to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePool NodePool {
      get { return nodePool_; }
      set {
        nodePool_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 6;
    private string parent_ = "";
    /// <summary>
    /// The parent (project, location, cluster id) where the node pool will be
    /// created. Specified in the format
    /// 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(NodePool, other.NodePool)) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (nodePool_ != null) hash ^= NodePool.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (nodePool_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NodePool);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (nodePool_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodePool);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.nodePool_ != null) {
        if (nodePool_ == null) {
          NodePool = new global::Google.Cloud.Container.V1.NodePool();
        }
        NodePool.MergeFrom(other.NodePool);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (nodePool_ == null) {
              NodePool = new global::Google.Cloud.Container.V1.NodePool();
            }
            input.ReadMessage(NodePool);
            break;
          }
          case 50: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DeleteNodePoolRequest deletes a node pool for a cluster.
  /// </summary>
  public sealed partial class DeleteNodePoolRequest : pb::IMessage<DeleteNodePoolRequest> {
    private static readonly pb::MessageParser<DeleteNodePoolRequest> _parser = new pb::MessageParser<DeleteNodePoolRequest>(() => new DeleteNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodePoolRequest(DeleteNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodePoolRequest Clone() {
      return new DeleteNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Deprecated. The name of the node pool to delete.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to
    /// delete. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListNodePoolsRequest lists the node pool(s) for a cluster.
  /// </summary>
  public sealed partial class ListNodePoolsRequest : pb::IMessage<ListNodePoolsRequest> {
    private static readonly pb::MessageParser<ListNodePoolsRequest> _parser = new pb::MessageParser<ListNodePoolsRequest>(() => new ListNodePoolsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNodePoolsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsRequest(ListNodePoolsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsRequest Clone() {
      return new ListNodePoolsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 5;
    private string parent_ = "";
    /// <summary>
    /// The parent (project, location, cluster id) where the node pools will be
    /// listed. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNodePoolsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNodePoolsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNodePoolsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetNodePoolRequest retrieves a node pool for a cluster.
  /// </summary>
  public sealed partial class GetNodePoolRequest : pb::IMessage<GetNodePoolRequest> {
    private static readonly pb::MessageParser<GetNodePoolRequest> _parser = new pb::MessageParser<GetNodePoolRequest>(() => new GetNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodePoolRequest(GetNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodePoolRequest Clone() {
      return new GetNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Deprecated. The name of the node pool.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to
    /// get. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NodePool contains the name and configuration for a cluster's node pool.
  /// Node pools are a set of nodes (i.e. VM's), with a common configuration and
  /// specification, under the control of the cluster master. They may have a set
  /// of Kubernetes labels applied to them, which may be used to reference them
  /// during pod scheduling. They may also be resized up or down, to accommodate
  /// the workload.
  /// </summary>
  public sealed partial class NodePool : pb::IMessage<NodePool> {
    private static readonly pb::MessageParser<NodePool> _parser = new pb::MessageParser<NodePool>(() => new NodePool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodePool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePool(NodePool other) : this() {
      name_ = other.name_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      initialNodeCount_ = other.initialNodeCount_;
      selfLink_ = other.selfLink_;
      version_ = other.version_;
      instanceGroupUrls_ = other.instanceGroupUrls_.Clone();
      status_ = other.status_;
      statusMessage_ = other.statusMessage_;
      autoscaling_ = other.autoscaling_ != null ? other.autoscaling_.Clone() : null;
      management_ = other.management_ != null ? other.management_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePool Clone() {
      return new NodePool(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Cloud.Container.V1.NodeConfig config_;
    /// <summary>
    /// The node configuration of the pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "initial_node_count" field.</summary>
    public const int InitialNodeCountFieldNumber = 3;
    private int initialNodeCount_;
    /// <summary>
    /// The initial node count for the pool. You must ensure that your
    /// Compute Engine &lt;a href="/compute/docs/resource-quotas">resource quota&lt;/a>
    /// is sufficient for this number of instances. You must also have available
    /// firewall and routes quota.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitialNodeCount {
      get { return initialNodeCount_; }
      set {
        initialNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "self_link" field.</summary>
    public const int SelfLinkFieldNumber = 100;
    private string selfLink_ = "";
    /// <summary>
    /// [Output only] Server-defined URL for the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelfLink {
      get { return selfLink_; }
      set {
        selfLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 101;
    private string version_ = "";
    /// <summary>
    /// The version of the Kubernetes of this node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_group_urls" field.</summary>
    public const int InstanceGroupUrlsFieldNumber = 102;
    private static readonly pb::FieldCodec<string> _repeated_instanceGroupUrls_codec
        = pb::FieldCodec.ForString(818);
    private readonly pbc::RepeatedField<string> instanceGroupUrls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// [Output only] The resource URLs of the [managed instance
    /// groups](/compute/docs/instance-groups/creating-groups-of-managed-instances)
    /// associated with this node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InstanceGroupUrls {
      get { return instanceGroupUrls_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 103;
    private global::Google.Cloud.Container.V1.NodePool.Types.Status status_ = 0;
    /// <summary>
    /// [Output only] The status of the nodes in this pool instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePool.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 104;
    private string statusMessage_ = "";
    /// <summary>
    /// [Output only] Additional information about the current status of this
    /// node pool instance, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "autoscaling" field.</summary>
    public const int AutoscalingFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NodePoolAutoscaling autoscaling_;
    /// <summary>
    /// Autoscaler configuration for this NodePool. Autoscaler is enabled
    /// only if a valid configuration is present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePoolAutoscaling Autoscaling {
      get { return autoscaling_; }
      set {
        autoscaling_ = value;
      }
    }

    /// <summary>Field number for the "management" field.</summary>
    public const int ManagementFieldNumber = 5;
    private global::Google.Cloud.Container.V1.NodeManagement management_;
    /// <summary>
    /// NodeManagement configuration for this NodePool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeManagement Management {
      get { return management_; }
      set {
        management_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodePool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodePool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (InitialNodeCount != other.InitialNodeCount) return false;
      if (SelfLink != other.SelfLink) return false;
      if (Version != other.Version) return false;
      if(!instanceGroupUrls_.Equals(other.instanceGroupUrls_)) return false;
      if (Status != other.Status) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (!object.Equals(Autoscaling, other.Autoscaling)) return false;
      if (!object.Equals(Management, other.Management)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (InitialNodeCount != 0) hash ^= InitialNodeCount.GetHashCode();
      if (SelfLink.Length != 0) hash ^= SelfLink.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      hash ^= instanceGroupUrls_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (autoscaling_ != null) hash ^= Autoscaling.GetHashCode();
      if (management_ != null) hash ^= Management.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (InitialNodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialNodeCount);
      }
      if (autoscaling_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Autoscaling);
      }
      if (management_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Management);
      }
      if (SelfLink.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(SelfLink);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Version);
      }
      instanceGroupUrls_.WriteTo(output, _repeated_instanceGroupUrls_codec);
      if (Status != 0) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) Status);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(194, 6);
        output.WriteString(StatusMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (InitialNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialNodeCount);
      }
      if (SelfLink.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SelfLink);
      }
      if (Version.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += instanceGroupUrls_.CalculateSize(_repeated_instanceGroupUrls_codec);
      if (Status != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusMessage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (autoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Autoscaling);
      }
      if (management_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Management);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodePool other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Cloud.Container.V1.NodeConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.InitialNodeCount != 0) {
        InitialNodeCount = other.InitialNodeCount;
      }
      if (other.SelfLink.Length != 0) {
        SelfLink = other.SelfLink;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      instanceGroupUrls_.Add(other.instanceGroupUrls_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.autoscaling_ != null) {
        if (autoscaling_ == null) {
          Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
        }
        Autoscaling.MergeFrom(other.Autoscaling);
      }
      if (other.management_ != null) {
        if (management_ == null) {
          Management = new global::Google.Cloud.Container.V1.NodeManagement();
        }
        Management.MergeFrom(other.Management);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Container.V1.NodeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            InitialNodeCount = input.ReadInt32();
            break;
          }
          case 34: {
            if (autoscaling_ == null) {
              Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
            }
            input.ReadMessage(Autoscaling);
            break;
          }
          case 42: {
            if (management_ == null) {
              Management = new global::Google.Cloud.Container.V1.NodeManagement();
            }
            input.ReadMessage(Management);
            break;
          }
          case 802: {
            SelfLink = input.ReadString();
            break;
          }
          case 810: {
            Version = input.ReadString();
            break;
          }
          case 818: {
            instanceGroupUrls_.AddEntriesFrom(input, _repeated_instanceGroupUrls_codec);
            break;
          }
          case 824: {
            Status = (global::Google.Cloud.Container.V1.NodePool.Types.Status) input.ReadEnum();
            break;
          }
          case 834: {
            StatusMessage = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NodePool message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The current status of the node pool instance.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The PROVISIONING state indicates the node pool is being created.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// The RUNNING state indicates the node pool has been created
        /// and is fully usable.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The RUNNING_WITH_ERROR state indicates the node pool has been created
        /// and is partially usable. Some error state has occurred and some
        /// functionality may be impaired. Customer may need to reissue a request
        /// or trigger a new update.
        /// </summary>
        [pbr::OriginalName("RUNNING_WITH_ERROR")] RunningWithError = 3,
        /// <summary>
        /// The RECONCILING state indicates that some work is actively being done on
        /// the node pool, such as upgrading node software. Details can
        /// be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("RECONCILING")] Reconciling = 4,
        /// <summary>
        /// The STOPPING state indicates the node pool is being deleted.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 5,
        /// <summary>
        /// The ERROR state indicates the node pool may be unusable. Details
        /// can be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// NodeManagement defines the set of node management services turned on for the
  /// node pool.
  /// </summary>
  public sealed partial class NodeManagement : pb::IMessage<NodeManagement> {
    private static readonly pb::MessageParser<NodeManagement> _parser = new pb::MessageParser<NodeManagement>(() => new NodeManagement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeManagement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeManagement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeManagement(NodeManagement other) : this() {
      autoUpgrade_ = other.autoUpgrade_;
      autoRepair_ = other.autoRepair_;
      upgradeOptions_ = other.upgradeOptions_ != null ? other.upgradeOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeManagement Clone() {
      return new NodeManagement(this);
    }

    /// <summary>Field number for the "auto_upgrade" field.</summary>
    public const int AutoUpgradeFieldNumber = 1;
    private bool autoUpgrade_;
    /// <summary>
    /// A flag that specifies whether node auto-upgrade is enabled for the node
    /// pool. If enabled, node auto-upgrade helps keep the nodes in your node pool
    /// up to date with the latest release version of Kubernetes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoUpgrade {
      get { return autoUpgrade_; }
      set {
        autoUpgrade_ = value;
      }
    }

    /// <summary>Field number for the "auto_repair" field.</summary>
    public const int AutoRepairFieldNumber = 2;
    private bool autoRepair_;
    /// <summary>
    /// A flag that specifies whether the node auto-repair is enabled for the node
    /// pool. If enabled, the nodes in this node pool will be monitored and, if
    /// they fail health checks too many times, an automatic repair action will be
    /// triggered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoRepair {
      get { return autoRepair_; }
      set {
        autoRepair_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_options" field.</summary>
    public const int UpgradeOptionsFieldNumber = 10;
    private global::Google.Cloud.Container.V1.AutoUpgradeOptions upgradeOptions_;
    /// <summary>
    /// Specifies the Auto Upgrade knobs for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AutoUpgradeOptions UpgradeOptions {
      get { return upgradeOptions_; }
      set {
        upgradeOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeManagement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeManagement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoUpgrade != other.AutoUpgrade) return false;
      if (AutoRepair != other.AutoRepair) return false;
      if (!object.Equals(UpgradeOptions, other.UpgradeOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoUpgrade != false) hash ^= AutoUpgrade.GetHashCode();
      if (AutoRepair != false) hash ^= AutoRepair.GetHashCode();
      if (upgradeOptions_ != null) hash ^= UpgradeOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AutoUpgrade != false) {
        output.WriteRawTag(8);
        output.WriteBool(AutoUpgrade);
      }
      if (AutoRepair != false) {
        output.WriteRawTag(16);
        output.WriteBool(AutoRepair);
      }
      if (upgradeOptions_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UpgradeOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AutoUpgrade != false) {
        size += 1 + 1;
      }
      if (AutoRepair != false) {
        size += 1 + 1;
      }
      if (upgradeOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpgradeOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeManagement other) {
      if (other == null) {
        return;
      }
      if (other.AutoUpgrade != false) {
        AutoUpgrade = other.AutoUpgrade;
      }
      if (other.AutoRepair != false) {
        AutoRepair = other.AutoRepair;
      }
      if (other.upgradeOptions_ != null) {
        if (upgradeOptions_ == null) {
          UpgradeOptions = new global::Google.Cloud.Container.V1.AutoUpgradeOptions();
        }
        UpgradeOptions.MergeFrom(other.UpgradeOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AutoUpgrade = input.ReadBool();
            break;
          }
          case 16: {
            AutoRepair = input.ReadBool();
            break;
          }
          case 82: {
            if (upgradeOptions_ == null) {
              UpgradeOptions = new global::Google.Cloud.Container.V1.AutoUpgradeOptions();
            }
            input.ReadMessage(UpgradeOptions);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AutoUpgradeOptions defines the set of options for the user to control how
  /// the Auto Upgrades will proceed.
  /// </summary>
  public sealed partial class AutoUpgradeOptions : pb::IMessage<AutoUpgradeOptions> {
    private static readonly pb::MessageParser<AutoUpgradeOptions> _parser = new pb::MessageParser<AutoUpgradeOptions>(() => new AutoUpgradeOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoUpgradeOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoUpgradeOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoUpgradeOptions(AutoUpgradeOptions other) : this() {
      autoUpgradeStartTime_ = other.autoUpgradeStartTime_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoUpgradeOptions Clone() {
      return new AutoUpgradeOptions(this);
    }

    /// <summary>Field number for the "auto_upgrade_start_time" field.</summary>
    public const int AutoUpgradeStartTimeFieldNumber = 1;
    private string autoUpgradeStartTime_ = "";
    /// <summary>
    /// [Output only] This field is set when upgrades are about to commence
    /// with the approximate start time for the upgrades, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AutoUpgradeStartTime {
      get { return autoUpgradeStartTime_; }
      set {
        autoUpgradeStartTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// [Output only] This field is set when upgrades are about to commence
    /// with the description of the upgrade.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoUpgradeOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoUpgradeOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoUpgradeStartTime != other.AutoUpgradeStartTime) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoUpgradeStartTime.Length != 0) hash ^= AutoUpgradeStartTime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AutoUpgradeStartTime.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AutoUpgradeStartTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AutoUpgradeStartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AutoUpgradeStartTime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoUpgradeOptions other) {
      if (other == null) {
        return;
      }
      if (other.AutoUpgradeStartTime.Length != 0) {
        AutoUpgradeStartTime = other.AutoUpgradeStartTime;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AutoUpgradeStartTime = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MaintenancePolicy defines the maintenance policy to be used for the cluster.
  /// </summary>
  public sealed partial class MaintenancePolicy : pb::IMessage<MaintenancePolicy> {
    private static readonly pb::MessageParser<MaintenancePolicy> _parser = new pb::MessageParser<MaintenancePolicy>(() => new MaintenancePolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaintenancePolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenancePolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenancePolicy(MaintenancePolicy other) : this() {
      window_ = other.window_ != null ? other.window_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenancePolicy Clone() {
      return new MaintenancePolicy(this);
    }

    /// <summary>Field number for the "window" field.</summary>
    public const int WindowFieldNumber = 1;
    private global::Google.Cloud.Container.V1.MaintenanceWindow window_;
    /// <summary>
    /// Specifies the maintenance window in which maintenance may be performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaintenanceWindow Window {
      get { return window_; }
      set {
        window_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaintenancePolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaintenancePolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Window, other.Window)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (window_ != null) hash ^= Window.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (window_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Window);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (window_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Window);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaintenancePolicy other) {
      if (other == null) {
        return;
      }
      if (other.window_ != null) {
        if (window_ == null) {
          Window = new global::Google.Cloud.Container.V1.MaintenanceWindow();
        }
        Window.MergeFrom(other.Window);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (window_ == null) {
              Window = new global::Google.Cloud.Container.V1.MaintenanceWindow();
            }
            input.ReadMessage(Window);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MaintenanceWindow defines the maintenance window to be used for the cluster.
  /// </summary>
  public sealed partial class MaintenanceWindow : pb::IMessage<MaintenanceWindow> {
    private static readonly pb::MessageParser<MaintenanceWindow> _parser = new pb::MessageParser<MaintenanceWindow>(() => new MaintenanceWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaintenanceWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenanceWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenanceWindow(MaintenanceWindow other) : this() {
      switch (other.PolicyCase) {
        case PolicyOneofCase.DailyMaintenanceWindow:
          DailyMaintenanceWindow = other.DailyMaintenanceWindow.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenanceWindow Clone() {
      return new MaintenanceWindow(this);
    }

    /// <summary>Field number for the "daily_maintenance_window" field.</summary>
    public const int DailyMaintenanceWindowFieldNumber = 2;
    /// <summary>
    /// DailyMaintenanceWindow specifies a daily maintenance operation window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.DailyMaintenanceWindow DailyMaintenanceWindow {
      get { return policyCase_ == PolicyOneofCase.DailyMaintenanceWindow ? (global::Google.Cloud.Container.V1.DailyMaintenanceWindow) policy_ : null; }
      set {
        policy_ = value;
        policyCase_ = value == null ? PolicyOneofCase.None : PolicyOneofCase.DailyMaintenanceWindow;
      }
    }

    private object policy_;
    /// <summary>Enum of possible cases for the "policy" oneof.</summary>
    public enum PolicyOneofCase {
      None = 0,
      DailyMaintenanceWindow = 2,
    }
    private PolicyOneofCase policyCase_ = PolicyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyOneofCase PolicyCase {
      get { return policyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPolicy() {
      policyCase_ = PolicyOneofCase.None;
      policy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaintenanceWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaintenanceWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DailyMaintenanceWindow, other.DailyMaintenanceWindow)) return false;
      if (PolicyCase != other.PolicyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) hash ^= DailyMaintenanceWindow.GetHashCode();
      hash ^= (int) policyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) {
        output.WriteRawTag(18);
        output.WriteMessage(DailyMaintenanceWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DailyMaintenanceWindow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaintenanceWindow other) {
      if (other == null) {
        return;
      }
      switch (other.PolicyCase) {
        case PolicyOneofCase.DailyMaintenanceWindow:
          if (DailyMaintenanceWindow == null) {
            DailyMaintenanceWindow = new global::Google.Cloud.Container.V1.DailyMaintenanceWindow();
          }
          DailyMaintenanceWindow.MergeFrom(other.DailyMaintenanceWindow);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Cloud.Container.V1.DailyMaintenanceWindow subBuilder = new global::Google.Cloud.Container.V1.DailyMaintenanceWindow();
            if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) {
              subBuilder.MergeFrom(DailyMaintenanceWindow);
            }
            input.ReadMessage(subBuilder);
            DailyMaintenanceWindow = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Time window specified for daily maintenance operations.
  /// </summary>
  public sealed partial class DailyMaintenanceWindow : pb::IMessage<DailyMaintenanceWindow> {
    private static readonly pb::MessageParser<DailyMaintenanceWindow> _parser = new pb::MessageParser<DailyMaintenanceWindow>(() => new DailyMaintenanceWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyMaintenanceWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyMaintenanceWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyMaintenanceWindow(DailyMaintenanceWindow other) : this() {
      startTime_ = other.startTime_;
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyMaintenanceWindow Clone() {
      return new DailyMaintenanceWindow(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private string startTime_ = "";
    /// <summary>
    /// Time within the maintenance window to start the maintenance operations.
    /// Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
    /// format "HH:MM”, where HH : [00-23] and MM : [00-59] GMT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 3;
    private string duration_ = "";
    /// <summary>
    /// [Output only] Duration of the time window, automatically chosen to be
    /// smallest possible in the given scenario.
    /// Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
    /// format "PTnHnMnS".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Duration {
      get { return duration_; }
      set {
        duration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyMaintenanceWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyMaintenanceWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (Duration != other.Duration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (Duration.Length != 0) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartTime);
      }
      if (Duration.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (Duration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyMaintenanceWindow other) {
      if (other == null) {
        return;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.Duration.Length != 0) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            StartTime = input.ReadString();
            break;
          }
          case 26: {
            Duration = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNodePoolManagementRequest sets the node management properties of a node
  /// pool.
  /// </summary>
  public sealed partial class SetNodePoolManagementRequest : pb::IMessage<SetNodePoolManagementRequest> {
    private static readonly pb::MessageParser<SetNodePoolManagementRequest> _parser = new pb::MessageParser<SetNodePoolManagementRequest>(() => new SetNodePoolManagementRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNodePoolManagementRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolManagementRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolManagementRequest(SetNodePoolManagementRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      management_ = other.management_ != null ? other.management_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolManagementRequest Clone() {
      return new SetNodePoolManagementRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Deprecated. The name of the node pool to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "management" field.</summary>
    public const int ManagementFieldNumber = 5;
    private global::Google.Cloud.Container.V1.NodeManagement management_;
    /// <summary>
    /// NodeManagement configuration for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeManagement Management {
      get { return management_; }
      set {
        management_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to set
    /// management properties. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNodePoolManagementRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNodePoolManagementRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (!object.Equals(Management, other.Management)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (management_ != null) hash ^= Management.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (management_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Management);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (management_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Management);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNodePoolManagementRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.management_ != null) {
        if (management_ == null) {
          Management = new global::Google.Cloud.Container.V1.NodeManagement();
        }
        Management.MergeFrom(other.Management);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 42: {
            if (management_ == null) {
              Management = new global::Google.Cloud.Container.V1.NodeManagement();
            }
            input.ReadMessage(Management);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNodePoolSizeRequest sets the size a node
  /// pool.
  /// </summary>
  public sealed partial class SetNodePoolSizeRequest : pb::IMessage<SetNodePoolSizeRequest> {
    private static readonly pb::MessageParser<SetNodePoolSizeRequest> _parser = new pb::MessageParser<SetNodePoolSizeRequest>(() => new SetNodePoolSizeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNodePoolSizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolSizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolSizeRequest(SetNodePoolSizeRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      nodeCount_ = other.nodeCount_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolSizeRequest Clone() {
      return new SetNodePoolSizeRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Deprecated. The name of the node pool to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_count" field.</summary>
    public const int NodeCountFieldNumber = 5;
    private int nodeCount_;
    /// <summary>
    /// The desired node count for the pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeCount {
      get { return nodeCount_; }
      set {
        nodeCount_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to set
    /// size.
    /// Specified in the format 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNodePoolSizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNodePoolSizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (NodeCount != other.NodeCount) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (NodeCount != 0) hash ^= NodeCount.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (NodeCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NodeCount);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (NodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeCount);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNodePoolSizeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.NodeCount != 0) {
        NodeCount = other.NodeCount;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 40: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed
  /// NodePool upgrade. This will be an no-op if the last upgrade successfully
  /// completed.
  /// </summary>
  public sealed partial class RollbackNodePoolUpgradeRequest : pb::IMessage<RollbackNodePoolUpgradeRequest> {
    private static readonly pb::MessageParser<RollbackNodePoolUpgradeRequest> _parser = new pb::MessageParser<RollbackNodePoolUpgradeRequest>(() => new RollbackNodePoolUpgradeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RollbackNodePoolUpgradeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackNodePoolUpgradeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackNodePoolUpgradeRequest(RollbackNodePoolUpgradeRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackNodePoolUpgradeRequest Clone() {
      return new RollbackNodePoolUpgradeRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to rollback.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Deprecated. The name of the node pool to rollback.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node poll to
    /// rollback upgrade.
    /// Specified in the format 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RollbackNodePoolUpgradeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RollbackNodePoolUpgradeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RollbackNodePoolUpgradeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListNodePoolsResponse is the result of ListNodePoolsRequest.
  /// </summary>
  public sealed partial class ListNodePoolsResponse : pb::IMessage<ListNodePoolsResponse> {
    private static readonly pb::MessageParser<ListNodePoolsResponse> _parser = new pb::MessageParser<ListNodePoolsResponse>(() => new ListNodePoolsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNodePoolsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsResponse(ListNodePoolsResponse other) : this() {
      nodePools_ = other.nodePools_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsResponse Clone() {
      return new ListNodePoolsResponse(this);
    }

    /// <summary>Field number for the "node_pools" field.</summary>
    public const int NodePoolsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.NodePool> _repeated_nodePools_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Container.V1.NodePool.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> nodePools_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool>();
    /// <summary>
    /// A list of node pools for a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> NodePools {
      get { return nodePools_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNodePoolsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNodePoolsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodePools_.Equals(other.nodePools_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodePools_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodePools_.WriteTo(output, _repeated_nodePools_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodePools_.CalculateSize(_repeated_nodePools_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNodePoolsResponse other) {
      if (other == null) {
        return;
      }
      nodePools_.Add(other.nodePools_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodePools_.AddEntriesFrom(input, _repeated_nodePools_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NodePoolAutoscaling contains information required by cluster autoscaler to
  /// adjust the size of the node pool to the current cluster usage.
  /// </summary>
  public sealed partial class NodePoolAutoscaling : pb::IMessage<NodePoolAutoscaling> {
    private static readonly pb::MessageParser<NodePoolAutoscaling> _parser = new pb::MessageParser<NodePoolAutoscaling>(() => new NodePoolAutoscaling());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodePoolAutoscaling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePoolAutoscaling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePoolAutoscaling(NodePoolAutoscaling other) : this() {
      enabled_ = other.enabled_;
      minNodeCount_ = other.minNodeCount_;
      maxNodeCount_ = other.maxNodeCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePoolAutoscaling Clone() {
      return new NodePoolAutoscaling(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Is autoscaling enabled for this node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "min_node_count" field.</summary>
    public const int MinNodeCountFieldNumber = 2;
    private int minNodeCount_;
    /// <summary>
    /// Minimum number of nodes in the NodePool. Must be >= 1 and &lt;=
    /// max_node_count.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinNodeCount {
      get { return minNodeCount_; }
      set {
        minNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "max_node_count" field.</summary>
    public const int MaxNodeCountFieldNumber = 3;
    private int maxNodeCount_;
    /// <summary>
    /// Maximum number of nodes in the NodePool. Must be >= min_node_count. There
    /// has to enough quota to scale up the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxNodeCount {
      get { return maxNodeCount_; }
      set {
        maxNodeCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodePoolAutoscaling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodePoolAutoscaling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (MinNodeCount != other.MinNodeCount) return false;
      if (MaxNodeCount != other.MaxNodeCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (MinNodeCount != 0) hash ^= MinNodeCount.GetHashCode();
      if (MaxNodeCount != 0) hash ^= MaxNodeCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (MinNodeCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinNodeCount);
      }
      if (MaxNodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxNodeCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (MinNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinNodeCount);
      }
      if (MaxNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNodeCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodePoolAutoscaling other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.MinNodeCount != 0) {
        MinNodeCount = other.MinNodeCount;
      }
      if (other.MaxNodeCount != 0) {
        MaxNodeCount = other.MaxNodeCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            MinNodeCount = input.ReadInt32();
            break;
          }
          case 24: {
            MaxNodeCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLabelsRequest sets the Google Cloud Platform labels on a Google Container
  /// Engine cluster, which will in turn set them for Google Compute Engine
  /// resources used by that cluster
  /// </summary>
  public sealed partial class SetLabelsRequest : pb::IMessage<SetLabelsRequest> {
    private static readonly pb::MessageParser<SetLabelsRequest> _parser = new pb::MessageParser<SetLabelsRequest>(() => new SetLabelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLabelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLabelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLabelsRequest(SetLabelsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      resourceLabels_ = other.resourceLabels_.Clone();
      labelFingerprint_ = other.labelFingerprint_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLabelsRequest Clone() {
      return new SetLabelsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_labels" field.</summary>
    public const int ResourceLabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_resourceLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> resourceLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The labels to set for that cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ResourceLabels {
      get { return resourceLabels_; }
    }

    /// <summary>Field number for the "label_fingerprint" field.</summary>
    public const int LabelFingerprintFieldNumber = 5;
    private string labelFingerprint_ = "";
    /// <summary>
    /// The fingerprint of the previous set of labels for this resource,
    /// used to detect conflicts. The fingerprint is initially generated by
    /// Kubernetes Engine and changes after every request to modify or update
    /// labels. You must always provide an up-to-date fingerprint hash when
    /// updating or changing labels. Make a &lt;code>get()&lt;/code> request to the
    /// resource to get the latest fingerprint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelFingerprint {
      get { return labelFingerprint_; }
      set {
        labelFingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set labels.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLabelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLabelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!ResourceLabels.Equals(other.ResourceLabels)) return false;
      if (LabelFingerprint != other.LabelFingerprint) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= ResourceLabels.GetHashCode();
      if (LabelFingerprint.Length != 0) hash ^= LabelFingerprint.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      resourceLabels_.WriteTo(output, _map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LabelFingerprint);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += resourceLabels_.CalculateSize(_map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LabelFingerprint);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLabelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      resourceLabels_.Add(other.resourceLabels_);
      if (other.LabelFingerprint.Length != 0) {
        LabelFingerprint = other.LabelFingerprint;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            resourceLabels_.AddEntriesFrom(input, _map_resourceLabels_codec);
            break;
          }
          case 42: {
            LabelFingerprint = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for
  /// a cluster.
  /// </summary>
  public sealed partial class SetLegacyAbacRequest : pb::IMessage<SetLegacyAbacRequest> {
    private static readonly pb::MessageParser<SetLegacyAbacRequest> _parser = new pb::MessageParser<SetLegacyAbacRequest>(() => new SetLegacyAbacRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLegacyAbacRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLegacyAbacRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLegacyAbacRequest(SetLegacyAbacRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      enabled_ = other.enabled_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLegacyAbacRequest Clone() {
      return new SetLegacyAbacRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 4;
    private bool enabled_;
    /// <summary>
    /// Whether ABAC authorization will be enabled in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set legacy abac.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLegacyAbacRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLegacyAbacRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Enabled != other.Enabled) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Enabled != false) {
        output.WriteRawTag(32);
        output.WriteBool(Enabled);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLegacyAbacRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 32: {
            Enabled = input.ReadBool();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// StartIPRotationRequest creates a new IP for the cluster and then performs
  /// a node upgrade on each node pool to point to the new IP.
  /// </summary>
  public sealed partial class StartIPRotationRequest : pb::IMessage<StartIPRotationRequest> {
    private static readonly pb::MessageParser<StartIPRotationRequest> _parser = new pb::MessageParser<StartIPRotationRequest>(() => new StartIPRotationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartIPRotationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartIPRotationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartIPRotationRequest(StartIPRotationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      rotateCredentials_ = other.rotateCredentials_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartIPRotationRequest Clone() {
      return new StartIPRotationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to start IP
    /// rotation. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rotate_credentials" field.</summary>
    public const int RotateCredentialsFieldNumber = 7;
    private bool rotateCredentials_;
    /// <summary>
    /// Whether to rotate credentials during IP rotation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RotateCredentials {
      get { return rotateCredentials_; }
      set {
        rotateCredentials_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartIPRotationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartIPRotationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      if (RotateCredentials != other.RotateCredentials) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RotateCredentials != false) hash ^= RotateCredentials.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (RotateCredentials != false) {
        output.WriteRawTag(56);
        output.WriteBool(RotateCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RotateCredentials != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartIPRotationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RotateCredentials != false) {
        RotateCredentials = other.RotateCredentials;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            RotateCredentials = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CompleteIPRotationRequest moves the cluster master back into single-IP mode.
  /// </summary>
  public sealed partial class CompleteIPRotationRequest : pb::IMessage<CompleteIPRotationRequest> {
    private static readonly pb::MessageParser<CompleteIPRotationRequest> _parser = new pb::MessageParser<CompleteIPRotationRequest>(() => new CompleteIPRotationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompleteIPRotationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteIPRotationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteIPRotationRequest(CompleteIPRotationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteIPRotationRequest Clone() {
      return new CompleteIPRotationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to complete IP
    /// rotation. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompleteIPRotationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompleteIPRotationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompleteIPRotationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AcceleratorConfig represents a Hardware Accelerator request.
  /// </summary>
  public sealed partial class AcceleratorConfig : pb::IMessage<AcceleratorConfig> {
    private static readonly pb::MessageParser<AcceleratorConfig> _parser = new pb::MessageParser<AcceleratorConfig>(() => new AcceleratorConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceleratorConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig(AcceleratorConfig other) : this() {
      acceleratorCount_ = other.acceleratorCount_;
      acceleratorType_ = other.acceleratorType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig Clone() {
      return new AcceleratorConfig(this);
    }

    /// <summary>Field number for the "accelerator_count" field.</summary>
    public const int AcceleratorCountFieldNumber = 1;
    private long acceleratorCount_;
    /// <summary>
    /// The number of the accelerator cards exposed to an instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AcceleratorCount {
      get { return acceleratorCount_; }
      set {
        acceleratorCount_ = value;
      }
    }

    /// <summary>Field number for the "accelerator_type" field.</summary>
    public const int AcceleratorTypeFieldNumber = 2;
    private string acceleratorType_ = "";
    /// <summary>
    /// The accelerator type resource name. List of supported accelerators
    /// [here](/compute/docs/gpus/#Introduction)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceleratorType {
      get { return acceleratorType_; }
      set {
        acceleratorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceleratorConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceleratorConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AcceleratorCount != other.AcceleratorCount) return false;
      if (AcceleratorType != other.AcceleratorType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AcceleratorCount != 0L) hash ^= AcceleratorCount.GetHashCode();
      if (AcceleratorType.Length != 0) hash ^= AcceleratorType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AcceleratorCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AcceleratorCount);
      }
      if (AcceleratorType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AcceleratorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AcceleratorCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AcceleratorCount);
      }
      if (AcceleratorType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceleratorType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceleratorConfig other) {
      if (other == null) {
        return;
      }
      if (other.AcceleratorCount != 0L) {
        AcceleratorCount = other.AcceleratorCount;
      }
      if (other.AcceleratorType.Length != 0) {
        AcceleratorType = other.AcceleratorType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AcceleratorCount = input.ReadInt64();
            break;
          }
          case 18: {
            AcceleratorType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNetworkPolicyRequest enables/disables network policy for a cluster.
  /// </summary>
  public sealed partial class SetNetworkPolicyRequest : pb::IMessage<SetNetworkPolicyRequest> {
    private static readonly pb::MessageParser<SetNetworkPolicyRequest> _parser = new pb::MessageParser<SetNetworkPolicyRequest>(() => new SetNetworkPolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNetworkPolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNetworkPolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNetworkPolicyRequest(SetNetworkPolicyRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      networkPolicy_ = other.networkPolicy_ != null ? other.networkPolicy_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNetworkPolicyRequest Clone() {
      return new SetNetworkPolicyRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Deprecated. The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_policy" field.</summary>
    public const int NetworkPolicyFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NetworkPolicy networkPolicy_;
    /// <summary>
    /// Configuration options for the NetworkPolicy feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicy NetworkPolicy {
      get { return networkPolicy_; }
      set {
        networkPolicy_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set networking
    /// policy. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNetworkPolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNetworkPolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(NetworkPolicy, other.NetworkPolicy)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (networkPolicy_ != null) hash ^= NetworkPolicy.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (networkPolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NetworkPolicy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (networkPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkPolicy);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNetworkPolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.networkPolicy_ != null) {
        if (networkPolicy_ == null) {
          NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
        }
        NetworkPolicy.MergeFrom(other.NetworkPolicy);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (networkPolicy_ == null) {
              NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
            }
            input.ReadMessage(NetworkPolicy);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetMaintenancePolicyRequest sets the maintenance policy for a cluster.
  /// </summary>
  public sealed partial class SetMaintenancePolicyRequest : pb::IMessage<SetMaintenancePolicyRequest> {
    private static readonly pb::MessageParser<SetMaintenancePolicyRequest> _parser = new pb::MessageParser<SetMaintenancePolicyRequest>(() => new SetMaintenancePolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMaintenancePolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaintenancePolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaintenancePolicyRequest(SetMaintenancePolicyRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      maintenancePolicy_ = other.maintenancePolicy_ != null ? other.maintenancePolicy_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaintenancePolicyRequest Clone() {
      return new SetMaintenancePolicyRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// The name of the Google Compute Engine
    /// [zone](/compute/docs/zones#available) in which the cluster
    /// resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// The name of the cluster to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maintenance_policy" field.</summary>
    public const int MaintenancePolicyFieldNumber = 4;
    private global::Google.Cloud.Container.V1.MaintenancePolicy maintenancePolicy_;
    /// <summary>
    /// The maintenance policy to be set for the cluster. An empty field
    /// clears the existing maintenance policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaintenancePolicy MaintenancePolicy {
      get { return maintenancePolicy_; }
      set {
        maintenancePolicy_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set maintenance
    /// policy.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMaintenancePolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMaintenancePolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(MaintenancePolicy, other.MaintenancePolicy)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (maintenancePolicy_ != null) hash ^= MaintenancePolicy.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (maintenancePolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MaintenancePolicy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (maintenancePolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaintenancePolicy);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMaintenancePolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.maintenancePolicy_ != null) {
        if (maintenancePolicy_ == null) {
          MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
        }
        MaintenancePolicy.MergeFrom(other.MaintenancePolicy);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (maintenancePolicy_ == null) {
              MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
            }
            input.ReadMessage(MaintenancePolicy);
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NetworkConfig reports the relative names of network &amp; subnetwork.
  /// </summary>
  public sealed partial class NetworkConfig : pb::IMessage<NetworkConfig> {
    private static readonly pb::MessageParser<NetworkConfig> _parser = new pb::MessageParser<NetworkConfig>(() => new NetworkConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConfig(NetworkConfig other) : this() {
      network_ = other.network_;
      subnetwork_ = other.subnetwork_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConfig Clone() {
      return new NetworkConfig(this);
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 1;
    private string network_ = "";
    /// <summary>
    /// Output only. The relative name of the Google Compute Engine
    /// [network][google.container.v1.NetworkConfig.network](/compute/docs/networks-and-firewalls#networks) to which
    /// the cluster is connected.
    /// Example: projects/my-project/global/networks/my-network
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnetwork" field.</summary>
    public const int SubnetworkFieldNumber = 2;
    private string subnetwork_ = "";
    /// <summary>
    /// Output only. The relative name of the Google Compute Engine
    /// [subnetwork](/compute/docs/vpc) to which the cluster is connected.
    /// Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subnetwork {
      get { return subnetwork_; }
      set {
        subnetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Network != other.Network) return false;
      if (Subnetwork != other.Subnetwork) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (Subnetwork.Length != 0) hash ^= Subnetwork.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Network.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Network);
      }
      if (Subnetwork.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subnetwork);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (Subnetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnetwork);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkConfig other) {
      if (other == null) {
        return;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.Subnetwork.Length != 0) {
        Subnetwork = other.Subnetwork;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Network = input.ReadString();
            break;
          }
          case 18: {
            Subnetwork = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
