// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/asset/v1/asset_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Asset.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/asset/v1/asset_service.proto</summary>
  public static partial class AssetServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/asset/v1/asset_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AssetServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvYXNzZXQvdjEvYXNzZXRfc2VydmljZS5wcm90bxIV",
            "Z29vZ2xlLmNsb3VkLmFzc2V0LnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25z",
            "LnByb3RvGhdnb29nbGUvYXBpL2NsaWVudC5wcm90bxofZ29vZ2xlL2FwaS9m",
            "aWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90",
            "bxoiZ29vZ2xlL2Nsb3VkL2Fzc2V0L3YxL2Fzc2V0cy5wcm90bxojZ29vZ2xl",
            "L2xvbmdydW5uaW5nL29wZXJhdGlvbnMucHJvdG8aG2dvb2dsZS9wcm90b2J1",
            "Zi9lbXB0eS5wcm90bxogZ29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21hc2sucHJv",
            "dG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aFmdvb2dsZS90",
            "eXBlL2V4cHIucHJvdG8ijQIKE0V4cG9ydEFzc2V0c1JlcXVlc3QSNwoGcGFy",
            "ZW50GAEgASgJQifgQQL6QSESH2Nsb3VkYXNzZXQuZ29vZ2xlYXBpcy5jb20v",
            "QXNzZXQSLQoJcmVhZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBITCgthc3NldF90eXBlcxgDIAMoCRI4Cgxjb250ZW50X3R5cGUY",
            "BCABKA4yIi5nb29nbGUuY2xvdWQuYXNzZXQudjEuQ29udGVudFR5cGUSPwoN",
            "b3V0cHV0X2NvbmZpZxgFIAEoCzIjLmdvb2dsZS5jbG91ZC5hc3NldC52MS5P",
            "dXRwdXRDb25maWdCA+BBAiKBAQoURXhwb3J0QXNzZXRzUmVzcG9uc2USLQoJ",
            "cmVhZF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI6",
            "Cg1vdXRwdXRfY29uZmlnGAIgASgLMiMuZ29vZ2xlLmNsb3VkLmFzc2V0LnYx",
            "Lk91dHB1dENvbmZpZyLtAQocQmF0Y2hHZXRBc3NldHNIaXN0b3J5UmVxdWVz",
            "dBI3CgZwYXJlbnQYASABKAlCJ+BBAvpBIRIfY2xvdWRhc3NldC5nb29nbGVh",
            "cGlzLmNvbS9Bc3NldBITCgthc3NldF9uYW1lcxgCIAMoCRI9Cgxjb250ZW50",
            "X3R5cGUYAyABKA4yIi5nb29nbGUuY2xvdWQuYXNzZXQudjEuQ29udGVudFR5",
            "cGVCA+BBARJAChByZWFkX3RpbWVfd2luZG93GAQgASgLMiEuZ29vZ2xlLmNs",
            "b3VkLmFzc2V0LnYxLlRpbWVXaW5kb3dCA+BBASJVCh1CYXRjaEdldEFzc2V0",
            "c0hpc3RvcnlSZXNwb25zZRI0CgZhc3NldHMYASADKAsyJC5nb29nbGUuY2xv",
            "dWQuYXNzZXQudjEuVGVtcG9yYWxBc3NldCJuChFDcmVhdGVGZWVkUmVxdWVz",
            "dBITCgZwYXJlbnQYASABKAlCA+BBAhIUCgdmZWVkX2lkGAIgASgJQgPgQQIS",
            "LgoEZmVlZBgDIAEoCzIbLmdvb2dsZS5jbG91ZC5hc3NldC52MS5GZWVkQgPg",
            "QQIiRgoOR2V0RmVlZFJlcXVlc3QSNAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5j",
            "bG91ZGFzc2V0Lmdvb2dsZWFwaXMuY29tL0ZlZWQiJwoQTGlzdEZlZWRzUmVx",
            "dWVzdBITCgZwYXJlbnQYASABKAlCA+BBAiI/ChFMaXN0RmVlZHNSZXNwb25z",
            "ZRIqCgVmZWVkcxgBIAMoCzIbLmdvb2dsZS5jbG91ZC5hc3NldC52MS5GZWVk",
            "InkKEVVwZGF0ZUZlZWRSZXF1ZXN0Ei4KBGZlZWQYASABKAsyGy5nb29nbGUu",
            "Y2xvdWQuYXNzZXQudjEuRmVlZEID4EECEjQKC3VwZGF0ZV9tYXNrGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECIkkKEURlbGV0ZUZl",
            "ZWRSZXF1ZXN0EjQKBG5hbWUYASABKAlCJuBBAvpBIAoeY2xvdWRhc3NldC5n",
            "b29nbGVhcGlzLmNvbS9GZWVkIqsBCgxPdXRwdXRDb25maWcSQAoPZ2NzX2Rl",
            "c3RpbmF0aW9uGAEgASgLMiUuZ29vZ2xlLmNsb3VkLmFzc2V0LnYxLkdjc0Rl",
            "c3RpbmF0aW9uSAASSgoUYmlncXVlcnlfZGVzdGluYXRpb24YAiABKAsyKi5n",
            "b29nbGUuY2xvdWQuYXNzZXQudjEuQmlnUXVlcnlEZXN0aW5hdGlvbkgAQg0K",
            "C2Rlc3RpbmF0aW9uIkMKDkdjc0Rlc3RpbmF0aW9uEg0KA3VyaRgBIAEoCUgA",
            "EhQKCnVyaV9wcmVmaXgYAiABKAlIAEIMCgpvYmplY3RfdXJpIk4KE0JpZ1F1",
            "ZXJ5RGVzdGluYXRpb24SFAoHZGF0YXNldBgBIAEoCUID4EECEhIKBXRhYmxl",
            "GAIgASgJQgPgQQISDQoFZm9yY2UYAyABKAgiIgoRUHVic3ViRGVzdGluYXRp",
            "b24SDQoFdG9waWMYASABKAkiaQoQRmVlZE91dHB1dENvbmZpZxJGChJwdWJz",
            "dWJfZGVzdGluYXRpb24YASABKAsyKC5nb29nbGUuY2xvdWQuYXNzZXQudjEu",
            "UHVic3ViRGVzdGluYXRpb25IAEINCgtkZXN0aW5hdGlvbiLbAgoERmVlZBIR",
            "CgRuYW1lGAEgASgJQgPgQQISEwoLYXNzZXRfbmFtZXMYAiADKAkSEwoLYXNz",
            "ZXRfdHlwZXMYAyADKAkSOAoMY29udGVudF90eXBlGAQgASgOMiIuZ29vZ2xl",
            "LmNsb3VkLmFzc2V0LnYxLkNvbnRlbnRUeXBlEkgKEmZlZWRfb3V0cHV0X2Nv",
            "bmZpZxgFIAEoCzInLmdvb2dsZS5jbG91ZC5hc3NldC52MS5GZWVkT3V0cHV0",
            "Q29uZmlnQgPgQQI6kQHqQY0BCh5jbG91ZGFzc2V0Lmdvb2dsZWFwaXMuY29t",
            "L0ZlZWQSH3Byb2plY3RzL3twcm9qZWN0fS9mZWVkcy97ZmVlZH0SHWZvbGRl",
            "cnMve2ZvbGRlcn0vZmVlZHMve2ZlZWR9Eilvcmdhbml6YXRpb25zL3tvcmdh",
            "bml6YXRpb259L2ZlZWRzL3tmZWVkfSABIqUBChlTZWFyY2hBbGxSZXNvdXJj",
            "ZXNSZXF1ZXN0EhIKBXNjb3BlGAEgASgJQgPgQQISEgoFcXVlcnkYAiABKAlC",
            "A+BBARIYCgthc3NldF90eXBlcxgDIAMoCUID4EEBEhYKCXBhZ2Vfc2l6ZRgE",
            "IAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YBSABKAlCA+BBARIVCghvcmRlcl9i",
            "eRgGIAEoCUID4EEBInMKGlNlYXJjaEFsbFJlc291cmNlc1Jlc3BvbnNlEjwK",
            "B3Jlc3VsdHMYASADKAsyKy5nb29nbGUuY2xvdWQuYXNzZXQudjEuUmVzb3Vy",
            "Y2VTZWFyY2hSZXN1bHQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJInYKG1Nl",
            "YXJjaEFsbElhbVBvbGljaWVzUmVxdWVzdBISCgVzY29wZRgBIAEoCUID4EEC",
            "EhIKBXF1ZXJ5GAIgASgJQgPgQQESFgoJcGFnZV9zaXplGAMgASgFQgPgQQES",
            "FwoKcGFnZV90b2tlbhgEIAEoCUID4EEBInYKHFNlYXJjaEFsbElhbVBvbGlj",
            "aWVzUmVzcG9uc2USPQoHcmVzdWx0cxgBIAMoCzIsLmdvb2dsZS5jbG91ZC5h",
            "c3NldC52MS5JYW1Qb2xpY3lTZWFyY2hSZXN1bHQSFwoPbmV4dF9wYWdlX3Rv",
            "a2VuGAIgASgJKmwKC0NvbnRlbnRUeXBlEhwKGENPTlRFTlRfVFlQRV9VTlNQ",
            "RUNJRklFRBAAEgwKCFJFU09VUkNFEAESDgoKSUFNX1BPTElDWRACEg4KCk9S",
            "R19QT0xJQ1kQBBIRCg1BQ0NFU1NfUE9MSUNZEAUy8AsKDEFzc2V0U2Vydmlj",
            "ZRLeAQoMRXhwb3J0QXNzZXRzEiouZ29vZ2xlLmNsb3VkLmFzc2V0LnYxLkV4",
            "cG9ydEFzc2V0c1JlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0",
            "aW9uIoIBgtPkkwIiIh0vdjEve3BhcmVudD0qLyp9OmV4cG9ydEFzc2V0czoB",
            "KspBVwoqZ29vZ2xlLmNsb3VkLmFzc2V0LnYxLkV4cG9ydEFzc2V0c1Jlc3Bv",
            "bnNlEilnb29nbGUuY2xvdWQuYXNzZXQudjEuRXhwb3J0QXNzZXRzUmVxdWVz",
            "dBKyAQoVQmF0Y2hHZXRBc3NldHNIaXN0b3J5EjMuZ29vZ2xlLmNsb3VkLmFz",
            "c2V0LnYxLkJhdGNoR2V0QXNzZXRzSGlzdG9yeVJlcXVlc3QaNC5nb29nbGUu",
            "Y2xvdWQuYXNzZXQudjEuQmF0Y2hHZXRBc3NldHNIaXN0b3J5UmVzcG9uc2Ui",
            "LoLT5JMCKBImL3YxL3twYXJlbnQ9Ki8qfTpiYXRjaEdldEFzc2V0c0hpc3Rv",
            "cnkSfwoKQ3JlYXRlRmVlZBIoLmdvb2dsZS5jbG91ZC5hc3NldC52MS5DcmVh",
            "dGVGZWVkUmVxdWVzdBobLmdvb2dsZS5jbG91ZC5hc3NldC52MS5GZWVkIiqC",
            "0+STAhsiFi92MS97cGFyZW50PSovKn0vZmVlZHM6ASraQQZwYXJlbnQSdAoH",
            "R2V0RmVlZBIlLmdvb2dsZS5jbG91ZC5hc3NldC52MS5HZXRGZWVkUmVxdWVz",
            "dBobLmdvb2dsZS5jbG91ZC5hc3NldC52MS5GZWVkIiWC0+STAhgSFi92MS97",
            "bmFtZT0qLyovZmVlZHMvKn3aQQRuYW1lEocBCglMaXN0RmVlZHMSJy5nb29n",
            "bGUuY2xvdWQuYXNzZXQudjEuTGlzdEZlZWRzUmVxdWVzdBooLmdvb2dsZS5j",
            "bG91ZC5hc3NldC52MS5MaXN0RmVlZHNSZXNwb25zZSIngtPkkwIYEhYvdjEv",
            "e3BhcmVudD0qLyp9L2ZlZWRz2kEGcGFyZW50EoIBCgpVcGRhdGVGZWVkEigu",
            "Z29vZ2xlLmNsb3VkLmFzc2V0LnYxLlVwZGF0ZUZlZWRSZXF1ZXN0GhsuZ29v",
            "Z2xlLmNsb3VkLmFzc2V0LnYxLkZlZWQiLYLT5JMCIDIbL3YxL3tmZWVkLm5h",
            "bWU9Ki8qL2ZlZWRzLyp9OgEq2kEEZmVlZBJ1CgpEZWxldGVGZWVkEiguZ29v",
            "Z2xlLmNsb3VkLmFzc2V0LnYxLkRlbGV0ZUZlZWRSZXF1ZXN0GhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5IiWC0+STAhgqFi92MS97bmFtZT0qLyovZmVlZHMv",
            "Kn3aQQRuYW1lEr8BChJTZWFyY2hBbGxSZXNvdXJjZXMSMC5nb29nbGUuY2xv",
            "dWQuYXNzZXQudjEuU2VhcmNoQWxsUmVzb3VyY2VzUmVxdWVzdBoxLmdvb2ds",
            "ZS5jbG91ZC5hc3NldC52MS5TZWFyY2hBbGxSZXNvdXJjZXNSZXNwb25zZSJE",
            "gtPkkwIkEiIvdjEve3Njb3BlPSovKn06c2VhcmNoQWxsUmVzb3VyY2Vz2kEX",
            "c2NvcGUscXVlcnksYXNzZXRfdHlwZXMSuwEKFFNlYXJjaEFsbElhbVBvbGlj",
            "aWVzEjIuZ29vZ2xlLmNsb3VkLmFzc2V0LnYxLlNlYXJjaEFsbElhbVBvbGlj",
            "aWVzUmVxdWVzdBozLmdvb2dsZS5jbG91ZC5hc3NldC52MS5TZWFyY2hBbGxJ",
            "YW1Qb2xpY2llc1Jlc3BvbnNlIjqC0+STAiYSJC92MS97c2NvcGU9Ki8qfTpz",
            "ZWFyY2hBbGxJYW1Qb2xpY2llc9pBC3Njb3BlLHF1ZXJ5Gk3KQRljbG91ZGFz",
            "c2V0Lmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5j",
            "b20vYXV0aC9jbG91ZC1wbGF0Zm9ybUKcAQoZY29tLmdvb2dsZS5jbG91ZC5h",
            "c3NldC52MUIRQXNzZXRTZXJ2aWNlUHJvdG9QAVo6Z29vZ2xlLmdvbGFuZy5v",
            "cmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC9hc3NldC92MTthc3NldKoC",
            "FUdvb2dsZS5DbG91ZC5Bc3NldC5WMcoCFUdvb2dsZVxDbG91ZFxBc3NldFxW",
            "MWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Asset.V1.AssetsReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.ExprReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Asset.V1.ContentType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.ExportAssetsRequest), global::Google.Cloud.Asset.V1.ExportAssetsRequest.Parser, new[]{ "Parent", "ReadTime", "AssetTypes", "ContentType", "OutputConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.ExportAssetsResponse), global::Google.Cloud.Asset.V1.ExportAssetsResponse.Parser, new[]{ "ReadTime", "OutputConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.BatchGetAssetsHistoryRequest), global::Google.Cloud.Asset.V1.BatchGetAssetsHistoryRequest.Parser, new[]{ "Parent", "AssetNames", "ContentType", "ReadTimeWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.BatchGetAssetsHistoryResponse), global::Google.Cloud.Asset.V1.BatchGetAssetsHistoryResponse.Parser, new[]{ "Assets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.CreateFeedRequest), global::Google.Cloud.Asset.V1.CreateFeedRequest.Parser, new[]{ "Parent", "FeedId", "Feed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.GetFeedRequest), global::Google.Cloud.Asset.V1.GetFeedRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.ListFeedsRequest), global::Google.Cloud.Asset.V1.ListFeedsRequest.Parser, new[]{ "Parent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.ListFeedsResponse), global::Google.Cloud.Asset.V1.ListFeedsResponse.Parser, new[]{ "Feeds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.UpdateFeedRequest), global::Google.Cloud.Asset.V1.UpdateFeedRequest.Parser, new[]{ "Feed", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.DeleteFeedRequest), global::Google.Cloud.Asset.V1.DeleteFeedRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.OutputConfig), global::Google.Cloud.Asset.V1.OutputConfig.Parser, new[]{ "GcsDestination", "BigqueryDestination" }, new[]{ "Destination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.GcsDestination), global::Google.Cloud.Asset.V1.GcsDestination.Parser, new[]{ "Uri", "UriPrefix" }, new[]{ "ObjectUri" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.BigQueryDestination), global::Google.Cloud.Asset.V1.BigQueryDestination.Parser, new[]{ "Dataset", "Table", "Force" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.PubsubDestination), global::Google.Cloud.Asset.V1.PubsubDestination.Parser, new[]{ "Topic" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.FeedOutputConfig), global::Google.Cloud.Asset.V1.FeedOutputConfig.Parser, new[]{ "PubsubDestination" }, new[]{ "Destination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.Feed), global::Google.Cloud.Asset.V1.Feed.Parser, new[]{ "Name", "AssetNames", "AssetTypes", "ContentType", "FeedOutputConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.SearchAllResourcesRequest), global::Google.Cloud.Asset.V1.SearchAllResourcesRequest.Parser, new[]{ "Scope", "Query", "AssetTypes", "PageSize", "PageToken", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.SearchAllResourcesResponse), global::Google.Cloud.Asset.V1.SearchAllResourcesResponse.Parser, new[]{ "Results", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.SearchAllIamPoliciesRequest), global::Google.Cloud.Asset.V1.SearchAllIamPoliciesRequest.Parser, new[]{ "Scope", "Query", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1.SearchAllIamPoliciesResponse), global::Google.Cloud.Asset.V1.SearchAllIamPoliciesResponse.Parser, new[]{ "Results", "NextPageToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Asset content type.
  /// </summary>
  public enum ContentType {
    /// <summary>
    /// Unspecified content type.
    /// </summary>
    [pbr::OriginalName("CONTENT_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Resource metadata.
    /// </summary>
    [pbr::OriginalName("RESOURCE")] Resource = 1,
    /// <summary>
    /// The actual IAM policy set on a resource.
    /// </summary>
    [pbr::OriginalName("IAM_POLICY")] IamPolicy = 2,
    /// <summary>
    /// The Cloud Organization Policy set on an asset.
    /// </summary>
    [pbr::OriginalName("ORG_POLICY")] OrgPolicy = 4,
    /// <summary>
    /// The Cloud Access context mananger Policy set on an asset.
    /// </summary>
    [pbr::OriginalName("ACCESS_POLICY")] AccessPolicy = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Export asset request.
  /// </summary>
  public sealed partial class ExportAssetsRequest : pb::IMessage<ExportAssetsRequest> {
    private static readonly pb::MessageParser<ExportAssetsRequest> _parser = new pb::MessageParser<ExportAssetsRequest>(() => new ExportAssetsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExportAssetsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportAssetsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportAssetsRequest(ExportAssetsRequest other) : this() {
      parent_ = other.parent_;
      readTime_ = other.readTime_ != null ? other.readTime_.Clone() : null;
      assetTypes_ = other.assetTypes_.Clone();
      contentType_ = other.contentType_;
      outputConfig_ = other.outputConfig_ != null ? other.outputConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportAssetsRequest Clone() {
      return new ExportAssetsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The relative name of the root asset. This can only be an
    /// organization number (such as "organizations/123"), a project ID (such as
    /// "projects/my-project-id"), or a project number (such as "projects/12345"),
    /// or a folder number (such as "folders/123").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "read_time" field.</summary>
    public const int ReadTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp readTime_;
    /// <summary>
    /// Timestamp to take an asset snapshot. This can only be set to a timestamp
    /// between the current time and the current time minus 35 days (inclusive).
    /// If not specified, the current time will be used. Due to delays in resource
    /// data collection and indexing, there is a volatile window during which
    /// running the same query may get different results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReadTime {
      get { return readTime_; }
      set {
        readTime_ = value;
      }
    }

    /// <summary>Field number for the "asset_types" field.</summary>
    public const int AssetTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_assetTypes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> assetTypes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of asset types of which to take a snapshot for. For example:
    /// "compute.googleapis.com/Disk". If specified, only matching assets will be
    /// returned. See [Introduction to Cloud Asset
    /// Inventory](https://cloud.google.com/asset-inventory/docs/overview)
    /// for all supported asset types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AssetTypes {
      get { return assetTypes_; }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 4;
    private global::Google.Cloud.Asset.V1.ContentType contentType_ = global::Google.Cloud.Asset.V1.ContentType.Unspecified;
    /// <summary>
    /// Asset content type. If not specified, no content but the asset name will be
    /// returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.ContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "output_config" field.</summary>
    public const int OutputConfigFieldNumber = 5;
    private global::Google.Cloud.Asset.V1.OutputConfig outputConfig_;
    /// <summary>
    /// Required. Output configuration indicating where the results will be output
    /// to. All results will be in newline delimited JSON format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.OutputConfig OutputConfig {
      get { return outputConfig_; }
      set {
        outputConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExportAssetsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExportAssetsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(ReadTime, other.ReadTime)) return false;
      if(!assetTypes_.Equals(other.assetTypes_)) return false;
      if (ContentType != other.ContentType) return false;
      if (!object.Equals(OutputConfig, other.OutputConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (readTime_ != null) hash ^= ReadTime.GetHashCode();
      hash ^= assetTypes_.GetHashCode();
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) hash ^= ContentType.GetHashCode();
      if (outputConfig_ != null) hash ^= OutputConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (readTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadTime);
      }
      assetTypes_.WriteTo(output, _repeated_assetTypes_codec);
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ContentType);
      }
      if (outputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OutputConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (readTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadTime);
      }
      size += assetTypes_.CalculateSize(_repeated_assetTypes_codec);
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (outputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExportAssetsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.readTime_ != null) {
        if (readTime_ == null) {
          ReadTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReadTime.MergeFrom(other.ReadTime);
      }
      assetTypes_.Add(other.assetTypes_);
      if (other.ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        ContentType = other.ContentType;
      }
      if (other.outputConfig_ != null) {
        if (outputConfig_ == null) {
          OutputConfig = new global::Google.Cloud.Asset.V1.OutputConfig();
        }
        OutputConfig.MergeFrom(other.OutputConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (readTime_ == null) {
              ReadTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ReadTime);
            break;
          }
          case 26: {
            assetTypes_.AddEntriesFrom(input, _repeated_assetTypes_codec);
            break;
          }
          case 32: {
            ContentType = (global::Google.Cloud.Asset.V1.ContentType) input.ReadEnum();
            break;
          }
          case 42: {
            if (outputConfig_ == null) {
              OutputConfig = new global::Google.Cloud.Asset.V1.OutputConfig();
            }
            input.ReadMessage(OutputConfig);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The export asset response. This message is returned by the
  /// [google.longrunning.Operations.GetOperation][google.longrunning.Operations.GetOperation]
  /// method in the returned
  /// [google.longrunning.Operation.response][google.longrunning.Operation.response]
  /// field.
  /// </summary>
  public sealed partial class ExportAssetsResponse : pb::IMessage<ExportAssetsResponse> {
    private static readonly pb::MessageParser<ExportAssetsResponse> _parser = new pb::MessageParser<ExportAssetsResponse>(() => new ExportAssetsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExportAssetsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportAssetsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportAssetsResponse(ExportAssetsResponse other) : this() {
      readTime_ = other.readTime_ != null ? other.readTime_.Clone() : null;
      outputConfig_ = other.outputConfig_ != null ? other.outputConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportAssetsResponse Clone() {
      return new ExportAssetsResponse(this);
    }

    /// <summary>Field number for the "read_time" field.</summary>
    public const int ReadTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp readTime_;
    /// <summary>
    /// Time the snapshot was taken.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReadTime {
      get { return readTime_; }
      set {
        readTime_ = value;
      }
    }

    /// <summary>Field number for the "output_config" field.</summary>
    public const int OutputConfigFieldNumber = 2;
    private global::Google.Cloud.Asset.V1.OutputConfig outputConfig_;
    /// <summary>
    /// Output configuration indicating where the results were output to.
    /// All results are in JSON format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.OutputConfig OutputConfig {
      get { return outputConfig_; }
      set {
        outputConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExportAssetsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExportAssetsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReadTime, other.ReadTime)) return false;
      if (!object.Equals(OutputConfig, other.OutputConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (readTime_ != null) hash ^= ReadTime.GetHashCode();
      if (outputConfig_ != null) hash ^= OutputConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (readTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadTime);
      }
      if (outputConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OutputConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (readTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadTime);
      }
      if (outputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExportAssetsResponse other) {
      if (other == null) {
        return;
      }
      if (other.readTime_ != null) {
        if (readTime_ == null) {
          ReadTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReadTime.MergeFrom(other.ReadTime);
      }
      if (other.outputConfig_ != null) {
        if (outputConfig_ == null) {
          OutputConfig = new global::Google.Cloud.Asset.V1.OutputConfig();
        }
        OutputConfig.MergeFrom(other.OutputConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (readTime_ == null) {
              ReadTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ReadTime);
            break;
          }
          case 18: {
            if (outputConfig_ == null) {
              OutputConfig = new global::Google.Cloud.Asset.V1.OutputConfig();
            }
            input.ReadMessage(OutputConfig);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Batch get assets history request.
  /// </summary>
  public sealed partial class BatchGetAssetsHistoryRequest : pb::IMessage<BatchGetAssetsHistoryRequest> {
    private static readonly pb::MessageParser<BatchGetAssetsHistoryRequest> _parser = new pb::MessageParser<BatchGetAssetsHistoryRequest>(() => new BatchGetAssetsHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchGetAssetsHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetAssetsHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetAssetsHistoryRequest(BatchGetAssetsHistoryRequest other) : this() {
      parent_ = other.parent_;
      assetNames_ = other.assetNames_.Clone();
      contentType_ = other.contentType_;
      readTimeWindow_ = other.readTimeWindow_ != null ? other.readTimeWindow_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetAssetsHistoryRequest Clone() {
      return new BatchGetAssetsHistoryRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The relative name of the root asset. It can only be an
    /// organization number (such as "organizations/123"), a project ID (such as
    /// "projects/my-project-id")", or a project number (such as "projects/12345").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset_names" field.</summary>
    public const int AssetNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_assetNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> assetNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of the full names of the assets. For example:
    /// `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
    /// See [Resource
    /// Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
    /// and [Resource Name
    /// Format](https://cloud.google.com/asset-inventory/docs/resource-name-format)
    /// for more info.
    ///
    /// The request becomes a no-op if the asset name list is empty, and the max
    /// size of the asset name list is 100 in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AssetNames {
      get { return assetNames_; }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private global::Google.Cloud.Asset.V1.ContentType contentType_ = global::Google.Cloud.Asset.V1.ContentType.Unspecified;
    /// <summary>
    /// Optional. The content type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.ContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "read_time_window" field.</summary>
    public const int ReadTimeWindowFieldNumber = 4;
    private global::Google.Cloud.Asset.V1.TimeWindow readTimeWindow_;
    /// <summary>
    /// Optional. The time window for the asset history. Both start_time and
    /// end_time are optional and if set, it must be after the current time minus
    /// 35 days. If end_time is not set, it is default to current timestamp.
    /// If start_time is not set, the snapshot of the assets at end_time will be
    /// returned. The returned results contain all temporal assets whose time
    /// window overlap with read_time_window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.TimeWindow ReadTimeWindow {
      get { return readTimeWindow_; }
      set {
        readTimeWindow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchGetAssetsHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchGetAssetsHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if(!assetNames_.Equals(other.assetNames_)) return false;
      if (ContentType != other.ContentType) return false;
      if (!object.Equals(ReadTimeWindow, other.ReadTimeWindow)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      hash ^= assetNames_.GetHashCode();
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) hash ^= ContentType.GetHashCode();
      if (readTimeWindow_ != null) hash ^= ReadTimeWindow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      assetNames_.WriteTo(output, _repeated_assetNames_codec);
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ContentType);
      }
      if (readTimeWindow_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadTimeWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      size += assetNames_.CalculateSize(_repeated_assetNames_codec);
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (readTimeWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadTimeWindow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchGetAssetsHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      assetNames_.Add(other.assetNames_);
      if (other.ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        ContentType = other.ContentType;
      }
      if (other.readTimeWindow_ != null) {
        if (readTimeWindow_ == null) {
          ReadTimeWindow = new global::Google.Cloud.Asset.V1.TimeWindow();
        }
        ReadTimeWindow.MergeFrom(other.ReadTimeWindow);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            assetNames_.AddEntriesFrom(input, _repeated_assetNames_codec);
            break;
          }
          case 24: {
            ContentType = (global::Google.Cloud.Asset.V1.ContentType) input.ReadEnum();
            break;
          }
          case 34: {
            if (readTimeWindow_ == null) {
              ReadTimeWindow = new global::Google.Cloud.Asset.V1.TimeWindow();
            }
            input.ReadMessage(ReadTimeWindow);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Batch get assets history response.
  /// </summary>
  public sealed partial class BatchGetAssetsHistoryResponse : pb::IMessage<BatchGetAssetsHistoryResponse> {
    private static readonly pb::MessageParser<BatchGetAssetsHistoryResponse> _parser = new pb::MessageParser<BatchGetAssetsHistoryResponse>(() => new BatchGetAssetsHistoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchGetAssetsHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetAssetsHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetAssetsHistoryResponse(BatchGetAssetsHistoryResponse other) : this() {
      assets_ = other.assets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetAssetsHistoryResponse Clone() {
      return new BatchGetAssetsHistoryResponse(this);
    }

    /// <summary>Field number for the "assets" field.</summary>
    public const int AssetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Asset.V1.TemporalAsset> _repeated_assets_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Asset.V1.TemporalAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Asset.V1.TemporalAsset> assets_ = new pbc::RepeatedField<global::Google.Cloud.Asset.V1.TemporalAsset>();
    /// <summary>
    /// A list of assets with valid time windows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Asset.V1.TemporalAsset> Assets {
      get { return assets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchGetAssetsHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchGetAssetsHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assets_.Equals(other.assets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assets_.WriteTo(output, _repeated_assets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assets_.CalculateSize(_repeated_assets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchGetAssetsHistoryResponse other) {
      if (other == null) {
        return;
      }
      assets_.Add(other.assets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assets_.AddEntriesFrom(input, _repeated_assets_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Create asset feed request.
  /// </summary>
  public sealed partial class CreateFeedRequest : pb::IMessage<CreateFeedRequest> {
    private static readonly pb::MessageParser<CreateFeedRequest> _parser = new pb::MessageParser<CreateFeedRequest>(() => new CreateFeedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFeedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFeedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFeedRequest(CreateFeedRequest other) : this() {
      parent_ = other.parent_;
      feedId_ = other.feedId_;
      feed_ = other.feed_ != null ? other.feed_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFeedRequest Clone() {
      return new CreateFeedRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The name of the project/folder/organization where this feed
    /// should be created in. It can only be an organization number (such as
    /// "organizations/123"), a folder number (such as "folders/123"), a project ID
    /// (such as "projects/my-project-id")", or a project number (such as
    /// "projects/12345").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feed_id" field.</summary>
    public const int FeedIdFieldNumber = 2;
    private string feedId_ = "";
    /// <summary>
    /// Required. This is the client-assigned asset feed identifier and it needs to
    /// be unique under a specific parent project/folder/organization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeedId {
      get { return feedId_; }
      set {
        feedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feed" field.</summary>
    public const int FeedFieldNumber = 3;
    private global::Google.Cloud.Asset.V1.Feed feed_;
    /// <summary>
    /// Required. The feed details. The field `name` must be empty and it will be
    /// generated in the format of: projects/project_number/feeds/feed_id
    /// folders/folder_number/feeds/feed_id
    /// organizations/organization_number/feeds/feed_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.Feed Feed {
      get { return feed_; }
      set {
        feed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFeedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFeedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (FeedId != other.FeedId) return false;
      if (!object.Equals(Feed, other.Feed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (FeedId.Length != 0) hash ^= FeedId.GetHashCode();
      if (feed_ != null) hash ^= Feed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (FeedId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FeedId);
      }
      if (feed_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Feed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (FeedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeedId);
      }
      if (feed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Feed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFeedRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.FeedId.Length != 0) {
        FeedId = other.FeedId;
      }
      if (other.feed_ != null) {
        if (feed_ == null) {
          Feed = new global::Google.Cloud.Asset.V1.Feed();
        }
        Feed.MergeFrom(other.Feed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            FeedId = input.ReadString();
            break;
          }
          case 26: {
            if (feed_ == null) {
              Feed = new global::Google.Cloud.Asset.V1.Feed();
            }
            input.ReadMessage(Feed);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Get asset feed request.
  /// </summary>
  public sealed partial class GetFeedRequest : pb::IMessage<GetFeedRequest> {
    private static readonly pb::MessageParser<GetFeedRequest> _parser = new pb::MessageParser<GetFeedRequest>(() => new GetFeedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFeedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFeedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFeedRequest(GetFeedRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFeedRequest Clone() {
      return new GetFeedRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the Feed and it must be in the format of:
    /// projects/project_number/feeds/feed_id
    /// folders/folder_number/feeds/feed_id
    /// organizations/organization_number/feeds/feed_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFeedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFeedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFeedRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// List asset feeds request.
  /// </summary>
  public sealed partial class ListFeedsRequest : pb::IMessage<ListFeedsRequest> {
    private static readonly pb::MessageParser<ListFeedsRequest> _parser = new pb::MessageParser<ListFeedsRequest>(() => new ListFeedsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFeedsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFeedsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFeedsRequest(ListFeedsRequest other) : this() {
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFeedsRequest Clone() {
      return new ListFeedsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent project/folder/organization whose feeds are to be
    /// listed. It can only be using project/folder/organization number (such as
    /// "folders/12345")", or a project ID (such as "projects/my-project-id").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFeedsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFeedsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFeedsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListFeedsResponse : pb::IMessage<ListFeedsResponse> {
    private static readonly pb::MessageParser<ListFeedsResponse> _parser = new pb::MessageParser<ListFeedsResponse>(() => new ListFeedsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFeedsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFeedsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFeedsResponse(ListFeedsResponse other) : this() {
      feeds_ = other.feeds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFeedsResponse Clone() {
      return new ListFeedsResponse(this);
    }

    /// <summary>Field number for the "feeds" field.</summary>
    public const int FeedsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Asset.V1.Feed> _repeated_feeds_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Asset.V1.Feed.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Asset.V1.Feed> feeds_ = new pbc::RepeatedField<global::Google.Cloud.Asset.V1.Feed>();
    /// <summary>
    /// A list of feeds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Asset.V1.Feed> Feeds {
      get { return feeds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFeedsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFeedsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!feeds_.Equals(other.feeds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= feeds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      feeds_.WriteTo(output, _repeated_feeds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += feeds_.CalculateSize(_repeated_feeds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFeedsResponse other) {
      if (other == null) {
        return;
      }
      feeds_.Add(other.feeds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            feeds_.AddEntriesFrom(input, _repeated_feeds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Update asset feed request.
  /// </summary>
  public sealed partial class UpdateFeedRequest : pb::IMessage<UpdateFeedRequest> {
    private static readonly pb::MessageParser<UpdateFeedRequest> _parser = new pb::MessageParser<UpdateFeedRequest>(() => new UpdateFeedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFeedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFeedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFeedRequest(UpdateFeedRequest other) : this() {
      feed_ = other.feed_ != null ? other.feed_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFeedRequest Clone() {
      return new UpdateFeedRequest(this);
    }

    /// <summary>Field number for the "feed" field.</summary>
    public const int FeedFieldNumber = 1;
    private global::Google.Cloud.Asset.V1.Feed feed_;
    /// <summary>
    /// Required. The new values of feed details. It must match an existing feed
    /// and the field `name` must be in the format of:
    /// projects/project_number/feeds/feed_id or
    /// folders/folder_number/feeds/feed_id or
    /// organizations/organization_number/feeds/feed_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.Feed Feed {
      get { return feed_; }
      set {
        feed_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Only updates the `feed` fields indicated by this mask.
    /// The field mask must not be empty, and it must not contain fields that
    /// are immutable or only set by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFeedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFeedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Feed, other.Feed)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (feed_ != null) hash ^= Feed.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (feed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Feed);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (feed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Feed);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFeedRequest other) {
      if (other == null) {
        return;
      }
      if (other.feed_ != null) {
        if (feed_ == null) {
          Feed = new global::Google.Cloud.Asset.V1.Feed();
        }
        Feed.MergeFrom(other.Feed);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (feed_ == null) {
              Feed = new global::Google.Cloud.Asset.V1.Feed();
            }
            input.ReadMessage(Feed);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteFeedRequest : pb::IMessage<DeleteFeedRequest> {
    private static readonly pb::MessageParser<DeleteFeedRequest> _parser = new pb::MessageParser<DeleteFeedRequest>(() => new DeleteFeedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFeedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFeedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFeedRequest(DeleteFeedRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFeedRequest Clone() {
      return new DeleteFeedRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the feed and it must be in the format of:
    /// projects/project_number/feeds/feed_id
    /// folders/folder_number/feeds/feed_id
    /// organizations/organization_number/feeds/feed_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFeedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFeedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFeedRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Output configuration for export assets destination.
  /// </summary>
  public sealed partial class OutputConfig : pb::IMessage<OutputConfig> {
    private static readonly pb::MessageParser<OutputConfig> _parser = new pb::MessageParser<OutputConfig>(() => new OutputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputConfig(OutputConfig other) : this() {
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          GcsDestination = other.GcsDestination.Clone();
          break;
        case DestinationOneofCase.BigqueryDestination:
          BigqueryDestination = other.BigqueryDestination.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputConfig Clone() {
      return new OutputConfig(this);
    }

    /// <summary>Field number for the "gcs_destination" field.</summary>
    public const int GcsDestinationFieldNumber = 1;
    /// <summary>
    /// Destination on Cloud Storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.GcsDestination GcsDestination {
      get { return destinationCase_ == DestinationOneofCase.GcsDestination ? (global::Google.Cloud.Asset.V1.GcsDestination) destination_ : null; }
      set {
        destination_ = value;
        destinationCase_ = value == null ? DestinationOneofCase.None : DestinationOneofCase.GcsDestination;
      }
    }

    /// <summary>Field number for the "bigquery_destination" field.</summary>
    public const int BigqueryDestinationFieldNumber = 2;
    /// <summary>
    /// Destination on BigQuery. The output table stores the fields in asset
    /// proto as columns in BigQuery. The resource/iam_policy field is converted
    /// to a record with each field to a column, except metadata to a single JSON
    /// string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.BigQueryDestination BigqueryDestination {
      get { return destinationCase_ == DestinationOneofCase.BigqueryDestination ? (global::Google.Cloud.Asset.V1.BigQueryDestination) destination_ : null; }
      set {
        destination_ = value;
        destinationCase_ = value == null ? DestinationOneofCase.None : DestinationOneofCase.BigqueryDestination;
      }
    }

    private object destination_;
    /// <summary>Enum of possible cases for the "destination" oneof.</summary>
    public enum DestinationOneofCase {
      None = 0,
      GcsDestination = 1,
      BigqueryDestination = 2,
    }
    private DestinationOneofCase destinationCase_ = DestinationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOneofCase DestinationCase {
      get { return destinationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestination() {
      destinationCase_ = DestinationOneofCase.None;
      destination_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcsDestination, other.GcsDestination)) return false;
      if (!object.Equals(BigqueryDestination, other.BigqueryDestination)) return false;
      if (DestinationCase != other.DestinationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) hash ^= GcsDestination.GetHashCode();
      if (destinationCase_ == DestinationOneofCase.BigqueryDestination) hash ^= BigqueryDestination.GetHashCode();
      hash ^= (int) destinationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDestination);
      }
      if (destinationCase_ == DestinationOneofCase.BigqueryDestination) {
        output.WriteRawTag(18);
        output.WriteMessage(BigqueryDestination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsDestination);
      }
      if (destinationCase_ == DestinationOneofCase.BigqueryDestination) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BigqueryDestination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutputConfig other) {
      if (other == null) {
        return;
      }
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          if (GcsDestination == null) {
            GcsDestination = new global::Google.Cloud.Asset.V1.GcsDestination();
          }
          GcsDestination.MergeFrom(other.GcsDestination);
          break;
        case DestinationOneofCase.BigqueryDestination:
          if (BigqueryDestination == null) {
            BigqueryDestination = new global::Google.Cloud.Asset.V1.BigQueryDestination();
          }
          BigqueryDestination.MergeFrom(other.BigqueryDestination);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Asset.V1.GcsDestination subBuilder = new global::Google.Cloud.Asset.V1.GcsDestination();
            if (destinationCase_ == DestinationOneofCase.GcsDestination) {
              subBuilder.MergeFrom(GcsDestination);
            }
            input.ReadMessage(subBuilder);
            GcsDestination = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Asset.V1.BigQueryDestination subBuilder = new global::Google.Cloud.Asset.V1.BigQueryDestination();
            if (destinationCase_ == DestinationOneofCase.BigqueryDestination) {
              subBuilder.MergeFrom(BigqueryDestination);
            }
            input.ReadMessage(subBuilder);
            BigqueryDestination = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Cloud Storage location.
  /// </summary>
  public sealed partial class GcsDestination : pb::IMessage<GcsDestination> {
    private static readonly pb::MessageParser<GcsDestination> _parser = new pb::MessageParser<GcsDestination>(() => new GcsDestination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GcsDestination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsDestination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsDestination(GcsDestination other) : this() {
      switch (other.ObjectUriCase) {
        case ObjectUriOneofCase.Uri:
          Uri = other.Uri;
          break;
        case ObjectUriOneofCase.UriPrefix:
          UriPrefix = other.UriPrefix;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsDestination Clone() {
      return new GcsDestination(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    /// <summary>
    /// The uri of the Cloud Storage object. It's the same uri that is used by
    /// gsutil. For example: "gs://bucket_name/object_name". See [Viewing and
    /// Editing Object
    /// Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata)
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return objectUriCase_ == ObjectUriOneofCase.Uri ? (string) objectUri_ : ""; }
      set {
        objectUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        objectUriCase_ = ObjectUriOneofCase.Uri;
      }
    }

    /// <summary>Field number for the "uri_prefix" field.</summary>
    public const int UriPrefixFieldNumber = 2;
    /// <summary>
    /// The uri prefix of all generated Cloud Storage objects. For example:
    /// "gs://bucket_name/object_name_prefix". Each object uri is in format:
    /// "gs://bucket_name/object_name_prefix/&lt;asset type>/&lt;shard number> and only
    /// contains assets for that type. &lt;shard number> starts from 0. For example:
    /// "gs://bucket_name/object_name_prefix/compute.googleapis.com/Disk/0" is
    /// the first shard of output objects containing all
    /// compute.googleapis.com/Disk assets. An INVALID_ARGUMENT error will be
    /// returned if file with the same name "gs://bucket_name/object_name_prefix"
    /// already exists.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UriPrefix {
      get { return objectUriCase_ == ObjectUriOneofCase.UriPrefix ? (string) objectUri_ : ""; }
      set {
        objectUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        objectUriCase_ = ObjectUriOneofCase.UriPrefix;
      }
    }

    private object objectUri_;
    /// <summary>Enum of possible cases for the "object_uri" oneof.</summary>
    public enum ObjectUriOneofCase {
      None = 0,
      Uri = 1,
      UriPrefix = 2,
    }
    private ObjectUriOneofCase objectUriCase_ = ObjectUriOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectUriOneofCase ObjectUriCase {
      get { return objectUriCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjectUri() {
      objectUriCase_ = ObjectUriOneofCase.None;
      objectUri_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GcsDestination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GcsDestination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      if (UriPrefix != other.UriPrefix) return false;
      if (ObjectUriCase != other.ObjectUriCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectUriCase_ == ObjectUriOneofCase.Uri) hash ^= Uri.GetHashCode();
      if (objectUriCase_ == ObjectUriOneofCase.UriPrefix) hash ^= UriPrefix.GetHashCode();
      hash ^= (int) objectUriCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (objectUriCase_ == ObjectUriOneofCase.Uri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (objectUriCase_ == ObjectUriOneofCase.UriPrefix) {
        output.WriteRawTag(18);
        output.WriteString(UriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectUriCase_ == ObjectUriOneofCase.Uri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (objectUriCase_ == ObjectUriOneofCase.UriPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UriPrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GcsDestination other) {
      if (other == null) {
        return;
      }
      switch (other.ObjectUriCase) {
        case ObjectUriOneofCase.Uri:
          Uri = other.Uri;
          break;
        case ObjectUriOneofCase.UriPrefix:
          UriPrefix = other.UriPrefix;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            UriPrefix = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A BigQuery destination.
  /// </summary>
  public sealed partial class BigQueryDestination : pb::IMessage<BigQueryDestination> {
    private static readonly pb::MessageParser<BigQueryDestination> _parser = new pb::MessageParser<BigQueryDestination>(() => new BigQueryDestination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryDestination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryDestination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryDestination(BigQueryDestination other) : this() {
      dataset_ = other.dataset_;
      table_ = other.table_;
      force_ = other.force_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryDestination Clone() {
      return new BigQueryDestination(this);
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 1;
    private string dataset_ = "";
    /// <summary>
    /// Required. The BigQuery dataset in format
    /// "projects/projectId/datasets/datasetId", to which the snapshot result
    /// should be exported. If this dataset does not exist, the export call returns
    /// an INVALID_ARGUMENT error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 2;
    private string table_ = "";
    /// <summary>
    /// Required. The BigQuery table to which the snapshot result should be
    /// written. If this table does not exist, a new table with the given name
    /// will be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Table {
      get { return table_; }
      set {
        table_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "force" field.</summary>
    public const int ForceFieldNumber = 3;
    private bool force_;
    /// <summary>
    /// If the destination table already exists and this flag is `TRUE`, the
    /// table will be overwritten by the contents of assets snapshot. If the flag
    /// is `FALSE` or unset and the destination table already exists, the export
    /// call returns an INVALID_ARGUMEMT error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryDestination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryDestination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dataset != other.Dataset) return false;
      if (Table != other.Table) return false;
      if (Force != other.Force) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      if (Table.Length != 0) hash ^= Table.GetHashCode();
      if (Force != false) hash ^= Force.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dataset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Dataset);
      }
      if (Table.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Table);
      }
      if (Force != false) {
        output.WriteRawTag(24);
        output.WriteBool(Force);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      if (Table.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Table);
      }
      if (Force != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryDestination other) {
      if (other == null) {
        return;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      if (other.Table.Length != 0) {
        Table = other.Table;
      }
      if (other.Force != false) {
        Force = other.Force;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Dataset = input.ReadString();
            break;
          }
          case 18: {
            Table = input.ReadString();
            break;
          }
          case 24: {
            Force = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Pub/Sub destination.
  /// </summary>
  public sealed partial class PubsubDestination : pb::IMessage<PubsubDestination> {
    private static readonly pb::MessageParser<PubsubDestination> _parser = new pb::MessageParser<PubsubDestination>(() => new PubsubDestination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubsubDestination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubsubDestination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubsubDestination(PubsubDestination other) : this() {
      topic_ = other.topic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubsubDestination Clone() {
      return new PubsubDestination(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    /// <summary>
    /// The name of the Pub/Sub topic to publish to.
    /// For example: `projects/PROJECT_ID/topics/TOPIC_ID`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PubsubDestination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubsubDestination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubsubDestination other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Output configuration for asset feed destination.
  /// </summary>
  public sealed partial class FeedOutputConfig : pb::IMessage<FeedOutputConfig> {
    private static readonly pb::MessageParser<FeedOutputConfig> _parser = new pb::MessageParser<FeedOutputConfig>(() => new FeedOutputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedOutputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedOutputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedOutputConfig(FeedOutputConfig other) : this() {
      switch (other.DestinationCase) {
        case DestinationOneofCase.PubsubDestination:
          PubsubDestination = other.PubsubDestination.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedOutputConfig Clone() {
      return new FeedOutputConfig(this);
    }

    /// <summary>Field number for the "pubsub_destination" field.</summary>
    public const int PubsubDestinationFieldNumber = 1;
    /// <summary>
    /// Destination on Pub/Sub.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.PubsubDestination PubsubDestination {
      get { return destinationCase_ == DestinationOneofCase.PubsubDestination ? (global::Google.Cloud.Asset.V1.PubsubDestination) destination_ : null; }
      set {
        destination_ = value;
        destinationCase_ = value == null ? DestinationOneofCase.None : DestinationOneofCase.PubsubDestination;
      }
    }

    private object destination_;
    /// <summary>Enum of possible cases for the "destination" oneof.</summary>
    public enum DestinationOneofCase {
      None = 0,
      PubsubDestination = 1,
    }
    private DestinationOneofCase destinationCase_ = DestinationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOneofCase DestinationCase {
      get { return destinationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestination() {
      destinationCase_ = DestinationOneofCase.None;
      destination_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedOutputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedOutputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PubsubDestination, other.PubsubDestination)) return false;
      if (DestinationCase != other.DestinationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (destinationCase_ == DestinationOneofCase.PubsubDestination) hash ^= PubsubDestination.GetHashCode();
      hash ^= (int) destinationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (destinationCase_ == DestinationOneofCase.PubsubDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(PubsubDestination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (destinationCase_ == DestinationOneofCase.PubsubDestination) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PubsubDestination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedOutputConfig other) {
      if (other == null) {
        return;
      }
      switch (other.DestinationCase) {
        case DestinationOneofCase.PubsubDestination:
          if (PubsubDestination == null) {
            PubsubDestination = new global::Google.Cloud.Asset.V1.PubsubDestination();
          }
          PubsubDestination.MergeFrom(other.PubsubDestination);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Asset.V1.PubsubDestination subBuilder = new global::Google.Cloud.Asset.V1.PubsubDestination();
            if (destinationCase_ == DestinationOneofCase.PubsubDestination) {
              subBuilder.MergeFrom(PubsubDestination);
            }
            input.ReadMessage(subBuilder);
            PubsubDestination = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An asset feed used to export asset updates to a destinations.
  /// An asset feed filter controls what updates are exported.
  /// The asset feed must be created within a project, organization, or
  /// folder. Supported destinations are:
  /// Pub/Sub topics.
  /// </summary>
  public sealed partial class Feed : pb::IMessage<Feed> {
    private static readonly pb::MessageParser<Feed> _parser = new pb::MessageParser<Feed>(() => new Feed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Feed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feed(Feed other) : this() {
      name_ = other.name_;
      assetNames_ = other.assetNames_.Clone();
      assetTypes_ = other.assetTypes_.Clone();
      contentType_ = other.contentType_;
      feedOutputConfig_ = other.feedOutputConfig_ != null ? other.feedOutputConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feed Clone() {
      return new Feed(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The format will be
    /// projects/{project_number}/feeds/{client-assigned_feed_identifier} or
    /// folders/{folder_number}/feeds/{client-assigned_feed_identifier} or
    /// organizations/{organization_number}/feeds/{client-assigned_feed_identifier}
    ///
    /// The client-assigned feed identifier must be unique within the parent
    /// project/folder/organization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset_names" field.</summary>
    public const int AssetNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_assetNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> assetNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of the full names of the assets to receive updates. You must specify
    /// either or both of asset_names and asset_types. Only asset updates matching
    /// specified asset_names and asset_types are exported to the feed. For
    /// example:
    /// `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
    /// See [Resource
    /// Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
    /// for more info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AssetNames {
      get { return assetNames_; }
    }

    /// <summary>Field number for the "asset_types" field.</summary>
    public const int AssetTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_assetTypes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> assetTypes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of types of the assets to receive updates. You must specify either
    /// or both of asset_names and asset_types. Only asset updates matching
    /// specified asset_names and asset_types are exported to the feed.
    /// For example: `"compute.googleapis.com/Disk"`
    ///
    /// See [this
    /// topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types)
    /// for a list of all supported asset types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AssetTypes {
      get { return assetTypes_; }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 4;
    private global::Google.Cloud.Asset.V1.ContentType contentType_ = global::Google.Cloud.Asset.V1.ContentType.Unspecified;
    /// <summary>
    /// Asset content type. If not specified, no content but the asset name and
    /// type will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.ContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "feed_output_config" field.</summary>
    public const int FeedOutputConfigFieldNumber = 5;
    private global::Google.Cloud.Asset.V1.FeedOutputConfig feedOutputConfig_;
    /// <summary>
    /// Required. Feed output configuration defining where the asset updates are
    /// published to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1.FeedOutputConfig FeedOutputConfig {
      get { return feedOutputConfig_; }
      set {
        feedOutputConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Feed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Feed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!assetNames_.Equals(other.assetNames_)) return false;
      if(!assetTypes_.Equals(other.assetTypes_)) return false;
      if (ContentType != other.ContentType) return false;
      if (!object.Equals(FeedOutputConfig, other.FeedOutputConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= assetNames_.GetHashCode();
      hash ^= assetTypes_.GetHashCode();
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) hash ^= ContentType.GetHashCode();
      if (feedOutputConfig_ != null) hash ^= FeedOutputConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      assetNames_.WriteTo(output, _repeated_assetNames_codec);
      assetTypes_.WriteTo(output, _repeated_assetTypes_codec);
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ContentType);
      }
      if (feedOutputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FeedOutputConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += assetNames_.CalculateSize(_repeated_assetNames_codec);
      size += assetTypes_.CalculateSize(_repeated_assetTypes_codec);
      if (ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (feedOutputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeedOutputConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Feed other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      assetNames_.Add(other.assetNames_);
      assetTypes_.Add(other.assetTypes_);
      if (other.ContentType != global::Google.Cloud.Asset.V1.ContentType.Unspecified) {
        ContentType = other.ContentType;
      }
      if (other.feedOutputConfig_ != null) {
        if (feedOutputConfig_ == null) {
          FeedOutputConfig = new global::Google.Cloud.Asset.V1.FeedOutputConfig();
        }
        FeedOutputConfig.MergeFrom(other.FeedOutputConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            assetNames_.AddEntriesFrom(input, _repeated_assetNames_codec);
            break;
          }
          case 26: {
            assetTypes_.AddEntriesFrom(input, _repeated_assetTypes_codec);
            break;
          }
          case 32: {
            ContentType = (global::Google.Cloud.Asset.V1.ContentType) input.ReadEnum();
            break;
          }
          case 42: {
            if (feedOutputConfig_ == null) {
              FeedOutputConfig = new global::Google.Cloud.Asset.V1.FeedOutputConfig();
            }
            input.ReadMessage(FeedOutputConfig);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Search all resources request.
  /// </summary>
  public sealed partial class SearchAllResourcesRequest : pb::IMessage<SearchAllResourcesRequest> {
    private static readonly pb::MessageParser<SearchAllResourcesRequest> _parser = new pb::MessageParser<SearchAllResourcesRequest>(() => new SearchAllResourcesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchAllResourcesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllResourcesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllResourcesRequest(SearchAllResourcesRequest other) : this() {
      scope_ = other.scope_;
      query_ = other.query_;
      assetTypes_ = other.assetTypes_.Clone();
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllResourcesRequest Clone() {
      return new SearchAllResourcesRequest(this);
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 1;
    private string scope_ = "";
    /// <summary>
    /// Required. A scope can be a project, a folder or an organization. The search
    /// is limited to the resources within the `scope`.
    ///
    /// The allowed values are:
    ///
    /// * projects/{PROJECT_ID}
    /// * projects/{PROJECT_NUMBER}
    /// * folders/{FOLDER_NUMBER}
    /// * organizations/{ORGANIZATION_NUMBER}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private string query_ = "";
    /// <summary>
    /// Optional. The query statement. An empty query can be specified to search
    /// all the resources of certain `asset_types` within the given `scope`.
    ///
    /// Examples:
    ///
    /// * `name : "Important"` to find Cloud resources whose name contains
    ///   "Important" as a word.
    /// * `displayName : "Impor*"` to find Cloud resources whose display name
    ///   contains "Impor" as a word prefix.
    /// * `description : "*por*"` to find Cloud resources whose description
    ///   contains "por" as a substring.
    /// * `location : "us-west*"` to find Cloud resources whose location is
    ///   prefixed with "us-west".
    /// * `labels : "prod"` to find Cloud resources whose labels contain "prod" as
    ///   a key or value.
    /// * `labels.env : "prod"` to find Cloud resources which have a label "env"
    ///   and its value is "prod".
    /// * `labels.env : *` to find Cloud resources which have a label "env".
    /// * `"Important"` to find Cloud resources which contain "Important" as a word
    ///   in any of the searchable fields.
    /// * `"Impor*"` to find Cloud resources which contain "Impor" as a word prefix
    ///   in any of the searchable fields.
    /// * `"*por*"` to find Cloud resources which contain "por" as a substring in
    ///   any of the searchable fields.
    /// * `("Important" AND location : ("us-west1" OR "global"))` to find Cloud
    ///   resources which contain "Important" as a word in any of the searchable
    ///   fields and are also located in the "us-west1" region or the "global"
    ///   location.
    ///
    /// See [how to construct a
    /// query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query)
    /// for more details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset_types" field.</summary>
    public const int AssetTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_assetTypes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> assetTypes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. A list of asset types that this request searches for. If empty,
    /// it will search all the [searchable asset
    /// types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AssetTypes {
      get { return assetTypes_; }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 4;
    private int pageSize_;
    /// <summary>
    /// Optional. The page size for search result pagination. Page size is capped
    /// at 500 even if a larger value is given. If set to zero, server will pick an
    /// appropriate default. Returned results may be fewer than requested. When
    /// this happens, there could be more results as long as `next_page_token` is
    /// returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 5;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. If present, then retrieve the next batch of results from the
    /// preceding call to this method. `page_token` must be the value of
    /// `next_page_token` from the previous response. The values of all other
    /// method parameters, must be identical to those in the previous call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 6;
    private string orderBy_ = "";
    /// <summary>
    /// Optional. A comma separated list of fields specifying the sorting order of
    /// the results. The default order is ascending. Add " DESC" after the field
    /// name to indicate descending order. Redundant space characters are ignored.
    /// Example: "location DESC, name". See [supported resource metadata
    /// fields](https://cloud.google.com/asset-inventory/docs/searching-resources#query_on_resource_metadata_fields)
    /// for more details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchAllResourcesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchAllResourcesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Scope != other.Scope) return false;
      if (Query != other.Query) return false;
      if(!assetTypes_.Equals(other.assetTypes_)) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      hash ^= assetTypes_.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Scope.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Scope);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Query);
      }
      assetTypes_.WriteTo(output, _repeated_assetTypes_codec);
      if (PageSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PageToken);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Scope.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      size += assetTypes_.CalculateSize(_repeated_assetTypes_codec);
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchAllResourcesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      assetTypes_.Add(other.assetTypes_);
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Scope = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadString();
            break;
          }
          case 26: {
            assetTypes_.AddEntriesFrom(input, _repeated_assetTypes_codec);
            break;
          }
          case 32: {
            PageSize = input.ReadInt32();
            break;
          }
          case 42: {
            PageToken = input.ReadString();
            break;
          }
          case 50: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Search all resources response.
  /// </summary>
  public sealed partial class SearchAllResourcesResponse : pb::IMessage<SearchAllResourcesResponse> {
    private static readonly pb::MessageParser<SearchAllResourcesResponse> _parser = new pb::MessageParser<SearchAllResourcesResponse>(() => new SearchAllResourcesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchAllResourcesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllResourcesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllResourcesResponse(SearchAllResourcesResponse other) : this() {
      results_ = other.results_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllResourcesResponse Clone() {
      return new SearchAllResourcesResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Asset.V1.ResourceSearchResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Asset.V1.ResourceSearchResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Asset.V1.ResourceSearchResult> results_ = new pbc::RepeatedField<global::Google.Cloud.Asset.V1.ResourceSearchResult>();
    /// <summary>
    /// A list of Resources that match the search query. It contains the resource
    /// standard metadata information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Asset.V1.ResourceSearchResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If there are more results than those appearing in this response, then
    /// `next_page_token` is included. To get the next set of results, call this
    /// method again using the value of `next_page_token` as `page_token`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchAllResourcesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchAllResourcesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchAllResourcesResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Search all IAM policies request.
  /// </summary>
  public sealed partial class SearchAllIamPoliciesRequest : pb::IMessage<SearchAllIamPoliciesRequest> {
    private static readonly pb::MessageParser<SearchAllIamPoliciesRequest> _parser = new pb::MessageParser<SearchAllIamPoliciesRequest>(() => new SearchAllIamPoliciesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchAllIamPoliciesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllIamPoliciesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllIamPoliciesRequest(SearchAllIamPoliciesRequest other) : this() {
      scope_ = other.scope_;
      query_ = other.query_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllIamPoliciesRequest Clone() {
      return new SearchAllIamPoliciesRequest(this);
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 1;
    private string scope_ = "";
    /// <summary>
    /// Required. A scope can be a project, a folder or an organization. The search
    /// is limited to the IAM policies within the `scope`.
    ///
    /// The allowed values are:
    ///
    /// * projects/{PROJECT_ID}
    /// * projects/{PROJECT_NUMBER}
    /// * folders/{FOLDER_NUMBER}
    /// * organizations/{ORGANIZATION_NUMBER}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private string query_ = "";
    /// <summary>
    /// Optional. The query statement. An empty query can be specified to search
    /// all the IAM policies within the given `scope`.
    ///
    /// Examples:
    ///
    /// * `policy : "amy@gmail.com"` to find Cloud IAM policy bindings that
    ///   specify user "amy@gmail.com".
    /// * `policy : "roles/compute.admin"` to find Cloud IAM policy bindings that
    ///   specify the Compute Admin role.
    /// * `policy.role.permissions : "storage.buckets.update"` to find Cloud IAM
    ///   policy bindings that specify a role containing "storage.buckets.update"
    ///   permission.
    /// * `resource : "organizations/123"` to find Cloud IAM policy bindings that
    ///   are set on "organizations/123".
    /// * `(resource : ("organizations/123" OR "folders/1234") AND policy : "amy")`
    ///   to find Cloud IAM policy bindings that are set on "organizations/123" or
    ///   "folders/1234", and also specify user "amy".
    ///
    /// See [how to construct a
    /// query](https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query)
    /// for more details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Optional. The page size for search result pagination. Page size is capped
    /// at 500 even if a larger value is given. If set to zero, server will pick an
    /// appropriate default. Returned results may be fewer than requested. When
    /// this happens, there could be more results as long as `next_page_token` is
    /// returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. If present, retrieve the next batch of results from the preceding
    /// call to this method. `page_token` must be the value of `next_page_token`
    /// from the previous response. The values of all other method parameters must
    /// be identical to those in the previous call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchAllIamPoliciesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchAllIamPoliciesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Scope != other.Scope) return false;
      if (Query != other.Query) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Scope.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Scope);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Query);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Scope.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchAllIamPoliciesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Scope = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Search all IAM policies response.
  /// </summary>
  public sealed partial class SearchAllIamPoliciesResponse : pb::IMessage<SearchAllIamPoliciesResponse> {
    private static readonly pb::MessageParser<SearchAllIamPoliciesResponse> _parser = new pb::MessageParser<SearchAllIamPoliciesResponse>(() => new SearchAllIamPoliciesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchAllIamPoliciesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1.AssetServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllIamPoliciesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllIamPoliciesResponse(SearchAllIamPoliciesResponse other) : this() {
      results_ = other.results_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchAllIamPoliciesResponse Clone() {
      return new SearchAllIamPoliciesResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Asset.V1.IamPolicySearchResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Asset.V1.IamPolicySearchResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Asset.V1.IamPolicySearchResult> results_ = new pbc::RepeatedField<global::Google.Cloud.Asset.V1.IamPolicySearchResult>();
    /// <summary>
    /// A list of IamPolicy that match the search query. Related information such
    /// as the associated resource is returned along with the policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Asset.V1.IamPolicySearchResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Set if there are more results than those appearing in this response; to get
    /// the next set of results, call this method again, using this value as the
    /// `page_token`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchAllIamPoliciesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchAllIamPoliciesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchAllIamPoliciesResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
