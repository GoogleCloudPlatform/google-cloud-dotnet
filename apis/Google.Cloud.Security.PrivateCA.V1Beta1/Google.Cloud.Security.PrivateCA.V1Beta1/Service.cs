// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/security/privateca/v1beta1/service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Security.PrivateCA.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/security/privateca/v1beta1/service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/security/privateca/v1beta1/service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVnb29nbGUvY2xvdWQvc2VjdXJpdHkvcHJpdmF0ZWNhL3YxYmV0YTEvc2Vy",
            "dmljZS5wcm90bxInZ29vZ2xlLmNsb3VkLnNlY3VyaXR5LnByaXZhdGVjYS52",
            "MWJldGExGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGhdnb29nbGUv",
            "YXBpL2NsaWVudC5wcm90bxofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5w",
            "cm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxo3Z29vZ2xlL2Nsb3Vk",
            "L3NlY3VyaXR5L3ByaXZhdGVjYS92MWJldGExL3Jlc291cmNlcy5wcm90bxoj",
            "Z29vZ2xlL2xvbmdydW5uaW5nL29wZXJhdGlvbnMucHJvdG8aIGdvb2dsZS9w",
            "cm90b2J1Zi9maWVsZF9tYXNrLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvIucBChhDcmVhdGVDZXJ0aWZpY2F0ZVJlcXVlc3QSRQoG",
            "cGFyZW50GAEgASgJQjXgQQL6QS8KLXByaXZhdGVjYS5nb29nbGVhcGlzLmNv",
            "bS9DZXJ0aWZpY2F0ZUF1dGhvcml0eRIbCg5jZXJ0aWZpY2F0ZV9pZBgCIAEo",
            "CUID4EEBEk4KC2NlcnRpZmljYXRlGAMgASgLMjQuZ29vZ2xlLmNsb3VkLnNl",
            "Y3VyaXR5LnByaXZhdGVjYS52MWJldGExLkNlcnRpZmljYXRlQgPgQQISFwoK",
            "cmVxdWVzdF9pZBgEIAEoCUID4EEBIlMKFUdldENlcnRpZmljYXRlUmVxdWVz",
            "dBI6CgRuYW1lGAEgASgJQizgQQL6QSYKJHByaXZhdGVjYS5nb29nbGVhcGlz",
            "LmNvbS9DZXJ0aWZpY2F0ZSK9AQoXTGlzdENlcnRpZmljYXRlc1JlcXVlc3QS",
            "RQoGcGFyZW50GAEgASgJQjXgQQL6QS8KLXByaXZhdGVjYS5nb29nbGVhcGlz",
            "LmNvbS9DZXJ0aWZpY2F0ZUF1dGhvcml0eRIWCglwYWdlX3NpemUYAiABKAVC",
            "A+BBARIXCgpwYWdlX3Rva2VuGAMgASgJQgPgQQESEwoGZmlsdGVyGAQgASgJ",
            "QgPgQQESFQoIb3JkZXJfYnkYBSABKAlCA+BBASKUAQoYTGlzdENlcnRpZmlj",
            "YXRlc1Jlc3BvbnNlEkoKDGNlcnRpZmljYXRlcxgBIAMoCzI0Lmdvb2dsZS5j",
            "bG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5DZXJ0aWZpY2F0ZRIX",
            "Cg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEwoLdW5yZWFjaGFibGUYAyADKAki",
            "vwEKGFJldm9rZUNlcnRpZmljYXRlUmVxdWVzdBI6CgRuYW1lGAEgASgJQizg",
            "QQL6QSYKJHByaXZhdGVjYS5nb29nbGVhcGlzLmNvbS9DZXJ0aWZpY2F0ZRJO",
            "CgZyZWFzb24YAiABKA4yOS5nb29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0",
            "ZWNhLnYxYmV0YTEuUmV2b2NhdGlvblJlYXNvbkID4EECEhcKCnJlcXVlc3Rf",
            "aWQYAyABKAlCA+BBASK5AQoYVXBkYXRlQ2VydGlmaWNhdGVSZXF1ZXN0Ek4K",
            "C2NlcnRpZmljYXRlGAEgASgLMjQuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5LnBy",
            "aXZhdGVjYS52MWJldGExLkNlcnRpZmljYXRlQgPgQQISNAoLdXBkYXRlX21h",
            "c2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQISFwoK",
            "cmVxdWVzdF9pZBgDIAEoCUID4EEBIoECCiNBY3RpdmF0ZUNlcnRpZmljYXRl",
            "QXV0aG9yaXR5UmVxdWVzdBJDCgRuYW1lGAEgASgJQjXgQQL6QS8KLXByaXZh",
            "dGVjYS5nb29nbGVhcGlzLmNvbS9DZXJ0aWZpY2F0ZUF1dGhvcml0eRIfChJw",
            "ZW1fY2FfY2VydGlmaWNhdGUYAiABKAlCA+BBAhJbChJzdWJvcmRpbmF0ZV9j",
            "b25maWcYAyABKAsyOi5nb29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNh",
            "LnYxYmV0YTEuU3Vib3JkaW5hdGVDb25maWdCA+BBAhIXCgpyZXF1ZXN0X2lk",
            "GAQgASgJQgPgQQEigQIKIUNyZWF0ZUNlcnRpZmljYXRlQXV0aG9yaXR5UmVx",
            "dWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohbG9jYXRpb25zLmdvb2ds",
            "ZWFwaXMuY29tL0xvY2F0aW9uEiUKGGNlcnRpZmljYXRlX2F1dGhvcml0eV9p",
            "ZBgCIAEoCUID4EECEmEKFWNlcnRpZmljYXRlX2F1dGhvcml0eRgDIAEoCzI9",
            "Lmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5DZXJ0",
            "aWZpY2F0ZUF1dGhvcml0eUID4EECEhcKCnJlcXVlc3RfaWQYBCABKAlCA+BB",
            "ASKCAQoiRGlzYWJsZUNlcnRpZmljYXRlQXV0aG9yaXR5UmVxdWVzdBJDCgRu",
            "YW1lGAEgASgJQjXgQQL6QS8KLXByaXZhdGVjYS5nb29nbGVhcGlzLmNvbS9D",
            "ZXJ0aWZpY2F0ZUF1dGhvcml0eRIXCgpyZXF1ZXN0X2lkGAIgASgJQgPgQQEi",
            "gQEKIUVuYWJsZUNlcnRpZmljYXRlQXV0aG9yaXR5UmVxdWVzdBJDCgRuYW1l",
            "GAEgASgJQjXgQQL6QS8KLXByaXZhdGVjYS5nb29nbGVhcGlzLmNvbS9DZXJ0",
            "aWZpY2F0ZUF1dGhvcml0eRIXCgpyZXF1ZXN0X2lkGAIgASgJQgPgQQEiagoj",
            "RmV0Y2hDZXJ0aWZpY2F0ZUF1dGhvcml0eUNzclJlcXVlc3QSQwoEbmFtZRgB",
            "IAEoCUI14EEC+kEvCi1wcml2YXRlY2EuZ29vZ2xlYXBpcy5jb20vQ2VydGlm",
            "aWNhdGVBdXRob3JpdHkiPAokRmV0Y2hDZXJ0aWZpY2F0ZUF1dGhvcml0eUNz",
            "clJlc3BvbnNlEhQKB3BlbV9jc3IYASABKAlCA+BBAyJlCh5HZXRDZXJ0aWZp",
            "Y2F0ZUF1dGhvcml0eVJlcXVlc3QSQwoEbmFtZRgBIAEoCUI14EEC+kEvCi1w",
            "cml2YXRlY2EuZ29vZ2xlYXBpcy5jb20vQ2VydGlmaWNhdGVBdXRob3JpdHki",
            "uwEKIUxpc3RDZXJ0aWZpY2F0ZUF1dGhvcml0aWVzUmVxdWVzdBI5CgZwYXJl",
            "bnQYASABKAlCKeBBAvpBIwohbG9jYXRpb25zLmdvb2dsZWFwaXMuY29tL0xv",
            "Y2F0aW9uEhYKCXBhZ2Vfc2l6ZRgCIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4Y",
            "AyABKAlCA+BBARITCgZmaWx0ZXIYBCABKAlCA+BBARIVCghvcmRlcl9ieRgF",
            "IAEoCUID4EEBIrIBCiJMaXN0Q2VydGlmaWNhdGVBdXRob3JpdGllc1Jlc3Bv",
            "bnNlEl4KF2NlcnRpZmljYXRlX2F1dGhvcml0aWVzGAEgAygLMj0uZ29vZ2xl",
            "LmNsb3VkLnNlY3VyaXR5LnByaXZhdGVjYS52MWJldGExLkNlcnRpZmljYXRl",
            "QXV0aG9yaXR5EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRITCgt1bnJlYWNo",
            "YWJsZRgDIAMoCSKCAQoiUmVzdG9yZUNlcnRpZmljYXRlQXV0aG9yaXR5UmVx",
            "dWVzdBJDCgRuYW1lGAEgASgJQjXgQQL6QS8KLXByaXZhdGVjYS5nb29nbGVh",
            "cGlzLmNvbS9DZXJ0aWZpY2F0ZUF1dGhvcml0eRIXCgpyZXF1ZXN0X2lkGAIg",
            "ASgJQgPgQQEiiQEKKVNjaGVkdWxlRGVsZXRlQ2VydGlmaWNhdGVBdXRob3Jp",
            "dHlSZXF1ZXN0EkMKBG5hbWUYASABKAlCNeBBAvpBLwotcHJpdmF0ZWNhLmdv",
            "b2dsZWFwaXMuY29tL0NlcnRpZmljYXRlQXV0aG9yaXR5EhcKCnJlcXVlc3Rf",
            "aWQYAiABKAlCA+BBASLVAQohVXBkYXRlQ2VydGlmaWNhdGVBdXRob3JpdHlS",
            "ZXF1ZXN0EmEKFWNlcnRpZmljYXRlX2F1dGhvcml0eRgBIAEoCzI9Lmdvb2ds",
            "ZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5DZXJ0aWZpY2F0",
            "ZUF1dGhvcml0eUID4EECEjQKC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLkZpZWxkTWFza0ID4EECEhcKCnJlcXVlc3RfaWQYAyABKAlC",
            "A+BBASKjAgomQ3JlYXRlQ2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdFJlcXVl",
            "c3QSRQoGcGFyZW50GAEgASgJQjXgQQL6QS8KLXByaXZhdGVjYS5nb29nbGVh",
            "cGlzLmNvbS9DZXJ0aWZpY2F0ZUF1dGhvcml0eRIrCh5jZXJ0aWZpY2F0ZV9y",
            "ZXZvY2F0aW9uX2xpc3RfaWQYAiABKAlCA+BBAhJsChtjZXJ0aWZpY2F0ZV9y",
            "ZXZvY2F0aW9uX2xpc3QYAyABKAsyQi5nb29nbGUuY2xvdWQuc2VjdXJpdHku",
            "cHJpdmF0ZWNhLnYxYmV0YTEuQ2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdEID",
            "4EECEhcKCnJlcXVlc3RfaWQYBCABKAlCA+BBASJvCiNHZXRDZXJ0aWZpY2F0",
            "ZVJldm9jYXRpb25MaXN0UmVxdWVzdBJICgRuYW1lGAEgASgJQjrgQQL6QTQK",
            "MnByaXZhdGVjYS5nb29nbGVhcGlzLmNvbS9DZXJ0aWZpY2F0ZVJldm9jYXRp",
            "b25MaXN0IssBCiVMaXN0Q2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdHNSZXF1",
            "ZXN0EkUKBnBhcmVudBgBIAEoCUI14EEC+kEvCi1wcml2YXRlY2EuZ29vZ2xl",
            "YXBpcy5jb20vQ2VydGlmaWNhdGVBdXRob3JpdHkSFgoJcGFnZV9zaXplGAIg",
            "ASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgE",
            "IAEoCUID4EEBEhUKCG9yZGVyX2J5GAUgASgJQgPgQQEiwAEKJkxpc3RDZXJ0",
            "aWZpY2F0ZVJldm9jYXRpb25MaXN0c1Jlc3BvbnNlEmgKHGNlcnRpZmljYXRl",
            "X3Jldm9jYXRpb25fbGlzdHMYASADKAsyQi5nb29nbGUuY2xvdWQuc2VjdXJp",
            "dHkucHJpdmF0ZWNhLnYxYmV0YTEuQ2VydGlmaWNhdGVSZXZvY2F0aW9uTGlz",
            "dBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEwoLdW5yZWFjaGFibGUYAyAD",
            "KAki5QEKJlVwZGF0ZUNlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3RSZXF1ZXN0",
            "EmwKG2NlcnRpZmljYXRlX3Jldm9jYXRpb25fbGlzdBgBIAEoCzJCLmdvb2ds",
            "ZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5DZXJ0aWZpY2F0",
            "ZVJldm9jYXRpb25MaXN0QgPgQQISNAoLdXBkYXRlX21hc2sYAiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQISFwoKcmVxdWVzdF9pZBgD",
            "IAEoCUID4EEBIukBChtDcmVhdGVSZXVzYWJsZUNvbmZpZ1JlcXVlc3QSOQoG",
            "cGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNv",
            "bS9Mb2NhdGlvbhIfChJyZXVzYWJsZV9jb25maWdfaWQYAiABKAlCA+BBAhJV",
            "Cg9yZXVzYWJsZV9jb25maWcYAyABKAsyNy5nb29nbGUuY2xvdWQuc2VjdXJp",
            "dHkucHJpdmF0ZWNhLnYxYmV0YTEuUmV1c2FibGVDb25maWdCA+BBAhIXCgpy",
            "ZXF1ZXN0X2lkGAQgASgJQgPgQQEidQobRGVsZXRlUmV1c2FibGVDb25maWdS",
            "ZXF1ZXN0Ej0KBG5hbWUYASABKAlCL+BBAvpBKQoncHJpdmF0ZWNhLmdvb2ds",
            "ZWFwaXMuY29tL1JldXNhYmxlQ29uZmlnEhcKCnJlcXVlc3RfaWQYAiABKAlC",
            "A+BBASJZChhHZXRSZXVzYWJsZUNvbmZpZ1JlcXVlc3QSPQoEbmFtZRgBIAEo",
            "CUIv4EEC+kEpCidwcml2YXRlY2EuZ29vZ2xlYXBpcy5jb20vUmV1c2FibGVD",
            "b25maWcitAEKGkxpc3RSZXVzYWJsZUNvbmZpZ3NSZXF1ZXN0EjkKBnBhcmVu",
            "dBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9j",
            "YXRpb24SFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgD",
            "IAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBEhUKCG9yZGVyX2J5GAUg",
            "ASgJQgPgQQEingEKG0xpc3RSZXVzYWJsZUNvbmZpZ3NSZXNwb25zZRJRChBy",
            "ZXVzYWJsZV9jb25maWdzGAEgAygLMjcuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5",
            "LnByaXZhdGVjYS52MWJldGExLlJldXNhYmxlQ29uZmlnEhcKD25leHRfcGFn",
            "ZV90b2tlbhgCIAEoCRITCgt1bnJlYWNoYWJsZRgDIAMoCSLDAQobVXBkYXRl",
            "UmV1c2FibGVDb25maWdSZXF1ZXN0ElUKD3JldXNhYmxlX2NvbmZpZxgBIAEo",
            "CzI3Lmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5S",
            "ZXVzYWJsZUNvbmZpZ0ID4EECEjQKC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECEhcKCnJlcXVlc3RfaWQYAyAB",
            "KAlCA+BBASKAAgoRT3BlcmF0aW9uTWV0YWRhdGESNAoLY3JlYXRlX3RpbWUY",
            "ASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSMQoIZW5k",
            "X3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMS",
            "EwoGdGFyZ2V0GAMgASgJQgPgQQMSEQoEdmVyYhgEIAEoCUID4EEDEhsKDnN0",
            "YXR1c19tZXNzYWdlGAUgASgJQgPgQQMSIwoWcmVxdWVzdGVkX2NhbmNlbGxh",
            "dGlvbhgGIAEoCEID4EEDEhgKC2FwaV92ZXJzaW9uGAcgASgJQgPgQQMyxTYK",
            "G0NlcnRpZmljYXRlQXV0aG9yaXR5U2VydmljZRKWAgoRQ3JlYXRlQ2VydGlm",
            "aWNhdGUSQS5nb29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0",
            "YTEuQ3JlYXRlQ2VydGlmaWNhdGVSZXF1ZXN0GjQuZ29vZ2xlLmNsb3VkLnNl",
            "Y3VyaXR5LnByaXZhdGVjYS52MWJldGExLkNlcnRpZmljYXRlIocBgtPkkwJd",
            "Ik4vdjFiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovY2Vy",
            "dGlmaWNhdGVBdXRob3JpdGllcy8qfS9jZXJ0aWZpY2F0ZXM6C2NlcnRpZmlj",
            "YXRl2kEhcGFyZW50LGNlcnRpZmljYXRlLGNlcnRpZmljYXRlX2lkEuUBCg5H",
            "ZXRDZXJ0aWZpY2F0ZRI+Lmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRl",
            "Y2EudjFiZXRhMS5HZXRDZXJ0aWZpY2F0ZVJlcXVlc3QaNC5nb29nbGUuY2xv",
            "dWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuQ2VydGlmaWNhdGUiXYLT",
            "5JMCUBJOL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9j",
            "ZXJ0aWZpY2F0ZUF1dGhvcml0aWVzLyovY2VydGlmaWNhdGVzLyp92kEEbmFt",
            "ZRL4AQoQTGlzdENlcnRpZmljYXRlcxJALmdvb2dsZS5jbG91ZC5zZWN1cml0",
            "eS5wcml2YXRlY2EudjFiZXRhMS5MaXN0Q2VydGlmaWNhdGVzUmVxdWVzdBpB",
            "Lmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5MaXN0",
            "Q2VydGlmaWNhdGVzUmVzcG9uc2UiX4LT5JMCUBJOL3YxYmV0YTEve3BhcmVu",
            "dD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NlcnRpZmljYXRlQXV0aG9yaXRp",
            "ZXMvKn0vY2VydGlmaWNhdGVz2kEGcGFyZW50EvUBChFSZXZva2VDZXJ0aWZp",
            "Y2F0ZRJBLmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRh",
            "MS5SZXZva2VDZXJ0aWZpY2F0ZVJlcXVlc3QaNC5nb29nbGUuY2xvdWQuc2Vj",
            "dXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuQ2VydGlmaWNhdGUiZ4LT5JMCWiJV",
            "L3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jZXJ0aWZp",
            "Y2F0ZUF1dGhvcml0aWVzLyovY2VydGlmaWNhdGVzLyp9OnJldm9rZToBKtpB",
            "BG5hbWUSmAIKEVVwZGF0ZUNlcnRpZmljYXRlEkEuZ29vZ2xlLmNsb3VkLnNl",
            "Y3VyaXR5LnByaXZhdGVjYS52MWJldGExLlVwZGF0ZUNlcnRpZmljYXRlUmVx",
            "dWVzdBo0Lmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRh",
            "MS5DZXJ0aWZpY2F0ZSKJAYLT5JMCaTJaL3YxYmV0YTEve2NlcnRpZmljYXRl",
            "Lm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jZXJ0aWZpY2F0ZUF1dGhv",
            "cml0aWVzLyovY2VydGlmaWNhdGVzLyp9OgtjZXJ0aWZpY2F0ZdpBF2NlcnRp",
            "ZmljYXRlLHVwZGF0ZV9tYXNrEpQCChxBY3RpdmF0ZUNlcnRpZmljYXRlQXV0",
            "aG9yaXR5EkwuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5LnByaXZhdGVjYS52MWJl",
            "dGExLkFjdGl2YXRlQ2VydGlmaWNhdGVBdXRob3JpdHlSZXF1ZXN0Gh0uZ29v",
            "Z2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKGAYLT5JMCTSJIL3YxYmV0YTEv",
            "e25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jZXJ0aWZpY2F0ZUF1dGhv",
            "cml0aWVzLyp9OmFjdGl2YXRlOgEq2kEEbmFtZcpBKQoUQ2VydGlmaWNhdGVB",
            "dXRob3JpdHkSEU9wZXJhdGlvbk1ldGFkYXRhEswCChpDcmVhdGVDZXJ0aWZp",
            "Y2F0ZUF1dGhvcml0eRJKLmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRl",
            "Y2EudjFiZXRhMS5DcmVhdGVDZXJ0aWZpY2F0ZUF1dGhvcml0eVJlcXVlc3Qa",
            "HS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIsIBgtPkkwJYIj8vdjFi",
            "ZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2NlcnRpZmlj",
            "YXRlQXV0aG9yaXRpZXM6FWNlcnRpZmljYXRlX2F1dGhvcml0edpBNXBhcmVu",
            "dCxjZXJ0aWZpY2F0ZV9hdXRob3JpdHksY2VydGlmaWNhdGVfYXV0aG9yaXR5",
            "X2lkykEpChRDZXJ0aWZpY2F0ZUF1dGhvcml0eRIRT3BlcmF0aW9uTWV0YWRh",
            "dGESkQIKG0Rpc2FibGVDZXJ0aWZpY2F0ZUF1dGhvcml0eRJLLmdvb2dsZS5j",
            "bG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5EaXNhYmxlQ2VydGlm",
            "aWNhdGVBdXRob3JpdHlSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9w",
            "ZXJhdGlvbiKFAYLT5JMCTCJHL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9s",
            "b2NhdGlvbnMvKi9jZXJ0aWZpY2F0ZUF1dGhvcml0aWVzLyp9OmRpc2FibGU6",
            "ASraQQRuYW1lykEpChRDZXJ0aWZpY2F0ZUF1dGhvcml0eRIRT3BlcmF0aW9u",
            "TWV0YWRhdGESjgIKGkVuYWJsZUNlcnRpZmljYXRlQXV0aG9yaXR5EkouZ29v",
            "Z2xlLmNsb3VkLnNlY3VyaXR5LnByaXZhdGVjYS52MWJldGExLkVuYWJsZUNl",
            "cnRpZmljYXRlQXV0aG9yaXR5UmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmlu",
            "Zy5PcGVyYXRpb24ihAGC0+STAksiRi92MWJldGExL3tuYW1lPXByb2plY3Rz",
            "LyovbG9jYXRpb25zLyovY2VydGlmaWNhdGVBdXRob3JpdGllcy8qfTplbmFi",
            "bGU6ASraQQRuYW1lykEpChRDZXJ0aWZpY2F0ZUF1dGhvcml0eRIRT3BlcmF0",
            "aW9uTWV0YWRhdGESkQIKHEZldGNoQ2VydGlmaWNhdGVBdXRob3JpdHlDc3IS",
            "TC5nb29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuRmV0",
            "Y2hDZXJ0aWZpY2F0ZUF1dGhvcml0eUNzclJlcXVlc3QaTS5nb29nbGUuY2xv",
            "dWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuRmV0Y2hDZXJ0aWZpY2F0",
            "ZUF1dGhvcml0eUNzclJlc3BvbnNlIlSC0+STAkcSRS92MWJldGExL3tuYW1l",
            "PXByb2plY3RzLyovbG9jYXRpb25zLyovY2VydGlmaWNhdGVBdXRob3JpdGll",
            "cy8qfTpmZXRjaNpBBG5hbWUS8QEKF0dldENlcnRpZmljYXRlQXV0aG9yaXR5",
            "EkcuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5LnByaXZhdGVjYS52MWJldGExLkdl",
            "dENlcnRpZmljYXRlQXV0aG9yaXR5UmVxdWVzdBo9Lmdvb2dsZS5jbG91ZC5z",
            "ZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5DZXJ0aWZpY2F0ZUF1dGhvcml0",
            "eSJOgtPkkwJBEj8vdjFiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9u",
            "cy8qL2NlcnRpZmljYXRlQXV0aG9yaXRpZXMvKn3aQQRuYW1lEocCChpMaXN0",
            "Q2VydGlmaWNhdGVBdXRob3JpdGllcxJKLmdvb2dsZS5jbG91ZC5zZWN1cml0",
            "eS5wcml2YXRlY2EudjFiZXRhMS5MaXN0Q2VydGlmaWNhdGVBdXRob3JpdGll",
            "c1JlcXVlc3QaSy5nb29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYx",
            "YmV0YTEuTGlzdENlcnRpZmljYXRlQXV0aG9yaXRpZXNSZXNwb25zZSJQgtPk",
            "kwJBEj8vdjFiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9",
            "L2NlcnRpZmljYXRlQXV0aG9yaXRpZXPaQQZwYXJlbnQSkQIKG1Jlc3RvcmVD",
            "ZXJ0aWZpY2F0ZUF1dGhvcml0eRJLLmdvb2dsZS5jbG91ZC5zZWN1cml0eS5w",
            "cml2YXRlY2EudjFiZXRhMS5SZXN0b3JlQ2VydGlmaWNhdGVBdXRob3JpdHlS",
            "ZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKFAYLT5JMC",
            "TCJHL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jZXJ0",
            "aWZpY2F0ZUF1dGhvcml0aWVzLyp9OnJlc3RvcmU6ASraQQRuYW1lykEpChRD",
            "ZXJ0aWZpY2F0ZUF1dGhvcml0eRIRT3BlcmF0aW9uTWV0YWRhdGESpgIKIlNj",
            "aGVkdWxlRGVsZXRlQ2VydGlmaWNhdGVBdXRob3JpdHkSUi5nb29nbGUuY2xv",
            "dWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuU2NoZWR1bGVEZWxldGVD",
            "ZXJ0aWZpY2F0ZUF1dGhvcml0eVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5p",
            "bmcuT3BlcmF0aW9uIowBgtPkkwJTIk4vdjFiZXRhMS97bmFtZT1wcm9qZWN0",
            "cy8qL2xvY2F0aW9ucy8qL2NlcnRpZmljYXRlQXV0aG9yaXRpZXMvKn06c2No",
            "ZWR1bGVEZWxldGU6ASraQQRuYW1lykEpChRDZXJ0aWZpY2F0ZUF1dGhvcml0",
            "eRIRT3BlcmF0aW9uTWV0YWRhdGESzgIKGlVwZGF0ZUNlcnRpZmljYXRlQXV0",
            "aG9yaXR5EkouZ29vZ2xlLmNsb3VkLnNlY3VyaXR5LnByaXZhdGVjYS52MWJl",
            "dGExLlVwZGF0ZUNlcnRpZmljYXRlQXV0aG9yaXR5UmVxdWVzdBodLmdvb2ds",
            "ZS5sb25ncnVubmluZy5PcGVyYXRpb24ixAGC0+STAm4yVS92MWJldGExL3tj",
            "ZXJ0aWZpY2F0ZV9hdXRob3JpdHkubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9u",
            "cy8qL2NlcnRpZmljYXRlQXV0aG9yaXRpZXMvKn06FWNlcnRpZmljYXRlX2F1",
            "dGhvcml0edpBIWNlcnRpZmljYXRlX2F1dGhvcml0eSx1cGRhdGVfbWFza8pB",
            "KQoUQ2VydGlmaWNhdGVBdXRob3JpdHkSEU9wZXJhdGlvbk1ldGFkYXRhEooD",
            "Ch9DcmVhdGVDZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0Ek8uZ29vZ2xlLmNs",
            "b3VkLnNlY3VyaXR5LnByaXZhdGVjYS52MWJldGExLkNyZWF0ZUNlcnRpZmlj",
            "YXRlUmV2b2NhdGlvbkxpc3RSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5n",
            "Lk9wZXJhdGlvbiL2AYLT5JMCeyJcL3YxYmV0YTEve3BhcmVudD1wcm9qZWN0",
            "cy8qL2xvY2F0aW9ucy8qL2NlcnRpZmljYXRlQXV0aG9yaXRpZXMvKn0vY2Vy",
            "dGlmaWNhdGVSZXZvY2F0aW9uTGlzdHM6G2NlcnRpZmljYXRlX3Jldm9jYXRp",
            "b25fbGlzdNpBQXBhcmVudCxjZXJ0aWZpY2F0ZV9yZXZvY2F0aW9uX2xpc3Qs",
            "Y2VydGlmaWNhdGVfcmV2b2NhdGlvbl9saXN0X2lkykEuChlDZXJ0aWZpY2F0",
            "ZVJldm9jYXRpb25MaXN0EhFPcGVyYXRpb25NZXRhZGF0YRKdAgocR2V0Q2Vy",
            "dGlmaWNhdGVSZXZvY2F0aW9uTGlzdBJMLmdvb2dsZS5jbG91ZC5zZWN1cml0",
            "eS5wcml2YXRlY2EudjFiZXRhMS5HZXRDZXJ0aWZpY2F0ZVJldm9jYXRpb25M",
            "aXN0UmVxdWVzdBpCLmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2Eu",
            "djFiZXRhMS5DZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0ImuC0+STAl4SXC92",
            "MWJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovY2VydGlmaWNh",
            "dGVBdXRob3JpdGllcy8qL2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3RzLyp9",
            "2kEEbmFtZRKwAgoeTGlzdENlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3RzEk4u",
            "Z29vZ2xlLmNsb3VkLnNlY3VyaXR5LnByaXZhdGVjYS52MWJldGExLkxpc3RD",
            "ZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0c1JlcXVlc3QaTy5nb29nbGUuY2xv",
            "dWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuTGlzdENlcnRpZmljYXRl",
            "UmV2b2NhdGlvbkxpc3RzUmVzcG9uc2UibYLT5JMCXhJcL3YxYmV0YTEve3Bh",
            "cmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NlcnRpZmljYXRlQXV0aG9y",
            "aXRpZXMvKn0vY2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdHPaQQZwYXJlbnQS",
            "jQMKH1VwZGF0ZUNlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3QSTy5nb29nbGUu",
            "Y2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuVXBkYXRlQ2VydGlm",
            "aWNhdGVSZXZvY2F0aW9uTGlzdFJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5p",
            "bmcuT3BlcmF0aW9uIvkBgtPkkwKXATJ4L3YxYmV0YTEve2NlcnRpZmljYXRl",
            "X3Jldm9jYXRpb25fbGlzdC5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyov",
            "Y2VydGlmaWNhdGVBdXRob3JpdGllcy8qL2NlcnRpZmljYXRlUmV2b2NhdGlv",
            "bkxpc3RzLyp9OhtjZXJ0aWZpY2F0ZV9yZXZvY2F0aW9uX2xpc3TaQSdjZXJ0",
            "aWZpY2F0ZV9yZXZvY2F0aW9uX2xpc3QsdXBkYXRlX21hc2vKQS4KGUNlcnRp",
            "ZmljYXRlUmV2b2NhdGlvbkxpc3QSEU9wZXJhdGlvbk1ldGFkYXRhEqECChRD",
            "cmVhdGVSZXVzYWJsZUNvbmZpZxJELmdvb2dsZS5jbG91ZC5zZWN1cml0eS5w",
            "cml2YXRlY2EudjFiZXRhMS5DcmVhdGVSZXVzYWJsZUNvbmZpZ1JlcXVlc3Qa",
            "HS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIqMBgtPkkwJLIjgvdjFi",
            "ZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L3JldXNhYmxl",
            "Q29uZmlnczoPcmV1c2FibGVfY29uZmln2kEpcGFyZW50LHJldXNhYmxlX2Nv",
            "bmZpZyxyZXVzYWJsZV9jb25maWdfaWTKQSMKDlJldXNhYmxlQ29uZmlnEhFP",
            "cGVyYXRpb25NZXRhZGF0YRKaAgoURGVsZXRlUmV1c2FibGVDb25maWcSRC5n",
            "b29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYxYmV0YTEuRGVsZXRl",
            "UmV1c2FibGVDb25maWdSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9w",
            "ZXJhdGlvbiKcAYLT5JMCOio4L3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9s",
            "b2NhdGlvbnMvKi9yZXVzYWJsZUNvbmZpZ3MvKn3aQQRuYW1lykFSChVnb29n",
            "bGUucHJvdG9idWYuRW1wdHkSOWdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2",
            "YXRlY2EudjFiZXRhMS5PcGVyYXRpb25NZXRhZGF0YRLYAQoRR2V0UmV1c2Fi",
            "bGVDb25maWcSQS5nb29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNhLnYx",
            "YmV0YTEuR2V0UmV1c2FibGVDb25maWdSZXF1ZXN0GjcuZ29vZ2xlLmNsb3Vk",
            "LnNlY3VyaXR5LnByaXZhdGVjYS52MWJldGExLlJldXNhYmxlQ29uZmlnIkeC",
            "0+STAjoSOC92MWJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyov",
            "cmV1c2FibGVDb25maWdzLyp92kEEbmFtZRLrAQoTTGlzdFJldXNhYmxlQ29u",
            "ZmlncxJDLmdvb2dsZS5jbG91ZC5zZWN1cml0eS5wcml2YXRlY2EudjFiZXRh",
            "MS5MaXN0UmV1c2FibGVDb25maWdzUmVxdWVzdBpELmdvb2dsZS5jbG91ZC5z",
            "ZWN1cml0eS5wcml2YXRlY2EudjFiZXRhMS5MaXN0UmV1c2FibGVDb25maWdz",
            "UmVzcG9uc2UiSYLT5JMCOhI4L3YxYmV0YTEve3BhcmVudD1wcm9qZWN0cy8q",
            "L2xvY2F0aW9ucy8qfS9yZXVzYWJsZUNvbmZpZ3PaQQZwYXJlbnQSowIKFFVw",
            "ZGF0ZVJldXNhYmxlQ29uZmlnEkQuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5LnBy",
            "aXZhdGVjYS52MWJldGExLlVwZGF0ZVJldXNhYmxlQ29uZmlnUmVxdWVzdBod",
            "Lmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ipQGC0+STAlsySC92MWJl",
            "dGExL3tyZXVzYWJsZV9jb25maWcubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9u",
            "cy8qL3JldXNhYmxlQ29uZmlncy8qfToPcmV1c2FibGVfY29uZmln2kEbcmV1",
            "c2FibGVfY29uZmlnLHVwZGF0ZV9tYXNrykEjCg5SZXVzYWJsZUNvbmZpZxIR",
            "T3BlcmF0aW9uTWV0YWRhdGEaTMpBGHByaXZhdGVjYS5nb29nbGVhcGlzLmNv",
            "bdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxh",
            "dGZvcm1CvgEKK2NvbS5nb29nbGUuY2xvdWQuc2VjdXJpdHkucHJpdmF0ZWNh",
            "LnYxYmV0YTFCDlByaXZhdGVDYVByb3RvUAFaUGdvb2dsZS5nb2xhbmcub3Jn",
            "L2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvc2VjdXJpdHkvcHJpdmF0ZWNh",
            "L3YxYmV0YTE7cHJpdmF0ZWNh+AEBqgInR29vZ2xlLkNsb3VkLlNlY3VyaXR5",
            "LlByaXZhdGVDQS5WMUJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Security.PrivateCA.V1Beta1.ResourcesReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateCertificateRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateCertificateRequest.Parser, new[]{ "Parent", "CertificateId", "Certificate", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.GetCertificateRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.GetCertificateRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificatesRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificatesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificatesResponse), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificatesResponse.Parser, new[]{ "Certificates", "NextPageToken", "Unreachable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.RevokeCertificateRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.RevokeCertificateRequest.Parser, new[]{ "Name", "Reason", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateCertificateRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateCertificateRequest.Parser, new[]{ "Certificate", "UpdateMask", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ActivateCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.ActivateCertificateAuthorityRequest.Parser, new[]{ "Name", "PemCaCertificate", "SubordinateConfig", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateCertificateAuthorityRequest.Parser, new[]{ "Parent", "CertificateAuthorityId", "CertificateAuthority", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.DisableCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.DisableCertificateAuthorityRequest.Parser, new[]{ "Name", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.EnableCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.EnableCertificateAuthorityRequest.Parser, new[]{ "Name", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.FetchCertificateAuthorityCsrRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.FetchCertificateAuthorityCsrRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.FetchCertificateAuthorityCsrResponse), global::Google.Cloud.Security.PrivateCA.V1Beta1.FetchCertificateAuthorityCsrResponse.Parser, new[]{ "PemCsr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.GetCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.GetCertificateAuthorityRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateAuthoritiesRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateAuthoritiesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateAuthoritiesResponse), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateAuthoritiesResponse.Parser, new[]{ "CertificateAuthorities", "NextPageToken", "Unreachable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.RestoreCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.RestoreCertificateAuthorityRequest.Parser, new[]{ "Name", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ScheduleDeleteCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.ScheduleDeleteCertificateAuthorityRequest.Parser, new[]{ "Name", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateCertificateAuthorityRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateCertificateAuthorityRequest.Parser, new[]{ "CertificateAuthority", "UpdateMask", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateCertificateRevocationListRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateCertificateRevocationListRequest.Parser, new[]{ "Parent", "CertificateRevocationListId", "CertificateRevocationList", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.GetCertificateRevocationListRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.GetCertificateRevocationListRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateRevocationListsRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateRevocationListsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateRevocationListsResponse), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListCertificateRevocationListsResponse.Parser, new[]{ "CertificateRevocationLists", "NextPageToken", "Unreachable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateCertificateRevocationListRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateCertificateRevocationListRequest.Parser, new[]{ "CertificateRevocationList", "UpdateMask", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateReusableConfigRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.CreateReusableConfigRequest.Parser, new[]{ "Parent", "ReusableConfigId", "ReusableConfig", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.DeleteReusableConfigRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.DeleteReusableConfigRequest.Parser, new[]{ "Name", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.GetReusableConfigRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.GetReusableConfigRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListReusableConfigsRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListReusableConfigsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.ListReusableConfigsResponse), global::Google.Cloud.Security.PrivateCA.V1Beta1.ListReusableConfigsResponse.Parser, new[]{ "ReusableConfigs", "NextPageToken", "Unreachable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateReusableConfigRequest), global::Google.Cloud.Security.PrivateCA.V1Beta1.UpdateReusableConfigRequest.Parser, new[]{ "ReusableConfig", "UpdateMask", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Security.PrivateCA.V1Beta1.OperationMetadata), global::Google.Cloud.Security.PrivateCA.V1Beta1.OperationMetadata.Parser, new[]{ "CreateTime", "EndTime", "Target", "Verb", "StatusMessage", "RequestedCancellation", "ApiVersion" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for [CertificateAuthorityService.CreateCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificate].
  /// </summary>
  public sealed partial class CreateCertificateRequest : pb::IMessage<CreateCertificateRequest> {
    private static readonly pb::MessageParser<CreateCertificateRequest> _parser = new pb::MessageParser<CreateCertificateRequest>(() => new CreateCertificateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCertificateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateRequest(CreateCertificateRequest other) : this() {
      parent_ = other.parent_;
      certificateId_ = other.certificateId_;
      certificate_ = other.certificate_ != null ? other.certificate_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateRequest Clone() {
      return new CreateCertificateRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location and [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
    /// associated with the [Certificate][google.cloud.security.privateca.v1beta1.Certificate], in the format
    /// `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate_id" field.</summary>
    public const int CertificateIdFieldNumber = 2;
    private string certificateId_ = "";
    /// <summary>
    /// Optional. It must be unique within a location and match the regular
    /// expression `[a-zA-Z0-9-]{1,63}`. This field is required when using a
    /// [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the Enterprise [CertificateAuthority.Tier][google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier],
    /// but is optional and its value is ignored otherwise.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CertificateId {
      get { return certificateId_; }
      set {
        certificateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate" field.</summary>
    public const int CertificateFieldNumber = 3;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate certificate_;
    /// <summary>
    /// Required. A [Certificate][google.cloud.security.privateca.v1beta1.Certificate] with initial field values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate Certificate {
      get { return certificate_; }
      set {
        certificate_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCertificateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCertificateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (CertificateId != other.CertificateId) return false;
      if (!object.Equals(Certificate, other.Certificate)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (CertificateId.Length != 0) hash ^= CertificateId.GetHashCode();
      if (certificate_ != null) hash ^= Certificate.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (CertificateId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CertificateId);
      }
      if (certificate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Certificate);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (CertificateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CertificateId);
      }
      if (certificate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Certificate);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCertificateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.CertificateId.Length != 0) {
        CertificateId = other.CertificateId;
      }
      if (other.certificate_ != null) {
        if (certificate_ == null) {
          Certificate = new global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate();
        }
        Certificate.MergeFrom(other.Certificate);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            CertificateId = input.ReadString();
            break;
          }
          case 26: {
            if (certificate_ == null) {
              Certificate = new global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate();
            }
            input.ReadMessage(Certificate);
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.GetCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificate].
  /// </summary>
  public sealed partial class GetCertificateRequest : pb::IMessage<GetCertificateRequest> {
    private static readonly pb::MessageParser<GetCertificateRequest> _parser = new pb::MessageParser<GetCertificateRequest>(() => new GetCertificateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCertificateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateRequest(GetCertificateRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateRequest Clone() {
      return new GetCertificateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The [name][google.cloud.security.privateca.v1beta1.Certificate.name] of the [Certificate][google.cloud.security.privateca.v1beta1.Certificate] to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCertificateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCertificateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCertificateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for [CertificateAuthorityService.ListCertificates][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificates].
  /// </summary>
  public sealed partial class ListCertificatesRequest : pb::IMessage<ListCertificatesRequest> {
    private static readonly pb::MessageParser<ListCertificatesRequest> _parser = new pb::MessageParser<ListCertificatesRequest>(() => new ListCertificatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCertificatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificatesRequest(ListCertificatesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificatesRequest Clone() {
      return new ListCertificatesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location associated with the
    /// [Certificates][google.cloud.security.privateca.v1beta1.Certificate], in the format
    /// `projects/*/locations/*/certificateauthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. Limit on the number of
    /// [Certificates][google.cloud.security.privateca.v1beta1.Certificate] to include in the
    /// response. Further [Certificates][google.cloud.security.privateca.v1beta1.Certificate] can subsequently be obtained
    /// by including the
    /// [ListCertificatesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token] in a subsequent
    /// request. If unspecified, the server will pick an appropriate default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. Pagination token, returned earlier via
    /// [ListCertificatesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. Only include resources that match the filter in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Optional. Specify how the results should be sorted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCertificatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCertificatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCertificatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for [CertificateAuthorityService.ListCertificates][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificates].
  /// </summary>
  public sealed partial class ListCertificatesResponse : pb::IMessage<ListCertificatesResponse> {
    private static readonly pb::MessageParser<ListCertificatesResponse> _parser = new pb::MessageParser<ListCertificatesResponse>(() => new ListCertificatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCertificatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificatesResponse(ListCertificatesResponse other) : this() {
      certificates_ = other.certificates_.Clone();
      nextPageToken_ = other.nextPageToken_;
      unreachable_ = other.unreachable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificatesResponse Clone() {
      return new ListCertificatesResponse(this);
    }

    /// <summary>Field number for the "certificates" field.</summary>
    public const int CertificatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate> _repeated_certificates_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate> certificates_ = new pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate>();
    /// <summary>
    /// The list of [Certificates][google.cloud.security.privateca.v1beta1.Certificate].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate> Certificates {
      get { return certificates_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token to retrieve next page of results. Pass this value in
    /// [ListCertificatesRequest.next_page_token][] to retrieve the
    /// next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of locations (e.g. "us-west1") that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCertificatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCertificatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!certificates_.Equals(other.certificates_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= certificates_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      certificates_.WriteTo(output, _repeated_certificates_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += certificates_.CalculateSize(_repeated_certificates_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCertificatesResponse other) {
      if (other == null) {
        return;
      }
      certificates_.Add(other.certificates_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      unreachable_.Add(other.unreachable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            certificates_.AddEntriesFrom(input, _repeated_certificates_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.RevokeCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RevokeCertificate].
  /// </summary>
  public sealed partial class RevokeCertificateRequest : pb::IMessage<RevokeCertificateRequest> {
    private static readonly pb::MessageParser<RevokeCertificateRequest> _parser = new pb::MessageParser<RevokeCertificateRequest>(() => new RevokeCertificateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevokeCertificateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeCertificateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeCertificateRequest(RevokeCertificateRequest other) : this() {
      name_ = other.name_;
      reason_ = other.reason_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeCertificateRequest Clone() {
      return new RevokeCertificateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] in the
    /// format `projects/*/locations/*/certificateAuthorities/*/certificates/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason reason_ = global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason.Unspecified;
    /// <summary>
    /// Required. The [RevocationReason][google.cloud.security.privateca.v1beta1.RevocationReason] for revoking this certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 3;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RevokeCertificateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevokeCertificateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Reason != other.Reason) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Reason != global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason.Unspecified) hash ^= Reason.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Reason != global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Reason);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Reason != global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevokeCertificateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Reason != global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason.Unspecified) {
        Reason = other.Reason;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Reason = (global::Google.Cloud.Security.PrivateCA.V1Beta1.RevocationReason) input.ReadEnum();
            break;
          }
          case 26: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for [CertificateAuthorityService.UpdateCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificate].
  /// </summary>
  public sealed partial class UpdateCertificateRequest : pb::IMessage<UpdateCertificateRequest> {
    private static readonly pb::MessageParser<UpdateCertificateRequest> _parser = new pb::MessageParser<UpdateCertificateRequest>(() => new UpdateCertificateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCertificateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateRequest(UpdateCertificateRequest other) : this() {
      certificate_ = other.certificate_ != null ? other.certificate_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateRequest Clone() {
      return new UpdateCertificateRequest(this);
    }

    /// <summary>Field number for the "certificate" field.</summary>
    public const int CertificateFieldNumber = 1;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate certificate_;
    /// <summary>
    /// Required. [Certificate][google.cloud.security.privateca.v1beta1.Certificate] with updated values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate Certificate {
      get { return certificate_; }
      set {
        certificate_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. A list of fields to be updated in this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 3;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCertificateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCertificateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Certificate, other.Certificate)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (certificate_ != null) hash ^= Certificate.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (certificate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Certificate);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (certificate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Certificate);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCertificateRequest other) {
      if (other == null) {
        return;
      }
      if (other.certificate_ != null) {
        if (certificate_ == null) {
          Certificate = new global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate();
        }
        Certificate.MergeFrom(other.Certificate);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (certificate_ == null) {
              Certificate = new global::Google.Cloud.Security.PrivateCA.V1Beta1.Certificate();
            }
            input.ReadMessage(Certificate);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.ActivateCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ActivateCertificateAuthority].
  /// </summary>
  public sealed partial class ActivateCertificateAuthorityRequest : pb::IMessage<ActivateCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<ActivateCertificateAuthorityRequest> _parser = new pb::MessageParser<ActivateCertificateAuthorityRequest>(() => new ActivateCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivateCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateCertificateAuthorityRequest(ActivateCertificateAuthorityRequest other) : this() {
      name_ = other.name_;
      pemCaCertificate_ = other.pemCaCertificate_;
      subordinateConfig_ = other.subordinateConfig_ != null ? other.subordinateConfig_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateCertificateAuthorityRequest Clone() {
      return new ActivateCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
    /// format `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pem_ca_certificate" field.</summary>
    public const int PemCaCertificateFieldNumber = 2;
    private string pemCaCertificate_ = "";
    /// <summary>
    /// Required. The signed CA certificate issued from
    /// [FetchCertificateAuthorityCsrResponse.pem_csr][google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse.pem_csr].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PemCaCertificate {
      get { return pemCaCertificate_; }
      set {
        pemCaCertificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subordinate_config" field.</summary>
    public const int SubordinateConfigFieldNumber = 3;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.SubordinateConfig subordinateConfig_;
    /// <summary>
    /// Required. Must include information about the issuer of 'pem_ca_certificate', and any
    /// further issuers until the self-signed CA.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.SubordinateConfig SubordinateConfig {
      get { return subordinateConfig_; }
      set {
        subordinateConfig_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivateCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivateCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PemCaCertificate != other.PemCaCertificate) return false;
      if (!object.Equals(SubordinateConfig, other.SubordinateConfig)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PemCaCertificate.Length != 0) hash ^= PemCaCertificate.GetHashCode();
      if (subordinateConfig_ != null) hash ^= SubordinateConfig.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PemCaCertificate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PemCaCertificate);
      }
      if (subordinateConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubordinateConfig);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PemCaCertificate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PemCaCertificate);
      }
      if (subordinateConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubordinateConfig);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivateCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PemCaCertificate.Length != 0) {
        PemCaCertificate = other.PemCaCertificate;
      }
      if (other.subordinateConfig_ != null) {
        if (subordinateConfig_ == null) {
          SubordinateConfig = new global::Google.Cloud.Security.PrivateCA.V1Beta1.SubordinateConfig();
        }
        SubordinateConfig.MergeFrom(other.SubordinateConfig);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            PemCaCertificate = input.ReadString();
            break;
          }
          case 26: {
            if (subordinateConfig_ == null) {
              SubordinateConfig = new global::Google.Cloud.Security.PrivateCA.V1Beta1.SubordinateConfig();
            }
            input.ReadMessage(SubordinateConfig);
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.CreateCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificateAuthority].
  /// </summary>
  public sealed partial class CreateCertificateAuthorityRequest : pb::IMessage<CreateCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<CreateCertificateAuthorityRequest> _parser = new pb::MessageParser<CreateCertificateAuthorityRequest>(() => new CreateCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateAuthorityRequest(CreateCertificateAuthorityRequest other) : this() {
      parent_ = other.parent_;
      certificateAuthorityId_ = other.certificateAuthorityId_;
      certificateAuthority_ = other.certificateAuthority_ != null ? other.certificateAuthority_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateAuthorityRequest Clone() {
      return new CreateCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location associated with the
    /// [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority], in the format
    /// `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate_authority_id" field.</summary>
    public const int CertificateAuthorityIdFieldNumber = 2;
    private string certificateAuthorityId_ = "";
    /// <summary>
    /// Required. It must be unique within a location and match the regular
    /// expression `[a-zA-Z0-9-]{1,63}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CertificateAuthorityId {
      get { return certificateAuthorityId_; }
      set {
        certificateAuthorityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate_authority" field.</summary>
    public const int CertificateAuthorityFieldNumber = 3;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority certificateAuthority_;
    /// <summary>
    /// Required. A [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] with initial field values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority CertificateAuthority {
      get { return certificateAuthority_; }
      set {
        certificateAuthority_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (CertificateAuthorityId != other.CertificateAuthorityId) return false;
      if (!object.Equals(CertificateAuthority, other.CertificateAuthority)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (CertificateAuthorityId.Length != 0) hash ^= CertificateAuthorityId.GetHashCode();
      if (certificateAuthority_ != null) hash ^= CertificateAuthority.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (CertificateAuthorityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CertificateAuthorityId);
      }
      if (certificateAuthority_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CertificateAuthority);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (CertificateAuthorityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CertificateAuthorityId);
      }
      if (certificateAuthority_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertificateAuthority);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.CertificateAuthorityId.Length != 0) {
        CertificateAuthorityId = other.CertificateAuthorityId;
      }
      if (other.certificateAuthority_ != null) {
        if (certificateAuthority_ == null) {
          CertificateAuthority = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority();
        }
        CertificateAuthority.MergeFrom(other.CertificateAuthority);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            CertificateAuthorityId = input.ReadString();
            break;
          }
          case 26: {
            if (certificateAuthority_ == null) {
              CertificateAuthority = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority();
            }
            input.ReadMessage(CertificateAuthority);
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.DisableCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.DisableCertificateAuthority].
  /// </summary>
  public sealed partial class DisableCertificateAuthorityRequest : pb::IMessage<DisableCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<DisableCertificateAuthorityRequest> _parser = new pb::MessageParser<DisableCertificateAuthorityRequest>(() => new DisableCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisableCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableCertificateAuthorityRequest(DisableCertificateAuthorityRequest other) : this() {
      name_ = other.name_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableCertificateAuthorityRequest Clone() {
      return new DisableCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
    /// format `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisableCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisableCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisableCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.EnableCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.EnableCertificateAuthority].
  /// </summary>
  public sealed partial class EnableCertificateAuthorityRequest : pb::IMessage<EnableCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<EnableCertificateAuthorityRequest> _parser = new pb::MessageParser<EnableCertificateAuthorityRequest>(() => new EnableCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnableCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableCertificateAuthorityRequest(EnableCertificateAuthorityRequest other) : this() {
      name_ = other.name_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableCertificateAuthorityRequest Clone() {
      return new EnableCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
    /// format `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnableCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnableCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnableCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.FetchCertificateAuthorityCsr][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsr].
  /// </summary>
  public sealed partial class FetchCertificateAuthorityCsrRequest : pb::IMessage<FetchCertificateAuthorityCsrRequest> {
    private static readonly pb::MessageParser<FetchCertificateAuthorityCsrRequest> _parser = new pb::MessageParser<FetchCertificateAuthorityCsrRequest>(() => new FetchCertificateAuthorityCsrRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchCertificateAuthorityCsrRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchCertificateAuthorityCsrRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchCertificateAuthorityCsrRequest(FetchCertificateAuthorityCsrRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchCertificateAuthorityCsrRequest Clone() {
      return new FetchCertificateAuthorityCsrRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
    /// format `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchCertificateAuthorityCsrRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchCertificateAuthorityCsrRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchCertificateAuthorityCsrRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [CertificateAuthorityService.FetchCertificateAuthorityCsr][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsr].
  /// </summary>
  public sealed partial class FetchCertificateAuthorityCsrResponse : pb::IMessage<FetchCertificateAuthorityCsrResponse> {
    private static readonly pb::MessageParser<FetchCertificateAuthorityCsrResponse> _parser = new pb::MessageParser<FetchCertificateAuthorityCsrResponse>(() => new FetchCertificateAuthorityCsrResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchCertificateAuthorityCsrResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchCertificateAuthorityCsrResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchCertificateAuthorityCsrResponse(FetchCertificateAuthorityCsrResponse other) : this() {
      pemCsr_ = other.pemCsr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchCertificateAuthorityCsrResponse Clone() {
      return new FetchCertificateAuthorityCsrResponse(this);
    }

    /// <summary>Field number for the "pem_csr" field.</summary>
    public const int PemCsrFieldNumber = 1;
    private string pemCsr_ = "";
    /// <summary>
    /// Output only. The PEM-encoded signed certificate signing request (CSR).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PemCsr {
      get { return pemCsr_; }
      set {
        pemCsr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchCertificateAuthorityCsrResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchCertificateAuthorityCsrResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PemCsr != other.PemCsr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PemCsr.Length != 0) hash ^= PemCsr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PemCsr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PemCsr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PemCsr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PemCsr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchCertificateAuthorityCsrResponse other) {
      if (other == null) {
        return;
      }
      if (other.PemCsr.Length != 0) {
        PemCsr = other.PemCsr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PemCsr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for [CertificateAuthorityService.GetCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateAuthority].
  /// </summary>
  public sealed partial class GetCertificateAuthorityRequest : pb::IMessage<GetCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<GetCertificateAuthorityRequest> _parser = new pb::MessageParser<GetCertificateAuthorityRequest>(() => new GetCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateAuthorityRequest(GetCertificateAuthorityRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateAuthorityRequest Clone() {
      return new GetCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The [name][google.cloud.security.privateca.v1beta1.CertificateAuthority.name] of the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] to
    /// get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.ListCertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateAuthorities].
  /// </summary>
  public sealed partial class ListCertificateAuthoritiesRequest : pb::IMessage<ListCertificateAuthoritiesRequest> {
    private static readonly pb::MessageParser<ListCertificateAuthoritiesRequest> _parser = new pb::MessageParser<ListCertificateAuthoritiesRequest>(() => new ListCertificateAuthoritiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCertificateAuthoritiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateAuthoritiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateAuthoritiesRequest(ListCertificateAuthoritiesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateAuthoritiesRequest Clone() {
      return new ListCertificateAuthoritiesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location associated with the
    /// [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority], in the format
    /// `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. Limit on the number of [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority] to
    /// include in the response.
    /// Further [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority] can subsequently be
    /// obtained by including the
    /// [ListCertificateAuthoritiesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token] in a subsequent
    /// request. If unspecified, the server will pick an appropriate default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. Pagination token, returned earlier via
    /// [ListCertificateAuthoritiesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. Only include resources that match the filter in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Optional. Specify how the results should be sorted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCertificateAuthoritiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCertificateAuthoritiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCertificateAuthoritiesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [CertificateAuthorityService.ListCertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateAuthorities].
  /// </summary>
  public sealed partial class ListCertificateAuthoritiesResponse : pb::IMessage<ListCertificateAuthoritiesResponse> {
    private static readonly pb::MessageParser<ListCertificateAuthoritiesResponse> _parser = new pb::MessageParser<ListCertificateAuthoritiesResponse>(() => new ListCertificateAuthoritiesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCertificateAuthoritiesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateAuthoritiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateAuthoritiesResponse(ListCertificateAuthoritiesResponse other) : this() {
      certificateAuthorities_ = other.certificateAuthorities_.Clone();
      nextPageToken_ = other.nextPageToken_;
      unreachable_ = other.unreachable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateAuthoritiesResponse Clone() {
      return new ListCertificateAuthoritiesResponse(this);
    }

    /// <summary>Field number for the "certificate_authorities" field.</summary>
    public const int CertificateAuthoritiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority> _repeated_certificateAuthorities_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority> certificateAuthorities_ = new pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority>();
    /// <summary>
    /// The list of [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority> CertificateAuthorities {
      get { return certificateAuthorities_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token to retrieve next page of results. Pass this value in
    /// [ListCertificateAuthoritiesRequest.next_page_token][] to retrieve the next
    /// page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of locations (e.g. "us-west1") that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCertificateAuthoritiesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCertificateAuthoritiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!certificateAuthorities_.Equals(other.certificateAuthorities_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= certificateAuthorities_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      certificateAuthorities_.WriteTo(output, _repeated_certificateAuthorities_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += certificateAuthorities_.CalculateSize(_repeated_certificateAuthorities_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCertificateAuthoritiesResponse other) {
      if (other == null) {
        return;
      }
      certificateAuthorities_.Add(other.certificateAuthorities_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      unreachable_.Add(other.unreachable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            certificateAuthorities_.AddEntriesFrom(input, _repeated_certificateAuthorities_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.RestoreCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RestoreCertificateAuthority].
  /// </summary>
  public sealed partial class RestoreCertificateAuthorityRequest : pb::IMessage<RestoreCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<RestoreCertificateAuthorityRequest> _parser = new pb::MessageParser<RestoreCertificateAuthorityRequest>(() => new RestoreCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreCertificateAuthorityRequest(RestoreCertificateAuthorityRequest other) : this() {
      name_ = other.name_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreCertificateAuthorityRequest Clone() {
      return new RestoreCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
    /// format `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.ScheduleDeleteCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ScheduleDeleteCertificateAuthority].
  /// </summary>
  public sealed partial class ScheduleDeleteCertificateAuthorityRequest : pb::IMessage<ScheduleDeleteCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<ScheduleDeleteCertificateAuthorityRequest> _parser = new pb::MessageParser<ScheduleDeleteCertificateAuthorityRequest>(() => new ScheduleDeleteCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleDeleteCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleDeleteCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleDeleteCertificateAuthorityRequest(ScheduleDeleteCertificateAuthorityRequest other) : this() {
      name_ = other.name_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleDeleteCertificateAuthorityRequest Clone() {
      return new ScheduleDeleteCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
    /// format `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleDeleteCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleDeleteCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleDeleteCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.UpdateCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateAuthority].
  /// </summary>
  public sealed partial class UpdateCertificateAuthorityRequest : pb::IMessage<UpdateCertificateAuthorityRequest> {
    private static readonly pb::MessageParser<UpdateCertificateAuthorityRequest> _parser = new pb::MessageParser<UpdateCertificateAuthorityRequest>(() => new UpdateCertificateAuthorityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCertificateAuthorityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateAuthorityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateAuthorityRequest(UpdateCertificateAuthorityRequest other) : this() {
      certificateAuthority_ = other.certificateAuthority_ != null ? other.certificateAuthority_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateAuthorityRequest Clone() {
      return new UpdateCertificateAuthorityRequest(this);
    }

    /// <summary>Field number for the "certificate_authority" field.</summary>
    public const int CertificateAuthorityFieldNumber = 1;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority certificateAuthority_;
    /// <summary>
    /// Required. [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] with updated values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority CertificateAuthority {
      get { return certificateAuthority_; }
      set {
        certificateAuthority_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. A list of fields to be updated in this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 3;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCertificateAuthorityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCertificateAuthorityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CertificateAuthority, other.CertificateAuthority)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (certificateAuthority_ != null) hash ^= CertificateAuthority.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (certificateAuthority_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CertificateAuthority);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (certificateAuthority_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertificateAuthority);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCertificateAuthorityRequest other) {
      if (other == null) {
        return;
      }
      if (other.certificateAuthority_ != null) {
        if (certificateAuthority_ == null) {
          CertificateAuthority = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority();
        }
        CertificateAuthority.MergeFrom(other.CertificateAuthority);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (certificateAuthority_ == null) {
              CertificateAuthority = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateAuthority();
            }
            input.ReadMessage(CertificateAuthority);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.CreateCertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificateRevocationList].
  /// </summary>
  public sealed partial class CreateCertificateRevocationListRequest : pb::IMessage<CreateCertificateRevocationListRequest> {
    private static readonly pb::MessageParser<CreateCertificateRevocationListRequest> _parser = new pb::MessageParser<CreateCertificateRevocationListRequest>(() => new CreateCertificateRevocationListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCertificateRevocationListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateRevocationListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateRevocationListRequest(CreateCertificateRevocationListRequest other) : this() {
      parent_ = other.parent_;
      certificateRevocationListId_ = other.certificateRevocationListId_;
      certificateRevocationList_ = other.certificateRevocationList_ != null ? other.certificateRevocationList_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCertificateRevocationListRequest Clone() {
      return new CreateCertificateRevocationListRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location and [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
    /// associated with the [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList], in the format
    /// `projects/*/locations/*/certificateAuthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate_revocation_list_id" field.</summary>
    public const int CertificateRevocationListIdFieldNumber = 2;
    private string certificateRevocationListId_ = "";
    /// <summary>
    /// Required. It must be unique within a location and match the regular expression
    /// `[a-zA-Z0-9-]{1,63}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CertificateRevocationListId {
      get { return certificateRevocationListId_; }
      set {
        certificateRevocationListId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate_revocation_list" field.</summary>
    public const int CertificateRevocationListFieldNumber = 3;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList certificateRevocationList_;
    /// <summary>
    /// Required. A [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] with initial field values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList CertificateRevocationList {
      get { return certificateRevocationList_; }
      set {
        certificateRevocationList_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCertificateRevocationListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCertificateRevocationListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (CertificateRevocationListId != other.CertificateRevocationListId) return false;
      if (!object.Equals(CertificateRevocationList, other.CertificateRevocationList)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (CertificateRevocationListId.Length != 0) hash ^= CertificateRevocationListId.GetHashCode();
      if (certificateRevocationList_ != null) hash ^= CertificateRevocationList.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (CertificateRevocationListId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CertificateRevocationListId);
      }
      if (certificateRevocationList_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CertificateRevocationList);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (CertificateRevocationListId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CertificateRevocationListId);
      }
      if (certificateRevocationList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertificateRevocationList);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCertificateRevocationListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.CertificateRevocationListId.Length != 0) {
        CertificateRevocationListId = other.CertificateRevocationListId;
      }
      if (other.certificateRevocationList_ != null) {
        if (certificateRevocationList_ == null) {
          CertificateRevocationList = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList();
        }
        CertificateRevocationList.MergeFrom(other.CertificateRevocationList);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            CertificateRevocationListId = input.ReadString();
            break;
          }
          case 26: {
            if (certificateRevocationList_ == null) {
              CertificateRevocationList = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList();
            }
            input.ReadMessage(CertificateRevocationList);
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.GetCertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateRevocationList].
  /// </summary>
  public sealed partial class GetCertificateRevocationListRequest : pb::IMessage<GetCertificateRevocationListRequest> {
    private static readonly pb::MessageParser<GetCertificateRevocationListRequest> _parser = new pb::MessageParser<GetCertificateRevocationListRequest>(() => new GetCertificateRevocationListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCertificateRevocationListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateRevocationListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateRevocationListRequest(GetCertificateRevocationListRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCertificateRevocationListRequest Clone() {
      return new GetCertificateRevocationListRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The [name][google.cloud.security.privateca.v1beta1.CertificateRevocationList.name] of the
    /// [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCertificateRevocationListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCertificateRevocationListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCertificateRevocationListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.ListCertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateRevocationLists].
  /// </summary>
  public sealed partial class ListCertificateRevocationListsRequest : pb::IMessage<ListCertificateRevocationListsRequest> {
    private static readonly pb::MessageParser<ListCertificateRevocationListsRequest> _parser = new pb::MessageParser<ListCertificateRevocationListsRequest>(() => new ListCertificateRevocationListsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCertificateRevocationListsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateRevocationListsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateRevocationListsRequest(ListCertificateRevocationListsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateRevocationListsRequest Clone() {
      return new ListCertificateRevocationListsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location associated with the
    /// [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList], in the format
    /// `projects/*/locations/*/certificateauthorities/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. Limit on the number of
    /// [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList] to include in the
    /// response. Further [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList]
    /// can subsequently be obtained by including the
    /// [ListCertificateRevocationListsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token] in a subsequent
    /// request. If unspecified, the server will pick an appropriate default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. Pagination token, returned earlier via
    /// [ListCertificateRevocationListsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. Only include resources that match the filter in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Optional. Specify how the results should be sorted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCertificateRevocationListsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCertificateRevocationListsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCertificateRevocationListsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [CertificateAuthorityService.ListCertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateRevocationLists].
  /// </summary>
  public sealed partial class ListCertificateRevocationListsResponse : pb::IMessage<ListCertificateRevocationListsResponse> {
    private static readonly pb::MessageParser<ListCertificateRevocationListsResponse> _parser = new pb::MessageParser<ListCertificateRevocationListsResponse>(() => new ListCertificateRevocationListsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCertificateRevocationListsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateRevocationListsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateRevocationListsResponse(ListCertificateRevocationListsResponse other) : this() {
      certificateRevocationLists_ = other.certificateRevocationLists_.Clone();
      nextPageToken_ = other.nextPageToken_;
      unreachable_ = other.unreachable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCertificateRevocationListsResponse Clone() {
      return new ListCertificateRevocationListsResponse(this);
    }

    /// <summary>Field number for the "certificate_revocation_lists" field.</summary>
    public const int CertificateRevocationListsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList> _repeated_certificateRevocationLists_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList> certificateRevocationLists_ = new pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList>();
    /// <summary>
    /// The list of [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList> CertificateRevocationLists {
      get { return certificateRevocationLists_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token to retrieve next page of results. Pass this value in
    /// [ListCertificateRevocationListsRequest.next_page_token][] to retrieve the
    /// next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of locations (e.g. "us-west1") that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCertificateRevocationListsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCertificateRevocationListsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!certificateRevocationLists_.Equals(other.certificateRevocationLists_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= certificateRevocationLists_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      certificateRevocationLists_.WriteTo(output, _repeated_certificateRevocationLists_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += certificateRevocationLists_.CalculateSize(_repeated_certificateRevocationLists_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCertificateRevocationListsResponse other) {
      if (other == null) {
        return;
      }
      certificateRevocationLists_.Add(other.certificateRevocationLists_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      unreachable_.Add(other.unreachable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            certificateRevocationLists_.AddEntriesFrom(input, _repeated_certificateRevocationLists_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.UpdateCertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateRevocationList].
  /// </summary>
  public sealed partial class UpdateCertificateRevocationListRequest : pb::IMessage<UpdateCertificateRevocationListRequest> {
    private static readonly pb::MessageParser<UpdateCertificateRevocationListRequest> _parser = new pb::MessageParser<UpdateCertificateRevocationListRequest>(() => new UpdateCertificateRevocationListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCertificateRevocationListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateRevocationListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateRevocationListRequest(UpdateCertificateRevocationListRequest other) : this() {
      certificateRevocationList_ = other.certificateRevocationList_ != null ? other.certificateRevocationList_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCertificateRevocationListRequest Clone() {
      return new UpdateCertificateRevocationListRequest(this);
    }

    /// <summary>Field number for the "certificate_revocation_list" field.</summary>
    public const int CertificateRevocationListFieldNumber = 1;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList certificateRevocationList_;
    /// <summary>
    /// Required. [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] with updated values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList CertificateRevocationList {
      get { return certificateRevocationList_; }
      set {
        certificateRevocationList_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. A list of fields to be updated in this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 3;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCertificateRevocationListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCertificateRevocationListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CertificateRevocationList, other.CertificateRevocationList)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (certificateRevocationList_ != null) hash ^= CertificateRevocationList.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (certificateRevocationList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CertificateRevocationList);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (certificateRevocationList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertificateRevocationList);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCertificateRevocationListRequest other) {
      if (other == null) {
        return;
      }
      if (other.certificateRevocationList_ != null) {
        if (certificateRevocationList_ == null) {
          CertificateRevocationList = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList();
        }
        CertificateRevocationList.MergeFrom(other.CertificateRevocationList);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (certificateRevocationList_ == null) {
              CertificateRevocationList = new global::Google.Cloud.Security.PrivateCA.V1Beta1.CertificateRevocationList();
            }
            input.ReadMessage(CertificateRevocationList);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.CreateReusableConfig][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateReusableConfig].
  /// </summary>
  public sealed partial class CreateReusableConfigRequest : pb::IMessage<CreateReusableConfigRequest> {
    private static readonly pb::MessageParser<CreateReusableConfigRequest> _parser = new pb::MessageParser<CreateReusableConfigRequest>(() => new CreateReusableConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReusableConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReusableConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReusableConfigRequest(CreateReusableConfigRequest other) : this() {
      parent_ = other.parent_;
      reusableConfigId_ = other.reusableConfigId_;
      reusableConfig_ = other.reusableConfig_ != null ? other.reusableConfig_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReusableConfigRequest Clone() {
      return new CreateReusableConfigRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location associated with the
    /// [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig], in the format
    /// `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reusable_config_id" field.</summary>
    public const int ReusableConfigIdFieldNumber = 2;
    private string reusableConfigId_ = "";
    /// <summary>
    /// Required. It must be unique within a location and match the regular
    /// expression `[a-zA-Z0-9-]{1,63}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReusableConfigId {
      get { return reusableConfigId_; }
      set {
        reusableConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reusable_config" field.</summary>
    public const int ReusableConfigFieldNumber = 3;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig reusableConfig_;
    /// <summary>
    /// Required. A [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] with initial field values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig ReusableConfig {
      get { return reusableConfig_; }
      set {
        reusableConfig_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReusableConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReusableConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (ReusableConfigId != other.ReusableConfigId) return false;
      if (!object.Equals(ReusableConfig, other.ReusableConfig)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (ReusableConfigId.Length != 0) hash ^= ReusableConfigId.GetHashCode();
      if (reusableConfig_ != null) hash ^= ReusableConfig.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (ReusableConfigId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReusableConfigId);
      }
      if (reusableConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReusableConfig);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (ReusableConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReusableConfigId);
      }
      if (reusableConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReusableConfig);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReusableConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.ReusableConfigId.Length != 0) {
        ReusableConfigId = other.ReusableConfigId;
      }
      if (other.reusableConfig_ != null) {
        if (reusableConfig_ == null) {
          ReusableConfig = new global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig();
        }
        ReusableConfig.MergeFrom(other.ReusableConfig);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            ReusableConfigId = input.ReadString();
            break;
          }
          case 26: {
            if (reusableConfig_ == null) {
              ReusableConfig = new global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig();
            }
            input.ReadMessage(ReusableConfig);
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.DeleteReusableConfig][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.DeleteReusableConfig].
  /// </summary>
  public sealed partial class DeleteReusableConfigRequest : pb::IMessage<DeleteReusableConfigRequest> {
    private static readonly pb::MessageParser<DeleteReusableConfigRequest> _parser = new pb::MessageParser<DeleteReusableConfigRequest>(() => new DeleteReusableConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteReusableConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReusableConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReusableConfigRequest(DeleteReusableConfigRequest other) : this() {
      name_ = other.name_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReusableConfigRequest Clone() {
      return new DeleteReusableConfigRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name for this [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] in the format
    /// `projects/*/locations/*/reusableConfigs/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteReusableConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteReusableConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteReusableConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.GetReusableConfig][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetReusableConfig].
  /// </summary>
  public sealed partial class GetReusableConfigRequest : pb::IMessage<GetReusableConfigRequest> {
    private static readonly pb::MessageParser<GetReusableConfigRequest> _parser = new pb::MessageParser<GetReusableConfigRequest>(() => new GetReusableConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReusableConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReusableConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReusableConfigRequest(GetReusableConfigRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReusableConfigRequest Clone() {
      return new GetReusableConfigRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The [name][ReusableConfigs.name] of the [ReusableConfigs][] to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReusableConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReusableConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReusableConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.ListReusableConfigs][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListReusableConfigs].
  /// </summary>
  public sealed partial class ListReusableConfigsRequest : pb::IMessage<ListReusableConfigsRequest> {
    private static readonly pb::MessageParser<ListReusableConfigsRequest> _parser = new pb::MessageParser<ListReusableConfigsRequest>(() => new ListReusableConfigsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListReusableConfigsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListReusableConfigsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListReusableConfigsRequest(ListReusableConfigsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListReusableConfigsRequest Clone() {
      return new ListReusableConfigsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the location associated with the
    /// [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig], in the format
    /// `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. Limit on the number of
    /// [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig] to include in the response.
    /// Further [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig] can subsequently be
    /// obtained by including the
    /// [ListReusableConfigsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token] in a subsequent request. If
    /// unspecified, the server will pick an appropriate default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. Pagination token, returned earlier via
    /// [ListReusableConfigsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. Only include resources that match the filter in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Optional. Specify how the results should be sorted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListReusableConfigsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListReusableConfigsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListReusableConfigsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [CertificateAuthorityService.ListReusableConfigs][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListReusableConfigs].
  /// </summary>
  public sealed partial class ListReusableConfigsResponse : pb::IMessage<ListReusableConfigsResponse> {
    private static readonly pb::MessageParser<ListReusableConfigsResponse> _parser = new pb::MessageParser<ListReusableConfigsResponse>(() => new ListReusableConfigsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListReusableConfigsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListReusableConfigsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListReusableConfigsResponse(ListReusableConfigsResponse other) : this() {
      reusableConfigs_ = other.reusableConfigs_.Clone();
      nextPageToken_ = other.nextPageToken_;
      unreachable_ = other.unreachable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListReusableConfigsResponse Clone() {
      return new ListReusableConfigsResponse(this);
    }

    /// <summary>Field number for the "reusable_configs" field.</summary>
    public const int ReusableConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig> _repeated_reusableConfigs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig> reusableConfigs_ = new pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig>();
    /// <summary>
    /// The list of [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig> ReusableConfigs {
      get { return reusableConfigs_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token to retrieve next page of results. Pass this value in
    /// [ListReusableConfigsRequest.next_page_token][] to retrieve
    /// the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of locations (e.g. "us-west1") that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListReusableConfigsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListReusableConfigsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reusableConfigs_.Equals(other.reusableConfigs_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reusableConfigs_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reusableConfigs_.WriteTo(output, _repeated_reusableConfigs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reusableConfigs_.CalculateSize(_repeated_reusableConfigs_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListReusableConfigsResponse other) {
      if (other == null) {
        return;
      }
      reusableConfigs_.Add(other.reusableConfigs_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      unreachable_.Add(other.unreachable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reusableConfigs_.AddEntriesFrom(input, _repeated_reusableConfigs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [CertificateAuthorityService.UpdateReusableConfig][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateReusableConfig].
  /// </summary>
  public sealed partial class UpdateReusableConfigRequest : pb::IMessage<UpdateReusableConfigRequest> {
    private static readonly pb::MessageParser<UpdateReusableConfigRequest> _parser = new pb::MessageParser<UpdateReusableConfigRequest>(() => new UpdateReusableConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateReusableConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReusableConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReusableConfigRequest(UpdateReusableConfigRequest other) : this() {
      reusableConfig_ = other.reusableConfig_ != null ? other.reusableConfig_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReusableConfigRequest Clone() {
      return new UpdateReusableConfigRequest(this);
    }

    /// <summary>Field number for the "reusable_config" field.</summary>
    public const int ReusableConfigFieldNumber = 1;
    private global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig reusableConfig_;
    /// <summary>
    /// Required. [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] with updated values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig ReusableConfig {
      get { return reusableConfig_; }
      set {
        reusableConfig_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. A list of fields to be updated in this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 3;
    private string requestId_ = "";
    /// <summary>
    /// Optional. An ID to identify requests. Specify a unique request ID so that if you must
    /// retry your request, the server will know to ignore the request if it has
    /// already been completed. The server will guarantee that for at least 60
    /// minutes since the first request.
    ///
    /// For example, consider a situation where you make an initial request and t
    /// he request times out. If you make the request again with the same request
    /// ID, the server can check if original operation with the same request ID
    /// was received, and if so, will ignore the second request. This prevents
    /// clients from accidentally creating duplicate commitments.
    ///
    /// The request ID must be a valid UUID with the exception that zero UUID is
    /// not supported (00000000-0000-0000-0000-000000000000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateReusableConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateReusableConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReusableConfig, other.ReusableConfig)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reusableConfig_ != null) hash ^= ReusableConfig.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reusableConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReusableConfig);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reusableConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReusableConfig);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateReusableConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.reusableConfig_ != null) {
        if (reusableConfig_ == null) {
          ReusableConfig = new global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig();
        }
        ReusableConfig.MergeFrom(other.ReusableConfig);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reusableConfig_ == null) {
              ReusableConfig = new global::Google.Cloud.Security.PrivateCA.V1Beta1.ReusableConfig();
            }
            input.ReadMessage(ReusableConfig);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents the metadata of the long-running operation.
  /// </summary>
  public sealed partial class OperationMetadata : pb::IMessage<OperationMetadata> {
    private static readonly pb::MessageParser<OperationMetadata> _parser = new pb::MessageParser<OperationMetadata>(() => new OperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Security.PrivateCA.V1Beta1.ServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata(OperationMetadata other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      target_ = other.target_;
      verb_ = other.verb_;
      statusMessage_ = other.statusMessage_;
      requestedCancellation_ = other.requestedCancellation_;
      apiVersion_ = other.apiVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata Clone() {
      return new OperationMetadata(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the operation was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. The time the operation finished running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private string target_ = "";
    /// <summary>
    /// Output only. Server-defined resource path for the target of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 4;
    private string verb_ = "";
    /// <summary>
    /// Output only. Name of the verb executed by the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Verb {
      get { return verb_; }
      set {
        verb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 5;
    private string statusMessage_ = "";
    /// <summary>
    /// Output only. Human-readable status of the operation, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requested_cancellation" field.</summary>
    public const int RequestedCancellationFieldNumber = 6;
    private bool requestedCancellation_;
    /// <summary>
    /// Output only. Identifies whether the user has requested cancellation
    /// of the operation. Operations that have successfully been cancelled
    /// have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    /// corresponding to `Code.CANCELLED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequestedCancellation {
      get { return requestedCancellation_; }
      set {
        requestedCancellation_ = value;
      }
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 7;
    private string apiVersion_ = "";
    /// <summary>
    /// Output only. API version used to start the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Target != other.Target) return false;
      if (Verb != other.Verb) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (RequestedCancellation != other.RequestedCancellation) return false;
      if (ApiVersion != other.ApiVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Verb.Length != 0) hash ^= Verb.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (RequestedCancellation != false) hash ^= RequestedCancellation.GetHashCode();
      if (ApiVersion.Length != 0) hash ^= ApiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (RequestedCancellation != false) {
        output.WriteRawTag(48);
        output.WriteBool(RequestedCancellation);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Verb.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Verb);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (RequestedCancellation != false) {
        size += 1 + 1;
      }
      if (ApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Verb.Length != 0) {
        Verb = other.Verb;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.RequestedCancellation != false) {
        RequestedCancellation = other.RequestedCancellation;
      }
      if (other.ApiVersion.Length != 0) {
        ApiVersion = other.ApiVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
          case 48: {
            RequestedCancellation = input.ReadBool();
            break;
          }
          case 58: {
            ApiVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
