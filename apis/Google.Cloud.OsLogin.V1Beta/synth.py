# GENERATED BY Google.Cloud.Tools.ProjectGenerator - DO NOT EDIT!

import json
import sys
from synthtool import shell
import synthtool.metadata
from pathlib import Path

AUTOSYNTH_MULTIPLE_COMMITS = True

# Parent of the script is the API-specific directory
# Parent of the API-specific directory is the apis directory
# Parent of the apis directory is the repo root
root = Path(__file__).parent.parent.parent
package = Path(__file__).parent.name

bash = '/bin/bash'
if sys.platform == 'win32':
  bash = 'C:\\Program Files\\Git\\bin\\bash.exe'

shell.run(
  (bash, 'generateapis.sh', '--check_compatibility', package),
  cwd = root,
  hide_output = False)

# Load the synth.metadata that generateapis.sh has written, and
# re-add all the sources for the in-memory version that synthtool
# is about to write out. This is a pretty ugly hack, but it works for now.
# (We assume every source is a git source.)
with open('synth.metadata') as generated_metadata_file:
  generated_metadata = json.load(generated_metadata_file)
  for source in generated_metadata['sources']:
    synthtool.metadata.get().sources.add(git=source['git'])
