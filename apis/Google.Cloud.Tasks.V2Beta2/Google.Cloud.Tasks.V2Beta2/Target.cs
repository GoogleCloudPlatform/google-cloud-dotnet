// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/tasks/v2beta2/target.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Tasks.V2Beta2 {

  /// <summary>Holder for reflection information generated from google/cloud/tasks/v2beta2/target.proto</summary>
  public static partial class TargetReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/tasks/v2beta2/target.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TargetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvY2xvdWQvdGFza3MvdjJiZXRhMi90YXJnZXQucHJvdG8SGmdv",
            "b2dsZS5jbG91ZC50YXNrcy52MmJldGEyGhxnb29nbGUvYXBpL2Fubm90YXRp",
            "b25zLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8iDAoK",
            "UHVsbFRhcmdldCIrCgtQdWxsTWVzc2FnZRIPCgdwYXlsb2FkGAEgASgMEgsK",
            "A3RhZxgCIAEoCSJoChNBcHBFbmdpbmVIdHRwVGFyZ2V0ElEKG2FwcF9lbmdp",
            "bmVfcm91dGluZ19vdmVycmlkZRgBIAEoCzIsLmdvb2dsZS5jbG91ZC50YXNr",
            "cy52MmJldGEyLkFwcEVuZ2luZVJvdXRpbmcixAIKFEFwcEVuZ2luZUh0dHBS",
            "ZXF1ZXN0EjsKC2h0dHBfbWV0aG9kGAEgASgOMiYuZ29vZ2xlLmNsb3VkLnRh",
            "c2tzLnYyYmV0YTIuSHR0cE1ldGhvZBJIChJhcHBfZW5naW5lX3JvdXRpbmcY",
            "AiABKAsyLC5nb29nbGUuY2xvdWQudGFza3MudjJiZXRhMi5BcHBFbmdpbmVS",
            "b3V0aW5nEhQKDHJlbGF0aXZlX3VybBgDIAEoCRJOCgdoZWFkZXJzGAQgAygL",
            "Mj0uZ29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTIuQXBwRW5naW5lSHR0cFJl",
            "cXVlc3QuSGVhZGVyc0VudHJ5Eg8KB3BheWxvYWQYBSABKAwaLgoMSGVhZGVy",
            "c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiVAoQQXBw",
            "RW5naW5lUm91dGluZxIPCgdzZXJ2aWNlGAEgASgJEg8KB3ZlcnNpb24YAiAB",
            "KAkSEAoIaW5zdGFuY2UYAyABKAkSDAoEaG9zdBgEIAEoCSpbCgpIdHRwTWV0",
            "aG9kEhsKF0hUVFBfTUVUSE9EX1VOU1BFQ0lGSUVEEAASCAoEUE9TVBABEgcK",
            "A0dFVBACEggKBEhFQUQQAxIHCgNQVVQQBBIKCgZERUxFVEUQBUJwCh5jb20u",
            "Z29vZ2xlLmNsb3VkLnRhc2tzLnYyYmV0YTJCC1RhcmdldFByb3RvUAFaP2dv",
            "b2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvdGFz",
            "a3MvdjJiZXRhMjt0YXNrc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Tasks.V2Beta2.HttpMethod), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Tasks.V2Beta2.PullTarget), global::Google.Cloud.Tasks.V2Beta2.PullTarget.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Tasks.V2Beta2.PullMessage), global::Google.Cloud.Tasks.V2Beta2.PullMessage.Parser, new[]{ "Payload", "Tag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Tasks.V2Beta2.AppEngineHttpTarget), global::Google.Cloud.Tasks.V2Beta2.AppEngineHttpTarget.Parser, new[]{ "AppEngineRoutingOverride" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Tasks.V2Beta2.AppEngineHttpRequest), global::Google.Cloud.Tasks.V2Beta2.AppEngineHttpRequest.Parser, new[]{ "HttpMethod", "AppEngineRouting", "RelativeUrl", "Headers", "Payload" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting), global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting.Parser, new[]{ "Service", "Version", "Instance", "Host" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The HTTP method used to execute the task.
  /// </summary>
  public enum HttpMethod {
    /// <summary>
    /// HTTP method unspecified
    /// </summary>
    [pbr::OriginalName("HTTP_METHOD_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// HTTP Post
    /// </summary>
    [pbr::OriginalName("POST")] Post = 1,
    /// <summary>
    /// HTTP Get
    /// </summary>
    [pbr::OriginalName("GET")] Get = 2,
    /// <summary>
    /// HTTP Head
    /// </summary>
    [pbr::OriginalName("HEAD")] Head = 3,
    /// <summary>
    /// HTTP Put
    /// </summary>
    [pbr::OriginalName("PUT")] Put = 4,
    /// <summary>
    /// HTTP Delete
    /// </summary>
    [pbr::OriginalName("DELETE")] Delete = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Pull target.
  /// </summary>
  public sealed partial class PullTarget : pb::IMessage<PullTarget> {
    private static readonly pb::MessageParser<PullTarget> _parser = new pb::MessageParser<PullTarget>(() => new PullTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PullTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Tasks.V2Beta2.TargetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullTarget(PullTarget other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullTarget Clone() {
      return new PullTarget(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PullTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PullTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PullTarget other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// The pull message contains data that can be used by the caller of
  /// [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] to process the task.
  ///
  /// This proto can only be used for tasks in a queue which has
  /// [pull_target][google.cloud.tasks.v2beta2.Queue.pull_target] set.
  /// </summary>
  public sealed partial class PullMessage : pb::IMessage<PullMessage> {
    private static readonly pb::MessageParser<PullMessage> _parser = new pb::MessageParser<PullMessage>(() => new PullMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PullMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Tasks.V2Beta2.TargetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessage(PullMessage other) : this() {
      payload_ = other.payload_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessage Clone() {
      return new PullMessage(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// A data payload consumed by the worker to execute the task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private string tag_ = "";
    /// <summary>
    /// The task's tag.
    ///
    /// Tags allow similar tasks to be processed in a batch. If you label
    /// tasks with a tag, your worker can
    /// [lease tasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] with the same tag using
    /// [filter][google.cloud.tasks.v2beta2.LeaseTasksRequest.filter]. For example, if you want to
    /// aggregate the events associated with a specific user once a day,
    /// you could tag tasks with the user ID.
    ///
    /// The task's tag can only be set when the
    /// [task is created][google.cloud.tasks.v2beta2.CloudTasks.CreateTask].
    ///
    /// The tag must be less than 500 characters.
    ///
    /// SDK compatibility: Although the SDK allows tags to be either
    /// string or [bytes](/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-),
    /// only UTF-8 encoded tags can be used in Cloud Tasks. If a tag isn't UTF-8
    /// encoded, the tag will be empty when the task is returned by Cloud Tasks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PullMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PullMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PullMessage other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// App Engine HTTP target.
  ///
  /// The task will be delivered to the App Engine application hostname
  /// specified by its [AppEngineHttpTarget][google.cloud.tasks.v2beta2.AppEngineHttpTarget] and [AppEngineHttpRequest][google.cloud.tasks.v2beta2.AppEngineHttpRequest].
  /// The documentation for [AppEngineHttpRequest][google.cloud.tasks.v2beta2.AppEngineHttpRequest] explains how the
  /// task's host URL is constructed.
  ///
  /// Using [AppEngineHttpTarget][google.cloud.tasks.v2beta2.AppEngineHttpTarget] requires
  /// [`appengine.applications.get`](/appengine/docs/admin-api/access-control)
  /// Google IAM permission for the project
  /// and the following scope:
  ///
  /// `https://www.googleapis.com/auth/cloud-platform`
  /// </summary>
  public sealed partial class AppEngineHttpTarget : pb::IMessage<AppEngineHttpTarget> {
    private static readonly pb::MessageParser<AppEngineHttpTarget> _parser = new pb::MessageParser<AppEngineHttpTarget>(() => new AppEngineHttpTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppEngineHttpTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Tasks.V2Beta2.TargetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineHttpTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineHttpTarget(AppEngineHttpTarget other) : this() {
      AppEngineRoutingOverride = other.appEngineRoutingOverride_ != null ? other.AppEngineRoutingOverride.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineHttpTarget Clone() {
      return new AppEngineHttpTarget(this);
    }

    /// <summary>Field number for the "app_engine_routing_override" field.</summary>
    public const int AppEngineRoutingOverrideFieldNumber = 1;
    private global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting appEngineRoutingOverride_;
    /// <summary>
    /// Overrides for the
    /// [task-level app_engine_routing][google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing].
    ///
    /// If set, `app_engine_routing_override` is used for all tasks in
    /// the queue, no matter what the setting is for the
    /// [task-level app_engine_routing][google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting AppEngineRoutingOverride {
      get { return appEngineRoutingOverride_; }
      set {
        appEngineRoutingOverride_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppEngineHttpTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppEngineHttpTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppEngineRoutingOverride, other.AppEngineRoutingOverride)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (appEngineRoutingOverride_ != null) hash ^= AppEngineRoutingOverride.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (appEngineRoutingOverride_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppEngineRoutingOverride);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (appEngineRoutingOverride_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppEngineRoutingOverride);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppEngineHttpTarget other) {
      if (other == null) {
        return;
      }
      if (other.appEngineRoutingOverride_ != null) {
        if (appEngineRoutingOverride_ == null) {
          appEngineRoutingOverride_ = new global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting();
        }
        AppEngineRoutingOverride.MergeFrom(other.AppEngineRoutingOverride);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (appEngineRoutingOverride_ == null) {
              appEngineRoutingOverride_ = new global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting();
            }
            input.ReadMessage(appEngineRoutingOverride_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// App Engine HTTP request.
  ///
  /// The message defines the HTTP request that is sent to an App Engine app when
  /// the task is dispatched.
  ///
  /// This proto can only be used for tasks in a queue which has
  /// [app_engine_http_target][google.cloud.tasks.v2beta2.Queue.app_engine_http_target] set.
  ///
  /// Using [AppEngineHttpRequest][google.cloud.tasks.v2beta2.AppEngineHttpRequest] requires
  /// [`appengine.applications.get`](/appengine/docs/admin-api/access-control)
  /// Google IAM permission for the project
  /// and the following scope:
  ///
  /// `https://www.googleapis.com/auth/cloud-platform`
  ///
  /// The task will be delivered to the App Engine app which belongs to the same
  /// project as the queue. For more information, see
  /// [How Requests are Routed](/appengine/docs/standard/python/how-requests-are-routed)
  /// and how routing is affected by
  /// [dispatch files](/appengine/docs/python/config/dispatchref).
  ///
  /// The [AppEngineRouting][google.cloud.tasks.v2beta2.AppEngineRouting] used to construct the URL that the task is
  /// delivered to can be set at the queue-level or task-level:
  ///
  /// * If set,
  ///    [app_engine_routing_override][google.cloud.tasks.v2beta2.AppEngineHttpTarget.app_engine_routing_override]
  ///    is used for all tasks in the queue, no matter what the setting
  ///    is for the
  ///    [task-level app_engine_routing][google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing].
  ///
  /// The `url` that the task will be sent to is:
  ///
  /// * `url =` [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] `+`
  ///   [relative_url][google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url]
  ///
  /// The task attempt has succeeded if the app's request handler returns
  /// an HTTP response code in the range [`200` - `299`]. `503` is
  /// considered an App Engine system error instead of an application
  /// error. Requests returning error `503` will be retried regardless of
  /// retry configuration and not counted against retry counts.
  /// Any other response code or a failure to receive a response before the
  /// deadline is a failed attempt.
  /// </summary>
  public sealed partial class AppEngineHttpRequest : pb::IMessage<AppEngineHttpRequest> {
    private static readonly pb::MessageParser<AppEngineHttpRequest> _parser = new pb::MessageParser<AppEngineHttpRequest>(() => new AppEngineHttpRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppEngineHttpRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Tasks.V2Beta2.TargetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineHttpRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineHttpRequest(AppEngineHttpRequest other) : this() {
      httpMethod_ = other.httpMethod_;
      AppEngineRouting = other.appEngineRouting_ != null ? other.AppEngineRouting.Clone() : null;
      relativeUrl_ = other.relativeUrl_;
      headers_ = other.headers_.Clone();
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineHttpRequest Clone() {
      return new AppEngineHttpRequest(this);
    }

    /// <summary>Field number for the "http_method" field.</summary>
    public const int HttpMethodFieldNumber = 1;
    private global::Google.Cloud.Tasks.V2Beta2.HttpMethod httpMethod_ = 0;
    /// <summary>
    /// The HTTP method to use for the request. The default is POST.
    ///
    /// The app's request handler for the task's target URL must be able to handle
    /// HTTP requests with this http_method, otherwise the task attempt will fail
    /// with error code 405 (Method Not Allowed). See
    /// [Writing a push task request handler](/appengine/docs/java/taskqueue/push/creating-handlers#writing_a_push_task_request_handler)
    /// and the documentation for the request handlers in the language your app is
    /// written in e.g.
    /// [Python Request Handler](/appengine/docs/python/tools/webapp/requesthandlerclass).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Tasks.V2Beta2.HttpMethod HttpMethod {
      get { return httpMethod_; }
      set {
        httpMethod_ = value;
      }
    }

    /// <summary>Field number for the "app_engine_routing" field.</summary>
    public const int AppEngineRoutingFieldNumber = 2;
    private global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting appEngineRouting_;
    /// <summary>
    /// Task-level setting for App Engine routing.
    ///
    /// If set,
    /// [app_engine_routing_override][google.cloud.tasks.v2beta2.AppEngineHttpTarget.app_engine_routing_override]
    /// is used for all tasks in the queue, no matter what the setting is for the
    /// [task-level app_engine_routing][google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting AppEngineRouting {
      get { return appEngineRouting_; }
      set {
        appEngineRouting_ = value;
      }
    }

    /// <summary>Field number for the "relative_url" field.</summary>
    public const int RelativeUrlFieldNumber = 3;
    private string relativeUrl_ = "";
    /// <summary>
    /// The relative URL.
    ///
    /// The relative URL must begin with "/" and must be a valid HTTP relative URL.
    /// It can contain a path and query string arguments.
    /// If the relative URL is empty, then the root path "/" will be used.
    /// No spaces are allowed, and the maximum length allowed is 2083 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelativeUrl {
      get { return relativeUrl_; }
      set {
        relativeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
    /// <summary>
    /// HTTP request headers.
    ///
    /// This map contains the header field names and values.
    /// Headers can be set when the
    /// [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).
    /// Repeated headers are not supported but a header value can contain commas.
    ///
    /// Cloud Tasks sets some headers to default values:
    ///
    /// * `User-Agent`: By default, this header is
    ///   `"AppEngine-Google; (+http://code.google.com/appengine)"`.
    ///   This header can be modified, but Cloud Tasks will append
    ///   `"AppEngine-Google; (+http://code.google.com/appengine)"` to the
    ///   modified `User-Agent`.
    ///
    /// If the task has a [payload][google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload], Cloud
    /// Tasks sets the following headers:
    ///
    /// * `Content-Type`: By default, the `Content-Type` header is set to
    ///   `"application/octet-stream"`. The default can be overridden by explicitly
    ///   setting `Content-Type` to a particular media type when the
    ///   [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).
    ///   For example, `Content-Type` can be set to `"application/json"`.
    /// * `Content-Length`: This is computed by Cloud Tasks. This value is
    ///   output only.   It cannot be changed.
    ///
    /// The headers below cannot be set or overridden:
    ///
    /// * `Host`
    /// * `X-Google-*`
    /// * `X-AppEngine-*`
    ///
    /// In addition, Cloud Tasks sets some headers when the task is dispatched,
    /// such as headers containing information about the task; see
    /// [request headers](/appengine/docs/python/taskqueue/push/creating-handlers#reading_request_headers).
    /// These headers are set only when the task is dispatched, so they are not
    /// visible when the task is returned in a Cloud Tasks response.
    ///
    /// Although there is no specific limit for the maximum number of headers or
    /// the size, there is a limit on the maximum size of the [Task][google.cloud.tasks.v2beta2.Task]. For more
    /// information, see the [CreateTask][google.cloud.tasks.v2beta2.CloudTasks.CreateTask] documentation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 5;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// Payload.
    ///
    /// The payload will be sent as the HTTP message body. A message
    /// body, and thus a payload, is allowed only if the HTTP method is
    /// POST or PUT. It is an error to set a data payload on a task with
    /// an incompatible [HttpMethod][google.cloud.tasks.v2beta2.HttpMethod].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppEngineHttpRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppEngineHttpRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HttpMethod != other.HttpMethod) return false;
      if (!object.Equals(AppEngineRouting, other.AppEngineRouting)) return false;
      if (RelativeUrl != other.RelativeUrl) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HttpMethod != 0) hash ^= HttpMethod.GetHashCode();
      if (appEngineRouting_ != null) hash ^= AppEngineRouting.GetHashCode();
      if (RelativeUrl.Length != 0) hash ^= RelativeUrl.GetHashCode();
      hash ^= Headers.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HttpMethod != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) HttpMethod);
      }
      if (appEngineRouting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppEngineRouting);
      }
      if (RelativeUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RelativeUrl);
      }
      headers_.WriteTo(output, _map_headers_codec);
      if (Payload.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HttpMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HttpMethod);
      }
      if (appEngineRouting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppEngineRouting);
      }
      if (RelativeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelativeUrl);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppEngineHttpRequest other) {
      if (other == null) {
        return;
      }
      if (other.HttpMethod != 0) {
        HttpMethod = other.HttpMethod;
      }
      if (other.appEngineRouting_ != null) {
        if (appEngineRouting_ == null) {
          appEngineRouting_ = new global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting();
        }
        AppEngineRouting.MergeFrom(other.AppEngineRouting);
      }
      if (other.RelativeUrl.Length != 0) {
        RelativeUrl = other.RelativeUrl;
      }
      headers_.Add(other.headers_);
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            httpMethod_ = (global::Google.Cloud.Tasks.V2Beta2.HttpMethod) input.ReadEnum();
            break;
          }
          case 18: {
            if (appEngineRouting_ == null) {
              appEngineRouting_ = new global::Google.Cloud.Tasks.V2Beta2.AppEngineRouting();
            }
            input.ReadMessage(appEngineRouting_);
            break;
          }
          case 26: {
            RelativeUrl = input.ReadString();
            break;
          }
          case 34: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 42: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// App Engine Routing.
  ///
  /// For more information about services, versions, and instances see
  /// [An Overview of App Engine](/appengine/docs/python/an-overview-of-app-engine),
  /// [Microservices Architecture on Google App Engine](/appengine/docs/python/microservices-on-app-engine),
  /// [App Engine Standard request routing](/appengine/docs/standard/python/how-requests-are-routed),
  /// and [App Engine Flex request routing](/appengine/docs/flexible/python/how-requests-are-routed).
  /// </summary>
  public sealed partial class AppEngineRouting : pb::IMessage<AppEngineRouting> {
    private static readonly pb::MessageParser<AppEngineRouting> _parser = new pb::MessageParser<AppEngineRouting>(() => new AppEngineRouting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppEngineRouting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Tasks.V2Beta2.TargetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineRouting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineRouting(AppEngineRouting other) : this() {
      service_ = other.service_;
      version_ = other.version_;
      instance_ = other.instance_;
      host_ = other.host_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngineRouting Clone() {
      return new AppEngineRouting(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    private string service_ = "";
    /// <summary>
    /// App service.
    ///
    /// By default, the task is sent to the service which is the default
    /// service when the task is attempted ("default").
    ///
    /// For some queues or tasks which were created using the App Engine
    /// Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
    /// into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
    /// [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
    /// [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
    /// which were created using the App Engine SDK use a custom domain
    /// name; custom domains are not parsed by Cloud Tasks. If
    /// [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
    /// [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
    /// [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
    /// [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// App version.
    ///
    /// By default, the task is sent to the version which is the default
    /// version when the task is attempted ("default").
    ///
    /// For some queues or tasks which were created using the App Engine
    /// Task Queue API, [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable
    /// into [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
    /// [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
    /// [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]. For example, some tasks
    /// which were created using the App Engine SDK use a custom domain
    /// name; custom domains are not parsed by Cloud Tasks. If
    /// [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is not parsable, then
    /// [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
    /// [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], and
    /// [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] are the empty string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 3;
    private string instance_ = "";
    /// <summary>
    /// App instance.
    ///
    /// By default, the task is sent to an instance which is available when
    /// the task is attempted.
    ///
    /// Requests can only be sent to a specific instance if
    /// [manual scaling is used in App Engine Standard](/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
    /// App Engine Flex does not support instances. For more information, see
    /// [App Engine Standard request routing](/appengine/docs/standard/python/how-requests-are-routed)
    /// and [App Engine Flex request routing](/appengine/docs/flexible/python/how-requests-are-routed).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instance {
      get { return instance_; }
      set {
        instance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 4;
    private string host_ = "";
    /// <summary>
    /// Output only. The host that the task is sent to.
    ///
    /// For more information, see
    /// [How Requests are Routed](/appengine/docs/standard/python/how-requests-are-routed).
    ///
    /// The host is constructed as:
    ///
    /// * `host = [application_domain_name]`&lt;/br>
    ///   `| [service] + '.' + [application_domain_name]`&lt;/br>
    ///   `| [version] + '.' + [application_domain_name]`&lt;/br>
    ///   `| [version_dot_service]+ '.' + [application_domain_name]`&lt;/br>
    ///   `| [instance] + '.' + [application_domain_name]`&lt;/br>
    ///   `| [instance_dot_service] + '.' + [application_domain_name]`&lt;/br>
    ///   `| [instance_dot_version] + '.' + [application_domain_name]`&lt;/br>
    ///   `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`
    ///
    /// * `application_domain_name` = The domain name of the app, for
    ///   example &lt;app-id>.appspot.com, which is associated with the
    ///   queue's project ID. Some tasks which were created using the App Engine
    ///   SDK use a custom domain name.
    ///
    /// * `service =` [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
    ///
    /// * `version =` [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
    ///
    /// * `version_dot_service =`
    ///   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
    ///   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
    ///
    /// * `instance =` [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance]
    ///
    /// * `instance_dot_service =`
    ///   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
    ///   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
    ///
    /// * `instance_dot_version =`
    ///   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
    ///   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version]
    ///
    /// * `instance_dot_version_dot_service =`
    ///   [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] `+ '.' +`
    ///   [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] `+ '.' +`
    ///   [service][google.cloud.tasks.v2beta2.AppEngineRouting.service]
    ///
    /// If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is empty, then the task will be sent
    /// to the service which is the default service when the task is attempted.
    ///
    /// If [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is empty, then the task will be sent
    /// to the version which is the default version when the task is attempted.
    ///
    /// If [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty, then the task
    /// will be sent to an instance which is available when the task is
    /// attempted.
    ///
    /// When [service][google.cloud.tasks.v2beta2.AppEngineRouting.service] is "default",
    /// [version][google.cloud.tasks.v2beta2.AppEngineRouting.version] is "default", and
    /// [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is empty,
    /// [host][google.cloud.tasks.v2beta2.AppEngineRouting.host] is shortened to just the
    /// `application_domain_name`.
    ///
    /// If [service][google.cloud.tasks.v2beta2.AppEngineRouting.service],
    /// [version][google.cloud.tasks.v2beta2.AppEngineRouting.version], or
    /// [instance][google.cloud.tasks.v2beta2.AppEngineRouting.instance] is invalid, then the task
    /// will be sent to the default version of the default service when
    /// the task is attempted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppEngineRouting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppEngineRouting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (Version != other.Version) return false;
      if (Instance != other.Instance) return false;
      if (Host != other.Host) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Instance.Length != 0) hash ^= Instance.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Service.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Instance.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Instance);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Instance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instance);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppEngineRouting other) {
      if (other == null) {
        return;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Instance.Length != 0) {
        Instance = other.Instance;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Instance = input.ReadString();
            break;
          }
          case 34: {
            Host = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
