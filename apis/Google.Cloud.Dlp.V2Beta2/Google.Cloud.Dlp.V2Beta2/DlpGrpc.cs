// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta2/dlp.proto
// Original file comments:
// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Google.Cloud.Dlp.V2Beta2 {
  /// <summary>
  /// The DLP API is a service that allows clients
  /// to detect the presence of Personally Identifiable Information (PII) and other
  /// privacy-sensitive data in user-supplied, unstructured data streams, like text
  /// blocks or images.
  /// The service also includes methods for sensitive data redaction and
  /// scheduling of data scans on Google Cloud Platform based data sets.
  /// </summary>
  public static partial class DlpService
  {
    static readonly string __ServiceName = "google.privacy.dlp.v2beta2.DlpService";

    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest> __Marshaller_InspectContentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse> __Marshaller_InspectContentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest> __Marshaller_RedactImageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse> __Marshaller_RedactImageResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest> __Marshaller_DeidentifyContentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse> __Marshaller_DeidentifyContentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest> __Marshaller_ReidentifyContentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse> __Marshaller_ReidentifyContentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest> __Marshaller_InspectDataSourceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.DlpJob> __Marshaller_DlpJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.DlpJob.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest> __Marshaller_AnalyzeDataSourceRiskRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest> __Marshaller_ListInfoTypesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse> __Marshaller_ListInfoTypesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest> __Marshaller_CreateInspectTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> __Marshaller_InspectTemplate = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.InspectTemplate.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest> __Marshaller_UpdateInspectTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest> __Marshaller_GetInspectTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest> __Marshaller_ListInspectTemplatesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse> __Marshaller_ListInspectTemplatesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest> __Marshaller_DeleteInspectTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest> __Marshaller_CreateDeidentifyTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> __Marshaller_DeidentifyTemplate = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest> __Marshaller_UpdateDeidentifyTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest> __Marshaller_GetDeidentifyTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest> __Marshaller_ListDeidentifyTemplatesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse> __Marshaller_ListDeidentifyTemplatesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest> __Marshaller_DeleteDeidentifyTemplateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest> __Marshaller_ListDlpJobsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse> __Marshaller_ListDlpJobsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest> __Marshaller_GetDlpJobRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest> __Marshaller_DeleteDlpJobRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest> __Marshaller_CancelDlpJobRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest, global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse> __Method_InspectContent = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest, global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InspectContent",
        __Marshaller_InspectContentRequest,
        __Marshaller_InspectContentResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest, global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse> __Method_RedactImage = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest, global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RedactImage",
        __Marshaller_RedactImageRequest,
        __Marshaller_RedactImageResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse> __Method_DeidentifyContent = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeidentifyContent",
        __Marshaller_DeidentifyContentRequest,
        __Marshaller_DeidentifyContentResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest, global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse> __Method_ReidentifyContent = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest, global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReidentifyContent",
        __Marshaller_ReidentifyContentRequest,
        __Marshaller_ReidentifyContentResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest, global::Google.Cloud.Dlp.V2Beta2.DlpJob> __Method_InspectDataSource = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest, global::Google.Cloud.Dlp.V2Beta2.DlpJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InspectDataSource",
        __Marshaller_InspectDataSourceRequest,
        __Marshaller_DlpJob);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest, global::Google.Cloud.Dlp.V2Beta2.DlpJob> __Method_AnalyzeDataSourceRisk = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest, global::Google.Cloud.Dlp.V2Beta2.DlpJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AnalyzeDataSourceRisk",
        __Marshaller_AnalyzeDataSourceRiskRequest,
        __Marshaller_DlpJob);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest, global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse> __Method_ListInfoTypes = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest, global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInfoTypes",
        __Marshaller_ListInfoTypesRequest,
        __Marshaller_ListInfoTypesResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> __Method_CreateInspectTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.InspectTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInspectTemplate",
        __Marshaller_CreateInspectTemplateRequest,
        __Marshaller_InspectTemplate);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> __Method_UpdateInspectTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.InspectTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInspectTemplate",
        __Marshaller_UpdateInspectTemplateRequest,
        __Marshaller_InspectTemplate);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> __Method_GetInspectTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.InspectTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInspectTemplate",
        __Marshaller_GetInspectTemplateRequest,
        __Marshaller_InspectTemplate);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest, global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse> __Method_ListInspectTemplates = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest, global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInspectTemplates",
        __Marshaller_ListInspectTemplatesRequest,
        __Marshaller_ListInspectTemplatesResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteInspectTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInspectTemplate",
        __Marshaller_DeleteInspectTemplateRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> __Method_CreateDeidentifyTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDeidentifyTemplate",
        __Marshaller_CreateDeidentifyTemplateRequest,
        __Marshaller_DeidentifyTemplate);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> __Method_UpdateDeidentifyTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDeidentifyTemplate",
        __Marshaller_UpdateDeidentifyTemplateRequest,
        __Marshaller_DeidentifyTemplate);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> __Method_GetDeidentifyTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest, global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeidentifyTemplate",
        __Marshaller_GetDeidentifyTemplateRequest,
        __Marshaller_DeidentifyTemplate);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest, global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse> __Method_ListDeidentifyTemplates = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest, global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeidentifyTemplates",
        __Marshaller_ListDeidentifyTemplatesRequest,
        __Marshaller_ListDeidentifyTemplatesResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDeidentifyTemplate = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDeidentifyTemplate",
        __Marshaller_DeleteDeidentifyTemplateRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest, global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse> __Method_ListDlpJobs = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest, global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDlpJobs",
        __Marshaller_ListDlpJobsRequest,
        __Marshaller_ListDlpJobsResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest, global::Google.Cloud.Dlp.V2Beta2.DlpJob> __Method_GetDlpJob = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest, global::Google.Cloud.Dlp.V2Beta2.DlpJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDlpJob",
        __Marshaller_GetDlpJobRequest,
        __Marshaller_DlpJob);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDlpJob = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDlpJob",
        __Marshaller_DeleteDlpJobRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CancelDlpJob = new grpc::Method<global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelDlpJob",
        __Marshaller_CancelDlpJobRequest,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dlp.V2Beta2.DlpReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DlpService</summary>
    public abstract partial class DlpServiceBase
    {
      /// <summary>
      /// Finds potentially sensitive info in content.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide for text](/dlp/docs/inspecting-text), [How-to guide for
      /// images](/dlp/docs/inspecting-images)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse> InspectContent(global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Redacts potentially sensitive info from an image.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide](/dlp/docs/redacting-sensitive-data-images)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse> RedactImage(global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// De-identifies potentially sensitive info from a ContentItem.
      /// This method has limits on input size and output size.
      /// [How-to guide](/dlp/docs/deidentify-sensitive-data)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse> DeidentifyContent(global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Re-identify content that has been de-identified.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse> ReidentifyContent(global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository. [How-to guide](/dlp/docs/inspecting-storage)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.DlpJob> InspectDataSource(global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Schedules a job to compute risk analysis metrics over content in a Google
      /// Cloud Platform repository. [How-to guide}(/dlp/docs/compute-risk-analysis)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.DlpJob> AnalyzeDataSourceRisk(global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns sensitive information types DLP supports.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse> ListInfoTypes(global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an inspect template for re-using frequently used configuration
      /// for inspecting content, images, and storage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> CreateInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> UpdateInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> GetInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse> ListInspectTemplates(global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an Deidentify template for re-using frequently used configuration
      /// for Deidentifying content, images, and storage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> CreateDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> UpdateDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> GetDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse> ListDeidentifyTemplates(global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists DlpJobs that match the specified filter in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse> ListDlpJobs(global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the latest state of a long-running DlpJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta2.DlpJob> GetDlpJob(global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a long-running DlpJob. This method indicates that the client is
      /// no longer interested in the DlpJob result. The job will be cancelled if
      /// possible.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDlpJob(global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts asynchronous cancellation on a long-running DlpJob.  The server
      /// makes a best effort to cancel the DlpJob, but success is not
      /// guaranteed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> CancelDlpJob(global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DlpService</summary>
    public partial class DlpServiceClient : grpc::ClientBase<DlpServiceClient>
    {
      /// <summary>Creates a new client for DlpService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DlpServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DlpService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DlpServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DlpServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DlpServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Finds potentially sensitive info in content.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide for text](/dlp/docs/inspecting-text), [How-to guide for
      /// images](/dlp/docs/inspecting-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse InspectContent(global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InspectContent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Finds potentially sensitive info in content.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide for text](/dlp/docs/inspecting-text), [How-to guide for
      /// images](/dlp/docs/inspecting-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse InspectContent(global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InspectContent, null, options, request);
      }
      /// <summary>
      /// Finds potentially sensitive info in content.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide for text](/dlp/docs/inspecting-text), [How-to guide for
      /// images](/dlp/docs/inspecting-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse> InspectContentAsync(global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InspectContentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Finds potentially sensitive info in content.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide for text](/dlp/docs/inspecting-text), [How-to guide for
      /// images](/dlp/docs/inspecting-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectContentResponse> InspectContentAsync(global::Google.Cloud.Dlp.V2Beta2.InspectContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InspectContent, null, options, request);
      }
      /// <summary>
      /// Redacts potentially sensitive info from an image.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide](/dlp/docs/redacting-sensitive-data-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse RedactImage(global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RedactImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Redacts potentially sensitive info from an image.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide](/dlp/docs/redacting-sensitive-data-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse RedactImage(global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RedactImage, null, options, request);
      }
      /// <summary>
      /// Redacts potentially sensitive info from an image.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide](/dlp/docs/redacting-sensitive-data-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse> RedactImageAsync(global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RedactImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Redacts potentially sensitive info from an image.
      /// This method has limits on input size, processing time, and output size.
      /// [How-to guide](/dlp/docs/redacting-sensitive-data-images)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.RedactImageResponse> RedactImageAsync(global::Google.Cloud.Dlp.V2Beta2.RedactImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RedactImage, null, options, request);
      }
      /// <summary>
      /// De-identifies potentially sensitive info from a ContentItem.
      /// This method has limits on input size and output size.
      /// [How-to guide](/dlp/docs/deidentify-sensitive-data)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse DeidentifyContent(global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeidentifyContent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// De-identifies potentially sensitive info from a ContentItem.
      /// This method has limits on input size and output size.
      /// [How-to guide](/dlp/docs/deidentify-sensitive-data)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse DeidentifyContent(global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeidentifyContent, null, options, request);
      }
      /// <summary>
      /// De-identifies potentially sensitive info from a ContentItem.
      /// This method has limits on input size and output size.
      /// [How-to guide](/dlp/docs/deidentify-sensitive-data)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse> DeidentifyContentAsync(global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeidentifyContentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// De-identifies potentially sensitive info from a ContentItem.
      /// This method has limits on input size and output size.
      /// [How-to guide](/dlp/docs/deidentify-sensitive-data)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentResponse> DeidentifyContentAsync(global::Google.Cloud.Dlp.V2Beta2.DeidentifyContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeidentifyContent, null, options, request);
      }
      /// <summary>
      /// Re-identify content that has been de-identified.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse ReidentifyContent(global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ReidentifyContent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Re-identify content that has been de-identified.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse ReidentifyContent(global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReidentifyContent, null, options, request);
      }
      /// <summary>
      /// Re-identify content that has been de-identified.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse> ReidentifyContentAsync(global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ReidentifyContentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Re-identify content that has been de-identified.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentResponse> ReidentifyContentAsync(global::Google.Cloud.Dlp.V2Beta2.ReidentifyContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReidentifyContent, null, options, request);
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository. [How-to guide](/dlp/docs/inspecting-storage)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DlpJob InspectDataSource(global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InspectDataSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository. [How-to guide](/dlp/docs/inspecting-storage)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DlpJob InspectDataSource(global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InspectDataSource, null, options, request);
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository. [How-to guide](/dlp/docs/inspecting-storage)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DlpJob> InspectDataSourceAsync(global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InspectDataSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository. [How-to guide](/dlp/docs/inspecting-storage)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DlpJob> InspectDataSourceAsync(global::Google.Cloud.Dlp.V2Beta2.InspectDataSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InspectDataSource, null, options, request);
      }
      /// <summary>
      /// Schedules a job to compute risk analysis metrics over content in a Google
      /// Cloud Platform repository. [How-to guide}(/dlp/docs/compute-risk-analysis)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DlpJob AnalyzeDataSourceRisk(global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AnalyzeDataSourceRisk(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Schedules a job to compute risk analysis metrics over content in a Google
      /// Cloud Platform repository. [How-to guide}(/dlp/docs/compute-risk-analysis)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DlpJob AnalyzeDataSourceRisk(global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AnalyzeDataSourceRisk, null, options, request);
      }
      /// <summary>
      /// Schedules a job to compute risk analysis metrics over content in a Google
      /// Cloud Platform repository. [How-to guide}(/dlp/docs/compute-risk-analysis)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DlpJob> AnalyzeDataSourceRiskAsync(global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AnalyzeDataSourceRiskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Schedules a job to compute risk analysis metrics over content in a Google
      /// Cloud Platform repository. [How-to guide}(/dlp/docs/compute-risk-analysis)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DlpJob> AnalyzeDataSourceRiskAsync(global::Google.Cloud.Dlp.V2Beta2.AnalyzeDataSourceRiskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AnalyzeDataSourceRisk, null, options, request);
      }
      /// <summary>
      /// Returns sensitive information types DLP supports.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse ListInfoTypes(global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInfoTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns sensitive information types DLP supports.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse ListInfoTypes(global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInfoTypes, null, options, request);
      }
      /// <summary>
      /// Returns sensitive information types DLP supports.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse> ListInfoTypesAsync(global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInfoTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns sensitive information types DLP supports.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesResponse> ListInfoTypesAsync(global::Google.Cloud.Dlp.V2Beta2.ListInfoTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInfoTypes, null, options, request);
      }
      /// <summary>
      /// Creates an inspect template for re-using frequently used configuration
      /// for inspecting content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectTemplate CreateInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateInspectTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an inspect template for re-using frequently used configuration
      /// for inspecting content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectTemplate CreateInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Creates an inspect template for re-using frequently used configuration
      /// for inspecting content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> CreateInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateInspectTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an inspect template for re-using frequently used configuration
      /// for inspecting content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> CreateInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.CreateInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectTemplate UpdateInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateInspectTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectTemplate UpdateInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> UpdateInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateInspectTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> UpdateInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.UpdateInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectTemplate GetInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetInspectTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.InspectTemplate GetInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> GetInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetInspectTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.InspectTemplate> GetInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.GetInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse ListInspectTemplates(global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInspectTemplates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse ListInspectTemplates(global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInspectTemplates, null, options, request);
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse> ListInspectTemplatesAsync(global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInspectTemplatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesResponse> ListInspectTemplatesAsync(global::Google.Cloud.Dlp.V2Beta2.ListInspectTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInspectTemplates, null, options, request);
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteInspectTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInspectTemplate(global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteInspectTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInspectTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.DeleteInspectTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInspectTemplate, null, options, request);
      }
      /// <summary>
      /// Creates an Deidentify template for re-using frequently used configuration
      /// for Deidentifying content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate CreateDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateDeidentifyTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Deidentify template for re-using frequently used configuration
      /// for Deidentifying content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate CreateDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Creates an Deidentify template for re-using frequently used configuration
      /// for Deidentifying content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> CreateDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateDeidentifyTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Deidentify template for re-using frequently used configuration
      /// for Deidentifying content, images, and storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> CreateDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.CreateDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate UpdateDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateDeidentifyTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate UpdateDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> UpdateDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateDeidentifyTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> UpdateDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.UpdateDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate GetDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDeidentifyTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate GetDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> GetDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDeidentifyTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an inspect template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DeidentifyTemplate> GetDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.GetDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse ListDeidentifyTemplates(global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDeidentifyTemplates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse ListDeidentifyTemplates(global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeidentifyTemplates, null, options, request);
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse> ListDeidentifyTemplatesAsync(global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDeidentifyTemplatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesResponse> ListDeidentifyTemplatesAsync(global::Google.Cloud.Dlp.V2Beta2.ListDeidentifyTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeidentifyTemplates, null, options, request);
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDeidentifyTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeidentifyTemplate(global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDeidentifyTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes inspect templates.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeidentifyTemplateAsync(global::Google.Cloud.Dlp.V2Beta2.DeleteDeidentifyTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDeidentifyTemplate, null, options, request);
      }
      /// <summary>
      /// Lists DlpJobs that match the specified filter in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse ListDlpJobs(global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDlpJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DlpJobs that match the specified filter in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse ListDlpJobs(global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDlpJobs, null, options, request);
      }
      /// <summary>
      /// Lists DlpJobs that match the specified filter in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse> ListDlpJobsAsync(global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDlpJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DlpJobs that match the specified filter in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsResponse> ListDlpJobsAsync(global::Google.Cloud.Dlp.V2Beta2.ListDlpJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDlpJobs, null, options, request);
      }
      /// <summary>
      /// Gets the latest state of a long-running DlpJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DlpJob GetDlpJob(global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDlpJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the latest state of a long-running DlpJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta2.DlpJob GetDlpJob(global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDlpJob, null, options, request);
      }
      /// <summary>
      /// Gets the latest state of a long-running DlpJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DlpJob> GetDlpJobAsync(global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDlpJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the latest state of a long-running DlpJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta2.DlpJob> GetDlpJobAsync(global::Google.Cloud.Dlp.V2Beta2.GetDlpJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDlpJob, null, options, request);
      }
      /// <summary>
      /// Deletes a long-running DlpJob. This method indicates that the client is
      /// no longer interested in the DlpJob result. The job will be cancelled if
      /// possible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDlpJob(global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDlpJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a long-running DlpJob. This method indicates that the client is
      /// no longer interested in the DlpJob result. The job will be cancelled if
      /// possible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDlpJob(global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDlpJob, null, options, request);
      }
      /// <summary>
      /// Deletes a long-running DlpJob. This method indicates that the client is
      /// no longer interested in the DlpJob result. The job will be cancelled if
      /// possible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDlpJobAsync(global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDlpJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a long-running DlpJob. This method indicates that the client is
      /// no longer interested in the DlpJob result. The job will be cancelled if
      /// possible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDlpJobAsync(global::Google.Cloud.Dlp.V2Beta2.DeleteDlpJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDlpJob, null, options, request);
      }
      /// <summary>
      /// Starts asynchronous cancellation on a long-running DlpJob.  The server
      /// makes a best effort to cancel the DlpJob, but success is not
      /// guaranteed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelDlpJob(global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CancelDlpJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts asynchronous cancellation on a long-running DlpJob.  The server
      /// makes a best effort to cancel the DlpJob, but success is not
      /// guaranteed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelDlpJob(global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelDlpJob, null, options, request);
      }
      /// <summary>
      /// Starts asynchronous cancellation on a long-running DlpJob.  The server
      /// makes a best effort to cancel the DlpJob, but success is not
      /// guaranteed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelDlpJobAsync(global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CancelDlpJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts asynchronous cancellation on a long-running DlpJob.  The server
      /// makes a best effort to cancel the DlpJob, but success is not
      /// guaranteed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelDlpJobAsync(global::Google.Cloud.Dlp.V2Beta2.CancelDlpJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelDlpJob, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DlpServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DlpServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DlpServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_InspectContent, serviceImpl.InspectContent)
          .AddMethod(__Method_RedactImage, serviceImpl.RedactImage)
          .AddMethod(__Method_DeidentifyContent, serviceImpl.DeidentifyContent)
          .AddMethod(__Method_ReidentifyContent, serviceImpl.ReidentifyContent)
          .AddMethod(__Method_InspectDataSource, serviceImpl.InspectDataSource)
          .AddMethod(__Method_AnalyzeDataSourceRisk, serviceImpl.AnalyzeDataSourceRisk)
          .AddMethod(__Method_ListInfoTypes, serviceImpl.ListInfoTypes)
          .AddMethod(__Method_CreateInspectTemplate, serviceImpl.CreateInspectTemplate)
          .AddMethod(__Method_UpdateInspectTemplate, serviceImpl.UpdateInspectTemplate)
          .AddMethod(__Method_GetInspectTemplate, serviceImpl.GetInspectTemplate)
          .AddMethod(__Method_ListInspectTemplates, serviceImpl.ListInspectTemplates)
          .AddMethod(__Method_DeleteInspectTemplate, serviceImpl.DeleteInspectTemplate)
          .AddMethod(__Method_CreateDeidentifyTemplate, serviceImpl.CreateDeidentifyTemplate)
          .AddMethod(__Method_UpdateDeidentifyTemplate, serviceImpl.UpdateDeidentifyTemplate)
          .AddMethod(__Method_GetDeidentifyTemplate, serviceImpl.GetDeidentifyTemplate)
          .AddMethod(__Method_ListDeidentifyTemplates, serviceImpl.ListDeidentifyTemplates)
          .AddMethod(__Method_DeleteDeidentifyTemplate, serviceImpl.DeleteDeidentifyTemplate)
          .AddMethod(__Method_ListDlpJobs, serviceImpl.ListDlpJobs)
          .AddMethod(__Method_GetDlpJob, serviceImpl.GetDlpJob)
          .AddMethod(__Method_DeleteDlpJob, serviceImpl.DeleteDlpJob)
          .AddMethod(__Method_CancelDlpJob, serviceImpl.CancelDlpJob).Build();
    }

  }
}
#endregion
