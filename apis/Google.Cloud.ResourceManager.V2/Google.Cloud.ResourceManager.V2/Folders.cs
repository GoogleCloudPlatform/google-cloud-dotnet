// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/resourcemanager/v2/folders.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.ResourceManager.V2 {

  /// <summary>Holder for reflection information generated from google/cloud/resourcemanager/v2/folders.proto</summary>
  public static partial class FoldersReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/resourcemanager/v2/folders.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FoldersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvY2xvdWQvcmVzb3VyY2VtYW5hZ2VyL3YyL2ZvbGRlcnMucHJv",
            "dG8SH2dvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIaHGdvb2dsZS9h",
            "cGkvYW5ub3RhdGlvbnMucHJvdG8aHmdvb2dsZS9pYW0vdjEvaWFtX3BvbGlj",
            "eS5wcm90bxoaZ29vZ2xlL2lhbS92MS9wb2xpY3kucHJvdG8aI2dvb2dsZS9s",
            "b25ncnVubmluZy9vcGVyYXRpb25zLnByb3RvGiBnb29nbGUvcHJvdG9idWYv",
            "ZmllbGRfbWFzay5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90byLEAgoGRm9sZGVyEgwKBG5hbWUYASABKAkSDgoGcGFyZW50GAIgASgJ",
            "EhQKDGRpc3BsYXlfbmFtZRgDIAEoCRJPCg9saWZlY3ljbGVfc3RhdGUYBCAB",
            "KA4yNi5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkZvbGRlci5M",
            "aWZlY3ljbGVTdGF0ZRIvCgtjcmVhdGVfdGltZRgFIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASLwoLdXBkYXRlX3RpbWUYBiABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wIlMKDkxpZmVjeWNsZVN0YXRlEh8KG0xJ",
            "RkVDWUNMRV9TVEFURV9VTlNQRUNJRklFRBAAEgoKBkFDVElWRRABEhQKEERF",
            "TEVURV9SRVFVRVNURUQQAiJhChJMaXN0Rm9sZGVyc1JlcXVlc3QSDgoGcGFy",
            "ZW50GAEgASgJEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMg",
            "ASgJEhQKDHNob3dfZGVsZXRlZBgEIAEoCCJoChNMaXN0Rm9sZGVyc1Jlc3Bv",
            "bnNlEjgKB2ZvbGRlcnMYASADKAsyJy5nb29nbGUuY2xvdWQucmVzb3VyY2Vt",
            "YW5hZ2VyLnYyLkZvbGRlchIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiTAoU",
            "U2VhcmNoRm9sZGVyc1JlcXVlc3QSEQoJcGFnZV9zaXplGAEgASgFEhIKCnBh",
            "Z2VfdG9rZW4YAiABKAkSDQoFcXVlcnkYAyABKAkiagoVU2VhcmNoRm9sZGVy",
            "c1Jlc3BvbnNlEjgKB2ZvbGRlcnMYASADKAsyJy5nb29nbGUuY2xvdWQucmVz",
            "b3VyY2VtYW5hZ2VyLnYyLkZvbGRlchIXCg9uZXh0X3BhZ2VfdG9rZW4YAiAB",
            "KAkiIAoQR2V0Rm9sZGVyUmVxdWVzdBIMCgRuYW1lGAEgASgJIl4KE0NyZWF0",
            "ZUZvbGRlclJlcXVlc3QSDgoGcGFyZW50GAEgASgJEjcKBmZvbGRlchgCIAEo",
            "CzInLmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIuRm9sZGVyIj0K",
            "EU1vdmVGb2xkZXJSZXF1ZXN0EgwKBG5hbWUYASABKAkSGgoSZGVzdGluYXRp",
            "b25fcGFyZW50GAIgASgJIn8KE1VwZGF0ZUZvbGRlclJlcXVlc3QSNwoGZm9s",
            "ZGVyGAEgASgLMicuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5G",
            "b2xkZXISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "RmllbGRNYXNrIj0KE0RlbGV0ZUZvbGRlclJlcXVlc3QSDAoEbmFtZRgBIAEo",
            "CRIYChByZWN1cnNpdmVfZGVsZXRlGAIgASgIIiUKFVVuZGVsZXRlRm9sZGVy",
            "UmVxdWVzdBIMCgRuYW1lGAEgASgJIvkBCg9Gb2xkZXJPcGVyYXRpb24SFAoM",
            "ZGlzcGxheV9uYW1lGAEgASgJElYKDm9wZXJhdGlvbl90eXBlGAIgASgOMj4u",
            "Z29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5Gb2xkZXJPcGVyYXRp",
            "b24uT3BlcmF0aW9uVHlwZRIVCg1zb3VyY2VfcGFyZW50GAMgASgJEhoKEmRl",
            "c3RpbmF0aW9uX3BhcmVudBgEIAEoCSJFCg1PcGVyYXRpb25UeXBlEh4KGk9Q",
            "RVJBVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASCgoGQ1JFQVRFEAESCAoETU9W",
            "RRACMrMMCgdGb2xkZXJzEo0BCgtMaXN0Rm9sZGVycxIzLmdvb2dsZS5jbG91",
            "ZC5yZXNvdXJjZW1hbmFnZXIudjIuTGlzdEZvbGRlcnNSZXF1ZXN0GjQuZ29v",
            "Z2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5MaXN0Rm9sZGVyc1Jlc3Bv",
            "bnNlIhOC0+STAg0SCy92Mi9mb2xkZXJzEp0BCg1TZWFyY2hGb2xkZXJzEjUu",
            "Z29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5TZWFyY2hGb2xkZXJz",
            "UmVxdWVzdBo2Lmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIuU2Vh",
            "cmNoRm9sZGVyc1Jlc3BvbnNlIh2C0+STAhciEi92Mi9mb2xkZXJzOnNlYXJj",
            "aDoBKhKFAQoJR2V0Rm9sZGVyEjEuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFu",
            "YWdlci52Mi5HZXRGb2xkZXJSZXF1ZXN0GicuZ29vZ2xlLmNsb3VkLnJlc291",
            "cmNlbWFuYWdlci52Mi5Gb2xkZXIiHILT5JMCFhIUL3YyL3tuYW1lPWZvbGRl",
            "cnMvKn0SgAEKDENyZWF0ZUZvbGRlchI0Lmdvb2dsZS5jbG91ZC5yZXNvdXJj",
            "ZW1hbmFnZXIudjIuQ3JlYXRlRm9sZGVyUmVxdWVzdBodLmdvb2dsZS5sb25n",
            "cnVubmluZy5PcGVyYXRpb24iG4LT5JMCFSILL3YyL2ZvbGRlcnM6BmZvbGRl",
            "chKaAQoMVXBkYXRlRm9sZGVyEjQuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFu",
            "YWdlci52Mi5VcGRhdGVGb2xkZXJSZXF1ZXN0GicuZ29vZ2xlLmNsb3VkLnJl",
            "c291cmNlbWFuYWdlci52Mi5Gb2xkZXIiK4LT5JMCJTIbL3YyL3tmb2xkZXIu",
            "bmFtZT1mb2xkZXJzLyp9OgZmb2xkZXIShQEKCk1vdmVGb2xkZXISMi5nb29n",
            "bGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLk1vdmVGb2xkZXJSZXF1ZXN0",
            "Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiIkgtPkkwIeIhkvdjIv",
            "e25hbWU9Zm9sZGVycy8qfTptb3ZlOgEqEosBCgxEZWxldGVGb2xkZXISNC5n",
            "b29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkRlbGV0ZUZvbGRlclJl",
            "cXVlc3QaJy5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkZvbGRl",
            "ciIcgtPkkwIWKhQvdjIve25hbWU9Zm9sZGVycy8qfRKbAQoOVW5kZWxldGVG",
            "b2xkZXISNi5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLlVuZGVs",
            "ZXRlRm9sZGVyUmVxdWVzdBonLmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFn",
            "ZXIudjIuRm9sZGVyIiiC0+STAiIiHS92Mi97bmFtZT1mb2xkZXJzLyp9OnVu",
            "ZGVsZXRlOgEqEnsKDEdldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuR2V0",
            "SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5IjCC0+ST",
            "AioiJS92Mi97cmVzb3VyY2U9Zm9sZGVycy8qfTpnZXRJYW1Qb2xpY3k6ASoS",
            "ewoMU2V0SWFtUG9saWN5EiIuZ29vZ2xlLmlhbS52MS5TZXRJYW1Qb2xpY3lS",
            "ZXF1ZXN0GhUuZ29vZ2xlLmlhbS52MS5Qb2xpY3kiMILT5JMCKiIlL3YyL3ty",
            "ZXNvdXJjZT1mb2xkZXJzLyp9OnNldElhbVBvbGljeToBKhKhAQoSVGVzdElh",
            "bVBlcm1pc3Npb25zEiguZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lv",
            "bnNSZXF1ZXN0GikuZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNS",
            "ZXNwb25zZSI2gtPkkwIwIisvdjIve3Jlc291cmNlPWZvbGRlcnMvKn06dGVz",
            "dElhbVBlcm1pc3Npb25zOgEqQskBCiNjb20uZ29vZ2xlLmNsb3VkLnJlc291",
            "cmNlbWFuYWdlci52MkIMRm9sZGVyc1Byb3RvUAFaTmdvb2dsZS5nb2xhbmcu",
            "b3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvcmVzb3VyY2VtYW5hZ2Vy",
            "L3YyO3Jlc291cmNlbWFuYWdlcqoCH0dvb2dsZS5DbG91ZC5SZXNvdXJjZU1h",
            "bmFnZXIuVjLKAh9Hb29nbGVcQ2xvdWRcUmVzb3VyY2VNYW5hZ2VyXFYyYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Iam.V1.IamPolicyReflection.Descriptor, global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.Folder), global::Google.Cloud.ResourceManager.V2.Folder.Parser, new[]{ "Name", "Parent", "DisplayName", "LifecycleState", "CreateTime", "UpdateTime" }, null, new[]{ typeof(global::Google.Cloud.ResourceManager.V2.Folder.Types.LifecycleState) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.ListFoldersRequest), global::Google.Cloud.ResourceManager.V2.ListFoldersRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "ShowDeleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.ListFoldersResponse), global::Google.Cloud.ResourceManager.V2.ListFoldersResponse.Parser, new[]{ "Folders", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.SearchFoldersRequest), global::Google.Cloud.ResourceManager.V2.SearchFoldersRequest.Parser, new[]{ "PageSize", "PageToken", "Query" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.SearchFoldersResponse), global::Google.Cloud.ResourceManager.V2.SearchFoldersResponse.Parser, new[]{ "Folders", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.GetFolderRequest), global::Google.Cloud.ResourceManager.V2.GetFolderRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.CreateFolderRequest), global::Google.Cloud.ResourceManager.V2.CreateFolderRequest.Parser, new[]{ "Parent", "Folder" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.MoveFolderRequest), global::Google.Cloud.ResourceManager.V2.MoveFolderRequest.Parser, new[]{ "Name", "DestinationParent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.UpdateFolderRequest), global::Google.Cloud.ResourceManager.V2.UpdateFolderRequest.Parser, new[]{ "Folder", "UpdateMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.DeleteFolderRequest), global::Google.Cloud.ResourceManager.V2.DeleteFolderRequest.Parser, new[]{ "Name", "RecursiveDelete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.UndeleteFolderRequest), global::Google.Cloud.ResourceManager.V2.UndeleteFolderRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ResourceManager.V2.FolderOperation), global::Google.Cloud.ResourceManager.V2.FolderOperation.Parser, new[]{ "DisplayName", "OperationType", "SourceParent", "DestinationParent" }, null, new[]{ typeof(global::Google.Cloud.ResourceManager.V2.FolderOperation.Types.OperationType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A Folder in an Organization's resource hierarchy, used to
  /// organize that Organization's resources.
  /// </summary>
  public sealed partial class Folder : pb::IMessage<Folder> {
    private static readonly pb::MessageParser<Folder> _parser = new pb::MessageParser<Folder>(() => new Folder());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Folder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Folder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Folder(Folder other) : this() {
      name_ = other.name_;
      parent_ = other.parent_;
      displayName_ = other.displayName_;
      lifecycleState_ = other.lifecycleState_;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      UpdateTime = other.updateTime_ != null ? other.UpdateTime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Folder Clone() {
      return new Folder(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The resource name of the Folder.
    /// Its format is `folders/{folder_id}`, for example: "folders/1234".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    /// <summary>
    /// The Folder’s parent's resource name.
    /// Updates to the folder's parent must be performed via [MoveFolders].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private string displayName_ = "";
    /// <summary>
    /// The folder’s display name.
    /// A folder’s display name must be unique amongst its siblings, e.g.
    /// no two folders with the same parent can share the same display name.
    /// The display name must start and end with a letter or digit, may contain
    /// letters, digits, spaces, hyphens and underscores and can be no longer
    /// than 30 characters. This is captured by the regular expression:
    /// [\p{L}\p{N}]({\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lifecycle_state" field.</summary>
    public const int LifecycleStateFieldNumber = 4;
    private global::Google.Cloud.ResourceManager.V2.Folder.Types.LifecycleState lifecycleState_ = 0;
    /// <summary>
    /// Output only.  The lifecycle state of the folder.
    /// Updates to the lifecycle_state must be performed via
    /// [DeleteFolder] and [UndeleteFolder].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ResourceManager.V2.Folder.Types.LifecycleState LifecycleState {
      get { return lifecycleState_; }
      set {
        lifecycleState_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Timestamp when the Folder was created. Assigned by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Timestamp when the Folder was last modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Folder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Folder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parent != other.Parent) return false;
      if (DisplayName != other.DisplayName) return false;
      if (LifecycleState != other.LifecycleState) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (LifecycleState != 0) hash ^= LifecycleState.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (LifecycleState != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) LifecycleState);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (LifecycleState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LifecycleState);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Folder other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.LifecycleState != 0) {
        LifecycleState = other.LifecycleState;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 32: {
            lifecycleState_ = (global::Google.Cloud.ResourceManager.V2.Folder.Types.LifecycleState) input.ReadEnum();
            break;
          }
          case 42: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(updateTime_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Folder message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Folder lifecycle states.
      /// </summary>
      public enum LifecycleState {
        /// <summary>
        /// Unspecified state.
        /// </summary>
        [pbr::OriginalName("LIFECYCLE_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The normal and active state.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 1,
        /// <summary>
        /// The folder has been marked for deletion by the user.
        /// </summary>
        [pbr::OriginalName("DELETE_REQUESTED")] DeleteRequested = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// The ListFolders request message.
  /// </summary>
  public sealed partial class ListFoldersRequest : pb::IMessage<ListFoldersRequest> {
    private static readonly pb::MessageParser<ListFoldersRequest> _parser = new pb::MessageParser<ListFoldersRequest>(() => new ListFoldersRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFoldersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFoldersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFoldersRequest(ListFoldersRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      showDeleted_ = other.showDeleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFoldersRequest Clone() {
      return new ListFoldersRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The resource name of the Organization or Folder whose Folders are
    /// being listed.
    /// Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
    /// Access to this method is controlled by checking the
    /// `resourcemanager.folders.list` permission on the `parent`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of Folders to return in the response.
    /// This field is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListFolders`
    /// that indicates where this listing should continue from.
    /// This field is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "show_deleted" field.</summary>
    public const int ShowDeletedFieldNumber = 4;
    private bool showDeleted_;
    /// <summary>
    /// Controls whether Folders in the [DELETE_REQUESTED} state should
    /// be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowDeleted {
      get { return showDeleted_; }
      set {
        showDeleted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFoldersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFoldersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (ShowDeleted != other.ShowDeleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (ShowDeleted != false) hash ^= ShowDeleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (ShowDeleted != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShowDeleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (ShowDeleted != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFoldersRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.ShowDeleted != false) {
        ShowDeleted = other.ShowDeleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            ShowDeleted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The ListFolders response message.
  /// </summary>
  public sealed partial class ListFoldersResponse : pb::IMessage<ListFoldersResponse> {
    private static readonly pb::MessageParser<ListFoldersResponse> _parser = new pb::MessageParser<ListFoldersResponse>(() => new ListFoldersResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFoldersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFoldersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFoldersResponse(ListFoldersResponse other) : this() {
      folders_ = other.folders_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFoldersResponse Clone() {
      return new ListFoldersResponse(this);
    }

    /// <summary>Field number for the "folders" field.</summary>
    public const int FoldersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.ResourceManager.V2.Folder> _repeated_folders_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.ResourceManager.V2.Folder.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ResourceManager.V2.Folder> folders_ = new pbc::RepeatedField<global::Google.Cloud.ResourceManager.V2.Folder>();
    /// <summary>
    /// A possibly paginated list of Folders that are direct descendants of
    /// the specified parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ResourceManager.V2.Folder> Folders {
      get { return folders_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListFolders`
    /// that indicates from where listing should continue.
    /// This field is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFoldersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFoldersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!folders_.Equals(other.folders_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= folders_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      folders_.WriteTo(output, _repeated_folders_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += folders_.CalculateSize(_repeated_folders_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFoldersResponse other) {
      if (other == null) {
        return;
      }
      folders_.Add(other.folders_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            folders_.AddEntriesFrom(input, _repeated_folders_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message for searching folders.
  /// </summary>
  public sealed partial class SearchFoldersRequest : pb::IMessage<SearchFoldersRequest> {
    private static readonly pb::MessageParser<SearchFoldersRequest> _parser = new pb::MessageParser<SearchFoldersRequest>(() => new SearchFoldersRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchFoldersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFoldersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFoldersRequest(SearchFoldersRequest other) : this() {
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      query_ = other.query_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFoldersRequest Clone() {
      return new SearchFoldersRequest(this);
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 1;
    private int pageSize_;
    /// <summary>
    /// The maximum number of folders to return in the response.
    /// This field is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `SearchFolders`
    /// that indicates from where search should continue.
    /// This field is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 3;
    private string query_ = "";
    /// <summary>
    /// Search criteria used to select the Folders to return.
    /// If no search criteria is specified then all accessible folders will be
    /// returned.
    ///
    /// Query expressions can be used to restrict results based upon displayName,
    /// lifecycleState and parent, where the operators `=`, `NOT`, `AND` and `OR`
    /// can be used along with the suffix wildcard symbol `*`.
    ///
    /// Some example queries are:
    /// |Query|Description|
    /// |------|-----------|
    /// |displayName=Test*|Folders whose display name starts with "Test".|
    /// |lifecycleState=ACTIVE|Folders whose lifecycleState is ACTIVE.|
    /// |parent=folders/123|Folders whose parent is "folders/123".|
    /// |parent=folders/123 AND lifecycleState=ACTIVE|Active folders whose
    /// parent is "folders/123".|
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchFoldersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchFoldersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Query != other.Query) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Query);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchFoldersRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PageSize = input.ReadInt32();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 26: {
            Query = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message for searching folders.
  /// </summary>
  public sealed partial class SearchFoldersResponse : pb::IMessage<SearchFoldersResponse> {
    private static readonly pb::MessageParser<SearchFoldersResponse> _parser = new pb::MessageParser<SearchFoldersResponse>(() => new SearchFoldersResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchFoldersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFoldersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFoldersResponse(SearchFoldersResponse other) : this() {
      folders_ = other.folders_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFoldersResponse Clone() {
      return new SearchFoldersResponse(this);
    }

    /// <summary>Field number for the "folders" field.</summary>
    public const int FoldersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.ResourceManager.V2.Folder> _repeated_folders_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.ResourceManager.V2.Folder.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ResourceManager.V2.Folder> folders_ = new pbc::RepeatedField<global::Google.Cloud.ResourceManager.V2.Folder>();
    /// <summary>
    /// A possibly paginated folder search results.
    /// the specified parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ResourceManager.V2.Folder> Folders {
      get { return folders_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `SearchFolders`
    /// that indicates from where searching should continue.
    /// This field is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchFoldersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchFoldersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!folders_.Equals(other.folders_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= folders_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      folders_.WriteTo(output, _repeated_folders_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += folders_.CalculateSize(_repeated_folders_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchFoldersResponse other) {
      if (other == null) {
        return;
      }
      folders_.Add(other.folders_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            folders_.AddEntriesFrom(input, _repeated_folders_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The GetFolder request message.
  /// </summary>
  public sealed partial class GetFolderRequest : pb::IMessage<GetFolderRequest> {
    private static readonly pb::MessageParser<GetFolderRequest> _parser = new pb::MessageParser<GetFolderRequest>(() => new GetFolderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFolderRequest(GetFolderRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFolderRequest Clone() {
      return new GetFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Folder to retrieve.
    /// Must be of the form `folders/{folder_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The CreateFolder request message.
  /// </summary>
  public sealed partial class CreateFolderRequest : pb::IMessage<CreateFolderRequest> {
    private static readonly pb::MessageParser<CreateFolderRequest> _parser = new pb::MessageParser<CreateFolderRequest>(() => new CreateFolderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFolderRequest(CreateFolderRequest other) : this() {
      parent_ = other.parent_;
      Folder = other.folder_ != null ? other.Folder.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFolderRequest Clone() {
      return new CreateFolderRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The resource name of the new Folder's parent.
    /// Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder" field.</summary>
    public const int FolderFieldNumber = 2;
    private global::Google.Cloud.ResourceManager.V2.Folder folder_;
    /// <summary>
    /// The Folder being created, only the display name will be consulted.
    /// All other fields will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ResourceManager.V2.Folder Folder {
      get { return folder_; }
      set {
        folder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Folder, other.Folder)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (folder_ != null) hash ^= Folder.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (folder_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Folder);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (folder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Folder);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.folder_ != null) {
        if (folder_ == null) {
          folder_ = new global::Google.Cloud.ResourceManager.V2.Folder();
        }
        Folder.MergeFrom(other.Folder);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (folder_ == null) {
              folder_ = new global::Google.Cloud.ResourceManager.V2.Folder();
            }
            input.ReadMessage(folder_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The MoveFolder request message.
  /// </summary>
  public sealed partial class MoveFolderRequest : pb::IMessage<MoveFolderRequest> {
    private static readonly pb::MessageParser<MoveFolderRequest> _parser = new pb::MessageParser<MoveFolderRequest>(() => new MoveFolderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveFolderRequest(MoveFolderRequest other) : this() {
      name_ = other.name_;
      destinationParent_ = other.destinationParent_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveFolderRequest Clone() {
      return new MoveFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Folder to move.
    /// Must be of the form folders/{folder_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destination_parent" field.</summary>
    public const int DestinationParentFieldNumber = 2;
    private string destinationParent_ = "";
    /// <summary>
    /// The resource name of the Folder or Organization to reparent
    /// the folder under.
    /// Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationParent {
      get { return destinationParent_; }
      set {
        destinationParent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DestinationParent != other.DestinationParent) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DestinationParent.Length != 0) hash ^= DestinationParent.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DestinationParent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DestinationParent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DestinationParent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationParent);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DestinationParent.Length != 0) {
        DestinationParent = other.DestinationParent;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DestinationParent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message for updating a folder's display name.
  /// </summary>
  public sealed partial class UpdateFolderRequest : pb::IMessage<UpdateFolderRequest> {
    private static readonly pb::MessageParser<UpdateFolderRequest> _parser = new pb::MessageParser<UpdateFolderRequest>(() => new UpdateFolderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFolderRequest(UpdateFolderRequest other) : this() {
      Folder = other.folder_ != null ? other.Folder.Clone() : null;
      UpdateMask = other.updateMask_ != null ? other.UpdateMask.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFolderRequest Clone() {
      return new UpdateFolderRequest(this);
    }

    /// <summary>Field number for the "folder" field.</summary>
    public const int FolderFieldNumber = 1;
    private global::Google.Cloud.ResourceManager.V2.Folder folder_;
    /// <summary>
    /// The new definition of the Folder. It must include a
    /// a `name` and `display_name` field. The other fields
    /// will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ResourceManager.V2.Folder Folder {
      get { return folder_; }
      set {
        folder_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Fields to be updated.
    /// Only the `display_name` can be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Folder, other.Folder)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (folder_ != null) hash ^= Folder.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (folder_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Folder);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (folder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Folder);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.folder_ != null) {
        if (folder_ == null) {
          folder_ = new global::Google.Cloud.ResourceManager.V2.Folder();
        }
        Folder.MergeFrom(other.Folder);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          updateMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (folder_ == null) {
              folder_ = new global::Google.Cloud.ResourceManager.V2.Folder();
            }
            input.ReadMessage(folder_);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              updateMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(updateMask_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The DeleteFolder request message.
  /// </summary>
  public sealed partial class DeleteFolderRequest : pb::IMessage<DeleteFolderRequest> {
    private static readonly pb::MessageParser<DeleteFolderRequest> _parser = new pb::MessageParser<DeleteFolderRequest>(() => new DeleteFolderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFolderRequest(DeleteFolderRequest other) : this() {
      name_ = other.name_;
      recursiveDelete_ = other.recursiveDelete_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFolderRequest Clone() {
      return new DeleteFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// the resource name of the Folder to be deleted.
    /// Must be of the form `folders/{folder_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recursive_delete" field.</summary>
    public const int RecursiveDeleteFieldNumber = 2;
    private bool recursiveDelete_;
    /// <summary>
    /// Instructs DeleteFolderAction to delete a folder even when the folder is not
    /// empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RecursiveDelete {
      get { return recursiveDelete_; }
      set {
        recursiveDelete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RecursiveDelete != other.RecursiveDelete) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RecursiveDelete != false) hash ^= RecursiveDelete.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (RecursiveDelete != false) {
        output.WriteRawTag(16);
        output.WriteBool(RecursiveDelete);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RecursiveDelete != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RecursiveDelete != false) {
        RecursiveDelete = other.RecursiveDelete;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            RecursiveDelete = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The UndeleteFolder request message.
  /// </summary>
  public sealed partial class UndeleteFolderRequest : pb::IMessage<UndeleteFolderRequest> {
    private static readonly pb::MessageParser<UndeleteFolderRequest> _parser = new pb::MessageParser<UndeleteFolderRequest>(() => new UndeleteFolderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UndeleteFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndeleteFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndeleteFolderRequest(UndeleteFolderRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndeleteFolderRequest Clone() {
      return new UndeleteFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Folder to undelete.
    /// Must be of the form `folders/{folder_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UndeleteFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UndeleteFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UndeleteFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata describing a long running folder operation
  /// </summary>
  public sealed partial class FolderOperation : pb::IMessage<FolderOperation> {
    private static readonly pb::MessageParser<FolderOperation> _parser = new pb::MessageParser<FolderOperation>(() => new FolderOperation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FolderOperation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ResourceManager.V2.FoldersReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolderOperation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolderOperation(FolderOperation other) : this() {
      displayName_ = other.displayName_;
      operationType_ = other.operationType_;
      sourceParent_ = other.sourceParent_;
      destinationParent_ = other.destinationParent_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolderOperation Clone() {
      return new FolderOperation(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private string displayName_ = "";
    /// <summary>
    /// The display name of the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_type" field.</summary>
    public const int OperationTypeFieldNumber = 2;
    private global::Google.Cloud.ResourceManager.V2.FolderOperation.Types.OperationType operationType_ = 0;
    /// <summary>
    /// The type of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ResourceManager.V2.FolderOperation.Types.OperationType OperationType {
      get { return operationType_; }
      set {
        operationType_ = value;
      }
    }

    /// <summary>Field number for the "source_parent" field.</summary>
    public const int SourceParentFieldNumber = 3;
    private string sourceParent_ = "";
    /// <summary>
    /// The resource name of the folder's parent.
    /// Only applicable when the operation_type is MOVE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceParent {
      get { return sourceParent_; }
      set {
        sourceParent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destination_parent" field.</summary>
    public const int DestinationParentFieldNumber = 4;
    private string destinationParent_ = "";
    /// <summary>
    /// The resource name of the folder or organization we are either creating
    /// the folder under or moving the folder to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationParent {
      get { return destinationParent_; }
      set {
        destinationParent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FolderOperation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FolderOperation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (OperationType != other.OperationType) return false;
      if (SourceParent != other.SourceParent) return false;
      if (DestinationParent != other.DestinationParent) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (OperationType != 0) hash ^= OperationType.GetHashCode();
      if (SourceParent.Length != 0) hash ^= SourceParent.GetHashCode();
      if (DestinationParent.Length != 0) hash ^= DestinationParent.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (OperationType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OperationType);
      }
      if (SourceParent.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceParent);
      }
      if (DestinationParent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DestinationParent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (OperationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationType);
      }
      if (SourceParent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceParent);
      }
      if (DestinationParent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationParent);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FolderOperation other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.OperationType != 0) {
        OperationType = other.OperationType;
      }
      if (other.SourceParent.Length != 0) {
        SourceParent = other.SourceParent;
      }
      if (other.DestinationParent.Length != 0) {
        DestinationParent = other.DestinationParent;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 16: {
            operationType_ = (global::Google.Cloud.ResourceManager.V2.FolderOperation.Types.OperationType) input.ReadEnum();
            break;
          }
          case 26: {
            SourceParent = input.ReadString();
            break;
          }
          case 34: {
            DestinationParent = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FolderOperation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type of operation that failed.
      /// </summary>
      public enum OperationType {
        /// <summary>
        /// Operation type not specified.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A create folder operation.
        /// </summary>
        [pbr::OriginalName("CREATE")] Create = 1,
        /// <summary>
        /// A move folder operation.
        /// </summary>
        [pbr::OriginalName("MOVE")] Move = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
