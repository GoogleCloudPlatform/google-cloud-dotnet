// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/videointelligence/v1/video_intelligence.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.VideoIntelligence.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/videointelligence/v1/video_intelligence.proto</summary>
  public static partial class VideoIntelligenceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/videointelligence/v1/video_intelligence.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoIntelligenceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjpnb29nbGUvY2xvdWQvdmlkZW9pbnRlbGxpZ2VuY2UvdjEvdmlkZW9faW50",
            "ZWxsaWdlbmNlLnByb3RvEiFnb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2Vu",
            "Y2UudjEaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aI2dvb2dsZS9s",
            "b25ncnVubmluZy9vcGVyYXRpb25zLnByb3RvGh5nb29nbGUvcHJvdG9idWYv",
            "ZHVyYXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJv",
            "dG8aF2dvb2dsZS9ycGMvc3RhdHVzLnByb3RvIu8BChRBbm5vdGF0ZVZpZGVv",
            "UmVxdWVzdBIRCglpbnB1dF91cmkYASABKAkSFQoNaW5wdXRfY29udGVudBgG",
            "IAEoDBI8CghmZWF0dXJlcxgCIAMoDjIqLmdvb2dsZS5jbG91ZC52aWRlb2lu",
            "dGVsbGlnZW5jZS52MS5GZWF0dXJlEkYKDXZpZGVvX2NvbnRleHQYAyABKAsy",
            "Ly5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2VuY2UudjEuVmlkZW9Db250",
            "ZXh0EhIKCm91dHB1dF91cmkYBCABKAkSEwoLbG9jYXRpb25faWQYBSABKAki",
            "0wMKDFZpZGVvQ29udGV4dBJBCghzZWdtZW50cxgBIAMoCzIvLmdvb2dsZS5j",
            "bG91ZC52aWRlb2ludGVsbGlnZW5jZS52MS5WaWRlb1NlZ21lbnQSVwoWbGFi",
            "ZWxfZGV0ZWN0aW9uX2NvbmZpZxgCIAEoCzI3Lmdvb2dsZS5jbG91ZC52aWRl",
            "b2ludGVsbGlnZW5jZS52MS5MYWJlbERldGVjdGlvbkNvbmZpZxJiChxzaG90",
            "X2NoYW5nZV9kZXRlY3Rpb25fY29uZmlnGAMgASgLMjwuZ29vZ2xlLmNsb3Vk",
            "LnZpZGVvaW50ZWxsaWdlbmNlLnYxLlNob3RDaGFuZ2VEZXRlY3Rpb25Db25m",
            "aWcSbAohZXhwbGljaXRfY29udGVudF9kZXRlY3Rpb25fY29uZmlnGAQgASgL",
            "MkEuZ29vZ2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNlLnYxLkV4cGxpY2l0",
            "Q29udGVudERldGVjdGlvbkNvbmZpZxJVChVmYWNlX2RldGVjdGlvbl9jb25m",
            "aWcYBSABKAsyNi5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2VuY2UudjEu",
            "RmFjZURldGVjdGlvbkNvbmZpZyKVAQoUTGFiZWxEZXRlY3Rpb25Db25maWcS",
            "UwoUbGFiZWxfZGV0ZWN0aW9uX21vZGUYASABKA4yNS5nb29nbGUuY2xvdWQu",
            "dmlkZW9pbnRlbGxpZ2VuY2UudjEuTGFiZWxEZXRlY3Rpb25Nb2RlEhkKEXN0",
            "YXRpb25hcnlfY2FtZXJhGAIgASgIEg0KBW1vZGVsGAMgASgJIioKGVNob3RD",
            "aGFuZ2VEZXRlY3Rpb25Db25maWcSDQoFbW9kZWwYASABKAkiLwoeRXhwbGlj",
            "aXRDb250ZW50RGV0ZWN0aW9uQ29uZmlnEg0KBW1vZGVsGAEgASgJIkQKE0Zh",
            "Y2VEZXRlY3Rpb25Db25maWcSDQoFbW9kZWwYASABKAkSHgoWaW5jbHVkZV9i",
            "b3VuZGluZ19ib3hlcxgCIAEoCCJ4CgxWaWRlb1NlZ21lbnQSNAoRc3RhcnRf",
            "dGltZV9vZmZzZXQYASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24S",
            "MgoPZW5kX3RpbWVfb2Zmc2V0GAIgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1",
            "cmF0aW9uImQKDExhYmVsU2VnbWVudBJACgdzZWdtZW50GAEgASgLMi8uZ29v",
            "Z2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNlLnYxLlZpZGVvU2VnbWVudBIS",
            "Cgpjb25maWRlbmNlGAIgASgCIlAKCkxhYmVsRnJhbWUSLgoLdGltZV9vZmZz",
            "ZXQYASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SEgoKY29uZmlk",
            "ZW5jZRgCIAEoAiJHCgZFbnRpdHkSEQoJZW50aXR5X2lkGAEgASgJEhMKC2Rl",
            "c2NyaXB0aW9uGAIgASgJEhUKDWxhbmd1YWdlX2NvZGUYAyABKAkilAIKD0xh",
            "YmVsQW5ub3RhdGlvbhI5CgZlbnRpdHkYASABKAsyKS5nb29nbGUuY2xvdWQu",
            "dmlkZW9pbnRlbGxpZ2VuY2UudjEuRW50aXR5EkQKEWNhdGVnb3J5X2VudGl0",
            "aWVzGAIgAygLMikuZ29vZ2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNlLnYx",
            "LkVudGl0eRJBCghzZWdtZW50cxgDIAMoCzIvLmdvb2dsZS5jbG91ZC52aWRl",
            "b2ludGVsbGlnZW5jZS52MS5MYWJlbFNlZ21lbnQSPQoGZnJhbWVzGAQgAygL",
            "Mi0uZ29vZ2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNlLnYxLkxhYmVsRnJh",
            "bWUilQEKFEV4cGxpY2l0Q29udGVudEZyYW1lEi4KC3RpbWVfb2Zmc2V0GAEg",
            "ASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEk0KFnBvcm5vZ3JhcGh5",
            "X2xpa2VsaWhvb2QYAiABKA4yLS5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxp",
            "Z2VuY2UudjEuTGlrZWxpaG9vZCJkChlFeHBsaWNpdENvbnRlbnRBbm5vdGF0",
            "aW9uEkcKBmZyYW1lcxgBIAMoCzI3Lmdvb2dsZS5jbG91ZC52aWRlb2ludGVs",
            "bGlnZW5jZS52MS5FeHBsaWNpdENvbnRlbnRGcmFtZSJRChVOb3JtYWxpemVk",
            "Qm91bmRpbmdCb3gSDAoEbGVmdBgBIAEoAhILCgN0b3AYAiABKAISDQoFcmln",
            "aHQYAyABKAISDgoGYm90dG9tGAQgASgCIk8KC0ZhY2VTZWdtZW50EkAKB3Nl",
            "Z21lbnQYASABKAsyLy5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2VuY2Uu",
            "djEuVmlkZW9TZWdtZW50IpgBCglGYWNlRnJhbWUSWwoZbm9ybWFsaXplZF9i",
            "b3VuZGluZ19ib3hlcxgBIAMoCzI4Lmdvb2dsZS5jbG91ZC52aWRlb2ludGVs",
            "bGlnZW5jZS52MS5Ob3JtYWxpemVkQm91bmRpbmdCb3gSLgoLdGltZV9vZmZz",
            "ZXQYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24iowEKDkZhY2VB",
            "bm5vdGF0aW9uEhEKCXRodW1ibmFpbBgBIAEoDBJACghzZWdtZW50cxgCIAMo",
            "CzIuLmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGlnZW5jZS52MS5GYWNlU2Vn",
            "bWVudBI8CgZmcmFtZXMYAyADKAsyLC5nb29nbGUuY2xvdWQudmlkZW9pbnRl",
            "bGxpZ2VuY2UudjEuRmFjZUZyYW1lIsEEChZWaWRlb0Fubm90YXRpb25SZXN1",
            "bHRzEhEKCWlucHV0X3VyaRgBIAEoCRJVChlzZWdtZW50X2xhYmVsX2Fubm90",
            "YXRpb25zGAIgAygLMjIuZ29vZ2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNl",
            "LnYxLkxhYmVsQW5ub3RhdGlvbhJSChZzaG90X2xhYmVsX2Fubm90YXRpb25z",
            "GAMgAygLMjIuZ29vZ2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNlLnYxLkxh",
            "YmVsQW5ub3RhdGlvbhJTChdmcmFtZV9sYWJlbF9hbm5vdGF0aW9ucxgEIAMo",
            "CzIyLmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGlnZW5jZS52MS5MYWJlbEFu",
            "bm90YXRpb24SSwoQZmFjZV9hbm5vdGF0aW9ucxgFIAMoCzIxLmdvb2dsZS5j",
            "bG91ZC52aWRlb2ludGVsbGlnZW5jZS52MS5GYWNlQW5ub3RhdGlvbhJJChBz",
            "aG90X2Fubm90YXRpb25zGAYgAygLMi8uZ29vZ2xlLmNsb3VkLnZpZGVvaW50",
            "ZWxsaWdlbmNlLnYxLlZpZGVvU2VnbWVudBJZChNleHBsaWNpdF9hbm5vdGF0",
            "aW9uGAcgASgLMjwuZ29vZ2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNlLnYx",
            "LkV4cGxpY2l0Q29udGVudEFubm90YXRpb24SIQoFZXJyb3IYCSABKAsyEi5n",
            "b29nbGUucnBjLlN0YXR1cyJuChVBbm5vdGF0ZVZpZGVvUmVzcG9uc2USVQoS",
            "YW5ub3RhdGlvbl9yZXN1bHRzGAEgAygLMjkuZ29vZ2xlLmNsb3VkLnZpZGVv",
            "aW50ZWxsaWdlbmNlLnYxLlZpZGVvQW5ub3RhdGlvblJlc3VsdHMipwEKF1Zp",
            "ZGVvQW5ub3RhdGlvblByb2dyZXNzEhEKCWlucHV0X3VyaRgBIAEoCRIYChBw",
            "cm9ncmVzc19wZXJjZW50GAIgASgFEi4KCnN0YXJ0X3RpbWUYAyABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC3VwZGF0ZV90aW1lGAQgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJwChVBbm5vdGF0ZVZpZGVv",
            "UHJvZ3Jlc3MSVwoTYW5ub3RhdGlvbl9wcm9ncmVzcxgBIAMoCzI6Lmdvb2ds",
            "ZS5jbG91ZC52aWRlb2ludGVsbGlnZW5jZS52MS5WaWRlb0Fubm90YXRpb25Q",
            "cm9ncmVzcyqGAQoHRmVhdHVyZRIXChNGRUFUVVJFX1VOU1BFQ0lGSUVEEAAS",
            "EwoPTEFCRUxfREVURUNUSU9OEAESGQoVU0hPVF9DSEFOR0VfREVURUNUSU9O",
            "EAISHgoaRVhQTElDSVRfQ09OVEVOVF9ERVRFQ1RJT04QAxISCg5GQUNFX0RF",
            "VEVDVElPThAEKnIKEkxhYmVsRGV0ZWN0aW9uTW9kZRIkCiBMQUJFTF9ERVRF",
            "Q1RJT05fTU9ERV9VTlNQRUNJRklFRBAAEg0KCVNIT1RfTU9ERRABEg4KCkZS",
            "QU1FX01PREUQAhIXChNTSE9UX0FORF9GUkFNRV9NT0RFEAMqdAoKTGlrZWxp",
            "aG9vZBIaChZMSUtFTElIT09EX1VOU1BFQ0lGSUVEEAASEQoNVkVSWV9VTkxJ",
            "S0VMWRABEgwKCFVOTElLRUxZEAISDAoIUE9TU0lCTEUQAxIKCgZMSUtFTFkQ",
            "BBIPCgtWRVJZX0xJS0VMWRAFMqQBChhWaWRlb0ludGVsbGlnZW5jZVNlcnZp",
            "Y2UShwEKDUFubm90YXRlVmlkZW8SNy5nb29nbGUuY2xvdWQudmlkZW9pbnRl",
            "bGxpZ2VuY2UudjEuQW5ub3RhdGVWaWRlb1JlcXVlc3QaHS5nb29nbGUubG9u",
            "Z3J1bm5pbmcuT3BlcmF0aW9uIh6C0+STAhgiEy92MS92aWRlb3M6YW5ub3Rh",
            "dGU6ASpCwAEKJWNvbS5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2VuY2Uu",
            "djFCHVZpZGVvSW50ZWxsaWdlbmNlU2VydmljZVByb3RvUAFaUmdvb2dsZS5n",
            "b2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvdmlkZW9pbnRl",
            "bGxpZ2VuY2UvdjE7dmlkZW9pbnRlbGxpZ2VuY2WqAiFHb29nbGUuQ2xvdWQu",
            "VmlkZW9JbnRlbGxpZ2VuY2UuVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.VideoIntelligence.V1.Feature), typeof(global::Google.Cloud.VideoIntelligence.V1.LabelDetectionMode), typeof(global::Google.Cloud.VideoIntelligence.V1.Likelihood), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.AnnotateVideoRequest), global::Google.Cloud.VideoIntelligence.V1.AnnotateVideoRequest.Parser, new[]{ "InputUri", "InputContent", "Features", "VideoContext", "OutputUri", "LocationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.VideoContext), global::Google.Cloud.VideoIntelligence.V1.VideoContext.Parser, new[]{ "Segments", "LabelDetectionConfig", "ShotChangeDetectionConfig", "ExplicitContentDetectionConfig", "FaceDetectionConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.LabelDetectionConfig), global::Google.Cloud.VideoIntelligence.V1.LabelDetectionConfig.Parser, new[]{ "LabelDetectionMode", "StationaryCamera", "Model" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.ShotChangeDetectionConfig), global::Google.Cloud.VideoIntelligence.V1.ShotChangeDetectionConfig.Parser, new[]{ "Model" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.ExplicitContentDetectionConfig), global::Google.Cloud.VideoIntelligence.V1.ExplicitContentDetectionConfig.Parser, new[]{ "Model" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.FaceDetectionConfig), global::Google.Cloud.VideoIntelligence.V1.FaceDetectionConfig.Parser, new[]{ "Model", "IncludeBoundingBoxes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.VideoSegment), global::Google.Cloud.VideoIntelligence.V1.VideoSegment.Parser, new[]{ "StartTimeOffset", "EndTimeOffset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.LabelSegment), global::Google.Cloud.VideoIntelligence.V1.LabelSegment.Parser, new[]{ "Segment", "Confidence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.LabelFrame), global::Google.Cloud.VideoIntelligence.V1.LabelFrame.Parser, new[]{ "TimeOffset", "Confidence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.Entity), global::Google.Cloud.VideoIntelligence.V1.Entity.Parser, new[]{ "EntityId", "Description", "LanguageCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation), global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation.Parser, new[]{ "Entity", "CategoryEntities", "Segments", "Frames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.ExplicitContentFrame), global::Google.Cloud.VideoIntelligence.V1.ExplicitContentFrame.Parser, new[]{ "TimeOffset", "PornographyLikelihood" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.ExplicitContentAnnotation), global::Google.Cloud.VideoIntelligence.V1.ExplicitContentAnnotation.Parser, new[]{ "Frames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.NormalizedBoundingBox), global::Google.Cloud.VideoIntelligence.V1.NormalizedBoundingBox.Parser, new[]{ "Left", "Top", "Right", "Bottom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.FaceSegment), global::Google.Cloud.VideoIntelligence.V1.FaceSegment.Parser, new[]{ "Segment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.FaceFrame), global::Google.Cloud.VideoIntelligence.V1.FaceFrame.Parser, new[]{ "NormalizedBoundingBoxes", "TimeOffset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.FaceAnnotation), global::Google.Cloud.VideoIntelligence.V1.FaceAnnotation.Parser, new[]{ "Thumbnail", "Segments", "Frames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationResults), global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationResults.Parser, new[]{ "InputUri", "SegmentLabelAnnotations", "ShotLabelAnnotations", "FrameLabelAnnotations", "FaceAnnotations", "ShotAnnotations", "ExplicitAnnotation", "Error" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.AnnotateVideoResponse), global::Google.Cloud.VideoIntelligence.V1.AnnotateVideoResponse.Parser, new[]{ "AnnotationResults" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationProgress), global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationProgress.Parser, new[]{ "InputUri", "ProgressPercent", "StartTime", "UpdateTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1.AnnotateVideoProgress), global::Google.Cloud.VideoIntelligence.V1.AnnotateVideoProgress.Parser, new[]{ "AnnotationProgress" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Video annotation feature.
  /// </summary>
  public enum Feature {
    /// <summary>
    /// Unspecified.
    /// </summary>
    [pbr::OriginalName("FEATURE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Label detection. Detect objects, such as dog or flower.
    /// </summary>
    [pbr::OriginalName("LABEL_DETECTION")] LabelDetection = 1,
    /// <summary>
    /// Shot change detection.
    /// </summary>
    [pbr::OriginalName("SHOT_CHANGE_DETECTION")] ShotChangeDetection = 2,
    /// <summary>
    /// Explicit content detection.
    /// </summary>
    [pbr::OriginalName("EXPLICIT_CONTENT_DETECTION")] ExplicitContentDetection = 3,
    /// <summary>
    /// Human face detection and tracking.
    /// </summary>
    [pbr::OriginalName("FACE_DETECTION")] FaceDetection = 4,
  }

  /// <summary>
  /// Label detection mode.
  /// </summary>
  public enum LabelDetectionMode {
    /// <summary>
    /// Unspecified.
    /// </summary>
    [pbr::OriginalName("LABEL_DETECTION_MODE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Detect shot-level labels.
    /// </summary>
    [pbr::OriginalName("SHOT_MODE")] ShotMode = 1,
    /// <summary>
    /// Detect frame-level labels.
    /// </summary>
    [pbr::OriginalName("FRAME_MODE")] FrameMode = 2,
    /// <summary>
    /// Detect both shot-level and frame-level labels.
    /// </summary>
    [pbr::OriginalName("SHOT_AND_FRAME_MODE")] ShotAndFrameMode = 3,
  }

  /// <summary>
  /// Bucketized representation of likelihood.
  /// </summary>
  public enum Likelihood {
    /// <summary>
    /// Unspecified likelihood.
    /// </summary>
    [pbr::OriginalName("LIKELIHOOD_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Very unlikely.
    /// </summary>
    [pbr::OriginalName("VERY_UNLIKELY")] VeryUnlikely = 1,
    /// <summary>
    /// Unlikely.
    /// </summary>
    [pbr::OriginalName("UNLIKELY")] Unlikely = 2,
    /// <summary>
    /// Possible.
    /// </summary>
    [pbr::OriginalName("POSSIBLE")] Possible = 3,
    /// <summary>
    /// Likely.
    /// </summary>
    [pbr::OriginalName("LIKELY")] Likely = 4,
    /// <summary>
    /// Very likely.
    /// </summary>
    [pbr::OriginalName("VERY_LIKELY")] VeryLikely = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Video annotation request.
  /// </summary>
  public sealed partial class AnnotateVideoRequest : pb::IMessage<AnnotateVideoRequest> {
    private static readonly pb::MessageParser<AnnotateVideoRequest> _parser = new pb::MessageParser<AnnotateVideoRequest>(() => new AnnotateVideoRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotateVideoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoRequest(AnnotateVideoRequest other) : this() {
      inputUri_ = other.inputUri_;
      inputContent_ = other.inputContent_;
      features_ = other.features_.Clone();
      VideoContext = other.videoContext_ != null ? other.VideoContext.Clone() : null;
      outputUri_ = other.outputUri_;
      locationId_ = other.locationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoRequest Clone() {
      return new AnnotateVideoRequest(this);
    }

    /// <summary>Field number for the "input_uri" field.</summary>
    public const int InputUriFieldNumber = 1;
    private string inputUri_ = "";
    /// <summary>
    /// Input video location. Currently, only
    /// [Google Cloud Storage](https://cloud.google.com/storage/) URIs are
    /// supported, which must be specified in the following format:
    /// `gs://bucket-id/object-id` (other URI formats return
    /// [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
    /// [Request URIs](/storage/docs/reference-uris).
    /// A video URI may include wildcards in `object-id`, and thus identify
    /// multiple videos. Supported wildcards: '*' to match 0 or more characters;
    /// '?' to match 1 character. If unset, the input video should be embedded
    /// in the request as `input_content`. If set, `input_content` should be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUri {
      get { return inputUri_; }
      set {
        inputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_content" field.</summary>
    public const int InputContentFieldNumber = 6;
    private pb::ByteString inputContent_ = pb::ByteString.Empty;
    /// <summary>
    /// The video data bytes.
    /// If unset, the input video(s) should be specified via `input_uri`.
    /// If set, `input_uri` should be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString InputContent {
      get { return inputContent_; }
      set {
        inputContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.Feature> _repeated_features_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Cloud.VideoIntelligence.V1.Feature) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.Feature> features_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.Feature>();
    /// <summary>
    /// Requested video annotation features.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.Feature> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "video_context" field.</summary>
    public const int VideoContextFieldNumber = 3;
    private global::Google.Cloud.VideoIntelligence.V1.VideoContext videoContext_;
    /// <summary>
    /// Additional video context and/or feature-specific parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.VideoContext VideoContext {
      get { return videoContext_; }
      set {
        videoContext_ = value;
      }
    }

    /// <summary>Field number for the "output_uri" field.</summary>
    public const int OutputUriFieldNumber = 4;
    private string outputUri_ = "";
    /// <summary>
    /// Optional location where the output (in JSON format) should be stored.
    /// Currently, only [Google Cloud Storage](https://cloud.google.com/storage/)
    /// URIs are supported, which must be specified in the following format:
    /// `gs://bucket-id/object-id` (other URI formats return
    /// [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
    /// [Request URIs](/storage/docs/reference-uris).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputUri {
      get { return outputUri_; }
      set {
        outputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private string locationId_ = "";
    /// <summary>
    /// Optional cloud region where annotation should take place. Supported cloud
    /// regions: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region
    /// is specified, a region will be determined based on video file location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotateVideoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotateVideoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputUri != other.InputUri) return false;
      if (InputContent != other.InputContent) return false;
      if(!features_.Equals(other.features_)) return false;
      if (!object.Equals(VideoContext, other.VideoContext)) return false;
      if (OutputUri != other.OutputUri) return false;
      if (LocationId != other.LocationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputUri.Length != 0) hash ^= InputUri.GetHashCode();
      if (InputContent.Length != 0) hash ^= InputContent.GetHashCode();
      hash ^= features_.GetHashCode();
      if (videoContext_ != null) hash ^= VideoContext.GetHashCode();
      if (OutputUri.Length != 0) hash ^= OutputUri.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      features_.WriteTo(output, _repeated_features_codec);
      if (videoContext_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VideoContext);
      }
      if (OutputUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OutputUri);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (InputContent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(InputContent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUri);
      }
      if (InputContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(InputContent);
      }
      size += features_.CalculateSize(_repeated_features_codec);
      if (videoContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoContext);
      }
      if (OutputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputUri);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotateVideoRequest other) {
      if (other == null) {
        return;
      }
      if (other.InputUri.Length != 0) {
        InputUri = other.InputUri;
      }
      if (other.InputContent.Length != 0) {
        InputContent = other.InputContent;
      }
      features_.Add(other.features_);
      if (other.videoContext_ != null) {
        if (videoContext_ == null) {
          videoContext_ = new global::Google.Cloud.VideoIntelligence.V1.VideoContext();
        }
        VideoContext.MergeFrom(other.VideoContext);
      }
      if (other.OutputUri.Length != 0) {
        OutputUri = other.OutputUri;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 26: {
            if (videoContext_ == null) {
              videoContext_ = new global::Google.Cloud.VideoIntelligence.V1.VideoContext();
            }
            input.ReadMessage(videoContext_);
            break;
          }
          case 34: {
            OutputUri = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
          case 50: {
            InputContent = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video context and/or feature-specific parameters.
  /// </summary>
  public sealed partial class VideoContext : pb::IMessage<VideoContext> {
    private static readonly pb::MessageParser<VideoContext> _parser = new pb::MessageParser<VideoContext>(() => new VideoContext());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoContext(VideoContext other) : this() {
      segments_ = other.segments_.Clone();
      LabelDetectionConfig = other.labelDetectionConfig_ != null ? other.LabelDetectionConfig.Clone() : null;
      ShotChangeDetectionConfig = other.shotChangeDetectionConfig_ != null ? other.ShotChangeDetectionConfig.Clone() : null;
      ExplicitContentDetectionConfig = other.explicitContentDetectionConfig_ != null ? other.ExplicitContentDetectionConfig.Clone() : null;
      FaceDetectionConfig = other.faceDetectionConfig_ != null ? other.FaceDetectionConfig.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoContext Clone() {
      return new VideoContext(this);
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.VideoSegment> _repeated_segments_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1.VideoSegment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoSegment> segments_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoSegment>();
    /// <summary>
    /// Video segments to annotate. The segments may overlap and are not required
    /// to be contiguous or span the whole video. If unspecified, each video
    /// is treated as a single segment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoSegment> Segments {
      get { return segments_; }
    }

    /// <summary>Field number for the "label_detection_config" field.</summary>
    public const int LabelDetectionConfigFieldNumber = 2;
    private global::Google.Cloud.VideoIntelligence.V1.LabelDetectionConfig labelDetectionConfig_;
    /// <summary>
    /// Config for LABEL_DETECTION.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.LabelDetectionConfig LabelDetectionConfig {
      get { return labelDetectionConfig_; }
      set {
        labelDetectionConfig_ = value;
      }
    }

    /// <summary>Field number for the "shot_change_detection_config" field.</summary>
    public const int ShotChangeDetectionConfigFieldNumber = 3;
    private global::Google.Cloud.VideoIntelligence.V1.ShotChangeDetectionConfig shotChangeDetectionConfig_;
    /// <summary>
    /// Config for SHOT_CHANGE_DETECTION.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.ShotChangeDetectionConfig ShotChangeDetectionConfig {
      get { return shotChangeDetectionConfig_; }
      set {
        shotChangeDetectionConfig_ = value;
      }
    }

    /// <summary>Field number for the "explicit_content_detection_config" field.</summary>
    public const int ExplicitContentDetectionConfigFieldNumber = 4;
    private global::Google.Cloud.VideoIntelligence.V1.ExplicitContentDetectionConfig explicitContentDetectionConfig_;
    /// <summary>
    /// Config for EXPLICIT_CONTENT_DETECTION.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.ExplicitContentDetectionConfig ExplicitContentDetectionConfig {
      get { return explicitContentDetectionConfig_; }
      set {
        explicitContentDetectionConfig_ = value;
      }
    }

    /// <summary>Field number for the "face_detection_config" field.</summary>
    public const int FaceDetectionConfigFieldNumber = 5;
    private global::Google.Cloud.VideoIntelligence.V1.FaceDetectionConfig faceDetectionConfig_;
    /// <summary>
    /// Config for FACE_DETECTION.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.FaceDetectionConfig FaceDetectionConfig {
      get { return faceDetectionConfig_; }
      set {
        faceDetectionConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!segments_.Equals(other.segments_)) return false;
      if (!object.Equals(LabelDetectionConfig, other.LabelDetectionConfig)) return false;
      if (!object.Equals(ShotChangeDetectionConfig, other.ShotChangeDetectionConfig)) return false;
      if (!object.Equals(ExplicitContentDetectionConfig, other.ExplicitContentDetectionConfig)) return false;
      if (!object.Equals(FaceDetectionConfig, other.FaceDetectionConfig)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= segments_.GetHashCode();
      if (labelDetectionConfig_ != null) hash ^= LabelDetectionConfig.GetHashCode();
      if (shotChangeDetectionConfig_ != null) hash ^= ShotChangeDetectionConfig.GetHashCode();
      if (explicitContentDetectionConfig_ != null) hash ^= ExplicitContentDetectionConfig.GetHashCode();
      if (faceDetectionConfig_ != null) hash ^= FaceDetectionConfig.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      segments_.WriteTo(output, _repeated_segments_codec);
      if (labelDetectionConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LabelDetectionConfig);
      }
      if (shotChangeDetectionConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ShotChangeDetectionConfig);
      }
      if (explicitContentDetectionConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExplicitContentDetectionConfig);
      }
      if (faceDetectionConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FaceDetectionConfig);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += segments_.CalculateSize(_repeated_segments_codec);
      if (labelDetectionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LabelDetectionConfig);
      }
      if (shotChangeDetectionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShotChangeDetectionConfig);
      }
      if (explicitContentDetectionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExplicitContentDetectionConfig);
      }
      if (faceDetectionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceDetectionConfig);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoContext other) {
      if (other == null) {
        return;
      }
      segments_.Add(other.segments_);
      if (other.labelDetectionConfig_ != null) {
        if (labelDetectionConfig_ == null) {
          labelDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.LabelDetectionConfig();
        }
        LabelDetectionConfig.MergeFrom(other.LabelDetectionConfig);
      }
      if (other.shotChangeDetectionConfig_ != null) {
        if (shotChangeDetectionConfig_ == null) {
          shotChangeDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.ShotChangeDetectionConfig();
        }
        ShotChangeDetectionConfig.MergeFrom(other.ShotChangeDetectionConfig);
      }
      if (other.explicitContentDetectionConfig_ != null) {
        if (explicitContentDetectionConfig_ == null) {
          explicitContentDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.ExplicitContentDetectionConfig();
        }
        ExplicitContentDetectionConfig.MergeFrom(other.ExplicitContentDetectionConfig);
      }
      if (other.faceDetectionConfig_ != null) {
        if (faceDetectionConfig_ == null) {
          faceDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.FaceDetectionConfig();
        }
        FaceDetectionConfig.MergeFrom(other.FaceDetectionConfig);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            segments_.AddEntriesFrom(input, _repeated_segments_codec);
            break;
          }
          case 18: {
            if (labelDetectionConfig_ == null) {
              labelDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.LabelDetectionConfig();
            }
            input.ReadMessage(labelDetectionConfig_);
            break;
          }
          case 26: {
            if (shotChangeDetectionConfig_ == null) {
              shotChangeDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.ShotChangeDetectionConfig();
            }
            input.ReadMessage(shotChangeDetectionConfig_);
            break;
          }
          case 34: {
            if (explicitContentDetectionConfig_ == null) {
              explicitContentDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.ExplicitContentDetectionConfig();
            }
            input.ReadMessage(explicitContentDetectionConfig_);
            break;
          }
          case 42: {
            if (faceDetectionConfig_ == null) {
              faceDetectionConfig_ = new global::Google.Cloud.VideoIntelligence.V1.FaceDetectionConfig();
            }
            input.ReadMessage(faceDetectionConfig_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Config for LABEL_DETECTION.
  /// </summary>
  public sealed partial class LabelDetectionConfig : pb::IMessage<LabelDetectionConfig> {
    private static readonly pb::MessageParser<LabelDetectionConfig> _parser = new pb::MessageParser<LabelDetectionConfig>(() => new LabelDetectionConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelDetectionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelDetectionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelDetectionConfig(LabelDetectionConfig other) : this() {
      labelDetectionMode_ = other.labelDetectionMode_;
      stationaryCamera_ = other.stationaryCamera_;
      model_ = other.model_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelDetectionConfig Clone() {
      return new LabelDetectionConfig(this);
    }

    /// <summary>Field number for the "label_detection_mode" field.</summary>
    public const int LabelDetectionModeFieldNumber = 1;
    private global::Google.Cloud.VideoIntelligence.V1.LabelDetectionMode labelDetectionMode_ = 0;
    /// <summary>
    /// What labels should be detected with LABEL_DETECTION, in addition to
    /// video-level labels or segment-level labels.
    /// If unspecified, defaults to `SHOT_MODE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.LabelDetectionMode LabelDetectionMode {
      get { return labelDetectionMode_; }
      set {
        labelDetectionMode_ = value;
      }
    }

    /// <summary>Field number for the "stationary_camera" field.</summary>
    public const int StationaryCameraFieldNumber = 2;
    private bool stationaryCamera_;
    /// <summary>
    /// Whether the video has been shot from a stationary (i.e. non-moving) camera.
    /// When set to true, might improve detection accuracy for moving objects.
    /// Should be used with `SHOT_AND_FRAME_MODE` enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StationaryCamera {
      get { return stationaryCamera_; }
      set {
        stationaryCamera_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private string model_ = "";
    /// <summary>
    /// Model to use for label detection.
    /// Supported values: "builtin/stable" (the default if unset) and
    /// "builtin/latest".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelDetectionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelDetectionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LabelDetectionMode != other.LabelDetectionMode) return false;
      if (StationaryCamera != other.StationaryCamera) return false;
      if (Model != other.Model) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LabelDetectionMode != 0) hash ^= LabelDetectionMode.GetHashCode();
      if (StationaryCamera != false) hash ^= StationaryCamera.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LabelDetectionMode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LabelDetectionMode);
      }
      if (StationaryCamera != false) {
        output.WriteRawTag(16);
        output.WriteBool(StationaryCamera);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LabelDetectionMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LabelDetectionMode);
      }
      if (StationaryCamera != false) {
        size += 1 + 1;
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelDetectionConfig other) {
      if (other == null) {
        return;
      }
      if (other.LabelDetectionMode != 0) {
        LabelDetectionMode = other.LabelDetectionMode;
      }
      if (other.StationaryCamera != false) {
        StationaryCamera = other.StationaryCamera;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            labelDetectionMode_ = (global::Google.Cloud.VideoIntelligence.V1.LabelDetectionMode) input.ReadEnum();
            break;
          }
          case 16: {
            StationaryCamera = input.ReadBool();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Config for SHOT_CHANGE_DETECTION.
  /// </summary>
  public sealed partial class ShotChangeDetectionConfig : pb::IMessage<ShotChangeDetectionConfig> {
    private static readonly pb::MessageParser<ShotChangeDetectionConfig> _parser = new pb::MessageParser<ShotChangeDetectionConfig>(() => new ShotChangeDetectionConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShotChangeDetectionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShotChangeDetectionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShotChangeDetectionConfig(ShotChangeDetectionConfig other) : this() {
      model_ = other.model_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShotChangeDetectionConfig Clone() {
      return new ShotChangeDetectionConfig(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private string model_ = "";
    /// <summary>
    /// Model to use for shot change detection.
    /// Supported values: "builtin/stable" (the default if unset) and
    /// "builtin/latest".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShotChangeDetectionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShotChangeDetectionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Model != other.Model) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShotChangeDetectionConfig other) {
      if (other == null) {
        return;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Config for EXPLICIT_CONTENT_DETECTION.
  /// </summary>
  public sealed partial class ExplicitContentDetectionConfig : pb::IMessage<ExplicitContentDetectionConfig> {
    private static readonly pb::MessageParser<ExplicitContentDetectionConfig> _parser = new pb::MessageParser<ExplicitContentDetectionConfig>(() => new ExplicitContentDetectionConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExplicitContentDetectionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentDetectionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentDetectionConfig(ExplicitContentDetectionConfig other) : this() {
      model_ = other.model_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentDetectionConfig Clone() {
      return new ExplicitContentDetectionConfig(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private string model_ = "";
    /// <summary>
    /// Model to use for explicit content detection.
    /// Supported values: "builtin/stable" (the default if unset) and
    /// "builtin/latest".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExplicitContentDetectionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExplicitContentDetectionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Model != other.Model) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExplicitContentDetectionConfig other) {
      if (other == null) {
        return;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Config for FACE_DETECTION.
  /// </summary>
  public sealed partial class FaceDetectionConfig : pb::IMessage<FaceDetectionConfig> {
    private static readonly pb::MessageParser<FaceDetectionConfig> _parser = new pb::MessageParser<FaceDetectionConfig>(() => new FaceDetectionConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceDetectionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetectionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetectionConfig(FaceDetectionConfig other) : this() {
      model_ = other.model_;
      includeBoundingBoxes_ = other.includeBoundingBoxes_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetectionConfig Clone() {
      return new FaceDetectionConfig(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private string model_ = "";
    /// <summary>
    /// Model to use for face detection.
    /// Supported values: "builtin/stable" (the default if unset) and
    /// "builtin/latest".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "include_bounding_boxes" field.</summary>
    public const int IncludeBoundingBoxesFieldNumber = 2;
    private bool includeBoundingBoxes_;
    /// <summary>
    /// Whether bounding boxes be included in the face annotation output.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeBoundingBoxes {
      get { return includeBoundingBoxes_; }
      set {
        includeBoundingBoxes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceDetectionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceDetectionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Model != other.Model) return false;
      if (IncludeBoundingBoxes != other.IncludeBoundingBoxes) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (IncludeBoundingBoxes != false) hash ^= IncludeBoundingBoxes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (IncludeBoundingBoxes != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeBoundingBoxes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (IncludeBoundingBoxes != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceDetectionConfig other) {
      if (other == null) {
        return;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.IncludeBoundingBoxes != false) {
        IncludeBoundingBoxes = other.IncludeBoundingBoxes;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
          case 16: {
            IncludeBoundingBoxes = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video segment.
  /// </summary>
  public sealed partial class VideoSegment : pb::IMessage<VideoSegment> {
    private static readonly pb::MessageParser<VideoSegment> _parser = new pb::MessageParser<VideoSegment>(() => new VideoSegment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoSegment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoSegment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoSegment(VideoSegment other) : this() {
      StartTimeOffset = other.startTimeOffset_ != null ? other.StartTimeOffset.Clone() : null;
      EndTimeOffset = other.endTimeOffset_ != null ? other.EndTimeOffset.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoSegment Clone() {
      return new VideoSegment(this);
    }

    /// <summary>Field number for the "start_time_offset" field.</summary>
    public const int StartTimeOffsetFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration startTimeOffset_;
    /// <summary>
    /// Time-offset, relative to the beginning of the video,
    /// corresponding to the start of the segment (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration StartTimeOffset {
      get { return startTimeOffset_; }
      set {
        startTimeOffset_ = value;
      }
    }

    /// <summary>Field number for the "end_time_offset" field.</summary>
    public const int EndTimeOffsetFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration endTimeOffset_;
    /// <summary>
    /// Time-offset, relative to the beginning of the video,
    /// corresponding to the end of the segment (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration EndTimeOffset {
      get { return endTimeOffset_; }
      set {
        endTimeOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoSegment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoSegment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTimeOffset, other.StartTimeOffset)) return false;
      if (!object.Equals(EndTimeOffset, other.EndTimeOffset)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTimeOffset_ != null) hash ^= StartTimeOffset.GetHashCode();
      if (endTimeOffset_ != null) hash ^= EndTimeOffset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (startTimeOffset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTimeOffset);
      }
      if (endTimeOffset_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTimeOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTimeOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimeOffset);
      }
      if (endTimeOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimeOffset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoSegment other) {
      if (other == null) {
        return;
      }
      if (other.startTimeOffset_ != null) {
        if (startTimeOffset_ == null) {
          startTimeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        StartTimeOffset.MergeFrom(other.StartTimeOffset);
      }
      if (other.endTimeOffset_ != null) {
        if (endTimeOffset_ == null) {
          endTimeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        EndTimeOffset.MergeFrom(other.EndTimeOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (startTimeOffset_ == null) {
              startTimeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(startTimeOffset_);
            break;
          }
          case 18: {
            if (endTimeOffset_ == null) {
              endTimeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(endTimeOffset_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video segment level annotation results for label detection.
  /// </summary>
  public sealed partial class LabelSegment : pb::IMessage<LabelSegment> {
    private static readonly pb::MessageParser<LabelSegment> _parser = new pb::MessageParser<LabelSegment>(() => new LabelSegment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelSegment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelSegment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelSegment(LabelSegment other) : this() {
      Segment = other.segment_ != null ? other.Segment.Clone() : null;
      confidence_ = other.confidence_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelSegment Clone() {
      return new LabelSegment(this);
    }

    /// <summary>Field number for the "segment" field.</summary>
    public const int SegmentFieldNumber = 1;
    private global::Google.Cloud.VideoIntelligence.V1.VideoSegment segment_;
    /// <summary>
    /// Video segment where a label was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.VideoSegment Segment {
      get { return segment_; }
      set {
        segment_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 2;
    private float confidence_;
    /// <summary>
    /// Confidence that the label is accurate. Range: [0, 1].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelSegment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelSegment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Segment, other.Segment)) return false;
      if (Confidence != other.Confidence) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (segment_ != null) hash ^= Segment.GetHashCode();
      if (Confidence != 0F) hash ^= Confidence.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (segment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Segment);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Confidence);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (segment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segment);
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelSegment other) {
      if (other == null) {
        return;
      }
      if (other.segment_ != null) {
        if (segment_ == null) {
          segment_ = new global::Google.Cloud.VideoIntelligence.V1.VideoSegment();
        }
        Segment.MergeFrom(other.Segment);
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (segment_ == null) {
              segment_ = new global::Google.Cloud.VideoIntelligence.V1.VideoSegment();
            }
            input.ReadMessage(segment_);
            break;
          }
          case 21: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video frame level annotation results for label detection.
  /// </summary>
  public sealed partial class LabelFrame : pb::IMessage<LabelFrame> {
    private static readonly pb::MessageParser<LabelFrame> _parser = new pb::MessageParser<LabelFrame>(() => new LabelFrame());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelFrame(LabelFrame other) : this() {
      TimeOffset = other.timeOffset_ != null ? other.TimeOffset.Clone() : null;
      confidence_ = other.confidence_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelFrame Clone() {
      return new LabelFrame(this);
    }

    /// <summary>Field number for the "time_offset" field.</summary>
    public const int TimeOffsetFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration timeOffset_;
    /// <summary>
    /// Time-offset, relative to the beginning of the video, corresponding to the
    /// video frame for this location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeOffset {
      get { return timeOffset_; }
      set {
        timeOffset_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 2;
    private float confidence_;
    /// <summary>
    /// Confidence that the label is accurate. Range: [0, 1].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeOffset, other.TimeOffset)) return false;
      if (Confidence != other.Confidence) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeOffset_ != null) hash ^= TimeOffset.GetHashCode();
      if (Confidence != 0F) hash ^= Confidence.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeOffset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeOffset);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Confidence);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeOffset);
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelFrame other) {
      if (other == null) {
        return;
      }
      if (other.timeOffset_ != null) {
        if (timeOffset_ == null) {
          timeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeOffset.MergeFrom(other.TimeOffset);
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (timeOffset_ == null) {
              timeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timeOffset_);
            break;
          }
          case 21: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Detected entity from video analysis.
  /// </summary>
  public sealed partial class Entity : pb::IMessage<Entity> {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity(Entity other) : this() {
      entityId_ = other.entityId_;
      description_ = other.description_;
      languageCode_ = other.languageCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity Clone() {
      return new Entity(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private string entityId_ = "";
    /// <summary>
    /// Opaque entity ID. Some IDs may be available in
    /// [Google Knowledge Graph Search
    /// API](https://developers.google.com/knowledge-graph/).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Textual description, e.g. `Fixed-gear bicycle`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 3;
    private string languageCode_ = "";
    /// <summary>
    /// Language code for `description` in BCP-47 format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (Description != other.Description) return false;
      if (LanguageCode != other.LanguageCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LanguageCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            EntityId = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Label annotation.
  /// </summary>
  public sealed partial class LabelAnnotation : pb::IMessage<LabelAnnotation> {
    private static readonly pb::MessageParser<LabelAnnotation> _parser = new pb::MessageParser<LabelAnnotation>(() => new LabelAnnotation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelAnnotation(LabelAnnotation other) : this() {
      Entity = other.entity_ != null ? other.Entity.Clone() : null;
      categoryEntities_ = other.categoryEntities_.Clone();
      segments_ = other.segments_.Clone();
      frames_ = other.frames_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelAnnotation Clone() {
      return new LabelAnnotation(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Google.Cloud.VideoIntelligence.V1.Entity entity_;
    /// <summary>
    /// Detected entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "category_entities" field.</summary>
    public const int CategoryEntitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.Entity> _repeated_categoryEntities_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.VideoIntelligence.V1.Entity.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.Entity> categoryEntities_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.Entity>();
    /// <summary>
    /// Common categories for the detected entity.
    /// E.g. when the label is `Terrier` the category is likely `dog`. And in some
    /// cases there might be more than one categories e.g. `Terrier` could also be
    /// a `pet`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.Entity> CategoryEntities {
      get { return categoryEntities_; }
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.LabelSegment> _repeated_segments_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.VideoIntelligence.V1.LabelSegment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelSegment> segments_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelSegment>();
    /// <summary>
    /// All video segments where a label was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelSegment> Segments {
      get { return segments_; }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.LabelFrame> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.VideoIntelligence.V1.LabelFrame.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelFrame> frames_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelFrame>();
    /// <summary>
    /// All video frames where a label was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelFrame> Frames {
      get { return frames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if(!categoryEntities_.Equals(other.categoryEntities_)) return false;
      if(!segments_.Equals(other.segments_)) return false;
      if(!frames_.Equals(other.frames_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      hash ^= categoryEntities_.GetHashCode();
      hash ^= segments_.GetHashCode();
      hash ^= frames_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      categoryEntities_.WriteTo(output, _repeated_categoryEntities_codec);
      segments_.WriteTo(output, _repeated_segments_codec);
      frames_.WriteTo(output, _repeated_frames_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      size += categoryEntities_.CalculateSize(_repeated_categoryEntities_codec);
      size += segments_.CalculateSize(_repeated_segments_codec);
      size += frames_.CalculateSize(_repeated_frames_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          entity_ = new global::Google.Cloud.VideoIntelligence.V1.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      categoryEntities_.Add(other.categoryEntities_);
      segments_.Add(other.segments_);
      frames_.Add(other.frames_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entity_ == null) {
              entity_ = new global::Google.Cloud.VideoIntelligence.V1.Entity();
            }
            input.ReadMessage(entity_);
            break;
          }
          case 18: {
            categoryEntities_.AddEntriesFrom(input, _repeated_categoryEntities_codec);
            break;
          }
          case 26: {
            segments_.AddEntriesFrom(input, _repeated_segments_codec);
            break;
          }
          case 34: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video frame level annotation results for explicit content.
  /// </summary>
  public sealed partial class ExplicitContentFrame : pb::IMessage<ExplicitContentFrame> {
    private static readonly pb::MessageParser<ExplicitContentFrame> _parser = new pb::MessageParser<ExplicitContentFrame>(() => new ExplicitContentFrame());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExplicitContentFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentFrame(ExplicitContentFrame other) : this() {
      TimeOffset = other.timeOffset_ != null ? other.TimeOffset.Clone() : null;
      pornographyLikelihood_ = other.pornographyLikelihood_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentFrame Clone() {
      return new ExplicitContentFrame(this);
    }

    /// <summary>Field number for the "time_offset" field.</summary>
    public const int TimeOffsetFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration timeOffset_;
    /// <summary>
    /// Time-offset, relative to the beginning of the video, corresponding to the
    /// video frame for this location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeOffset {
      get { return timeOffset_; }
      set {
        timeOffset_ = value;
      }
    }

    /// <summary>Field number for the "pornography_likelihood" field.</summary>
    public const int PornographyLikelihoodFieldNumber = 2;
    private global::Google.Cloud.VideoIntelligence.V1.Likelihood pornographyLikelihood_ = 0;
    /// <summary>
    /// Likelihood of the pornography content..
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.Likelihood PornographyLikelihood {
      get { return pornographyLikelihood_; }
      set {
        pornographyLikelihood_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExplicitContentFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExplicitContentFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeOffset, other.TimeOffset)) return false;
      if (PornographyLikelihood != other.PornographyLikelihood) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeOffset_ != null) hash ^= TimeOffset.GetHashCode();
      if (PornographyLikelihood != 0) hash ^= PornographyLikelihood.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeOffset_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeOffset);
      }
      if (PornographyLikelihood != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PornographyLikelihood);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeOffset);
      }
      if (PornographyLikelihood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PornographyLikelihood);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExplicitContentFrame other) {
      if (other == null) {
        return;
      }
      if (other.timeOffset_ != null) {
        if (timeOffset_ == null) {
          timeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeOffset.MergeFrom(other.TimeOffset);
      }
      if (other.PornographyLikelihood != 0) {
        PornographyLikelihood = other.PornographyLikelihood;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (timeOffset_ == null) {
              timeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timeOffset_);
            break;
          }
          case 16: {
            pornographyLikelihood_ = (global::Google.Cloud.VideoIntelligence.V1.Likelihood) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Explicit content annotation (based on per-frame visual signals only).
  /// If no explicit content has been detected in a frame, no annotations are
  /// present for that frame.
  /// </summary>
  public sealed partial class ExplicitContentAnnotation : pb::IMessage<ExplicitContentAnnotation> {
    private static readonly pb::MessageParser<ExplicitContentAnnotation> _parser = new pb::MessageParser<ExplicitContentAnnotation>(() => new ExplicitContentAnnotation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExplicitContentAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentAnnotation(ExplicitContentAnnotation other) : this() {
      frames_ = other.frames_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExplicitContentAnnotation Clone() {
      return new ExplicitContentAnnotation(this);
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.ExplicitContentFrame> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1.ExplicitContentFrame.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.ExplicitContentFrame> frames_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.ExplicitContentFrame>();
    /// <summary>
    /// All video frames where explicit content was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.ExplicitContentFrame> Frames {
      get { return frames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExplicitContentAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExplicitContentAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!frames_.Equals(other.frames_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= frames_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      frames_.WriteTo(output, _repeated_frames_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frames_.CalculateSize(_repeated_frames_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExplicitContentAnnotation other) {
      if (other == null) {
        return;
      }
      frames_.Add(other.frames_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Normalized bounding box.
  /// The normalized vertex coordinates are relative to the original image.
  /// Range: [0, 1].
  /// </summary>
  public sealed partial class NormalizedBoundingBox : pb::IMessage<NormalizedBoundingBox> {
    private static readonly pb::MessageParser<NormalizedBoundingBox> _parser = new pb::MessageParser<NormalizedBoundingBox>(() => new NormalizedBoundingBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NormalizedBoundingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalizedBoundingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalizedBoundingBox(NormalizedBoundingBox other) : this() {
      left_ = other.left_;
      top_ = other.top_;
      right_ = other.right_;
      bottom_ = other.bottom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalizedBoundingBox Clone() {
      return new NormalizedBoundingBox(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private float left_;
    /// <summary>
    /// Left X coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 2;
    private float top_;
    /// <summary>
    /// Top Y coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 3;
    private float right_;
    /// <summary>
    /// Right X coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "bottom" field.</summary>
    public const int BottomFieldNumber = 4;
    private float bottom_;
    /// <summary>
    /// Bottom Y coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Bottom {
      get { return bottom_; }
      set {
        bottom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NormalizedBoundingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NormalizedBoundingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (Top != other.Top) return false;
      if (Right != other.Right) return false;
      if (Bottom != other.Bottom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Left != 0F) hash ^= Left.GetHashCode();
      if (Top != 0F) hash ^= Top.GetHashCode();
      if (Right != 0F) hash ^= Right.GetHashCode();
      if (Bottom != 0F) hash ^= Bottom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Left != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Left);
      }
      if (Top != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Top);
      }
      if (Right != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Right);
      }
      if (Bottom != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Bottom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Left != 0F) {
        size += 1 + 4;
      }
      if (Top != 0F) {
        size += 1 + 4;
      }
      if (Right != 0F) {
        size += 1 + 4;
      }
      if (Bottom != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NormalizedBoundingBox other) {
      if (other == null) {
        return;
      }
      if (other.Left != 0F) {
        Left = other.Left;
      }
      if (other.Top != 0F) {
        Top = other.Top;
      }
      if (other.Right != 0F) {
        Right = other.Right;
      }
      if (other.Bottom != 0F) {
        Bottom = other.Bottom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            Left = input.ReadFloat();
            break;
          }
          case 21: {
            Top = input.ReadFloat();
            break;
          }
          case 29: {
            Right = input.ReadFloat();
            break;
          }
          case 37: {
            Bottom = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video segment level annotation results for face detection.
  /// </summary>
  public sealed partial class FaceSegment : pb::IMessage<FaceSegment> {
    private static readonly pb::MessageParser<FaceSegment> _parser = new pb::MessageParser<FaceSegment>(() => new FaceSegment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceSegment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceSegment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceSegment(FaceSegment other) : this() {
      Segment = other.segment_ != null ? other.Segment.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceSegment Clone() {
      return new FaceSegment(this);
    }

    /// <summary>Field number for the "segment" field.</summary>
    public const int SegmentFieldNumber = 1;
    private global::Google.Cloud.VideoIntelligence.V1.VideoSegment segment_;
    /// <summary>
    /// Video segment where a face was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.VideoSegment Segment {
      get { return segment_; }
      set {
        segment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceSegment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceSegment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Segment, other.Segment)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (segment_ != null) hash ^= Segment.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (segment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Segment);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (segment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segment);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceSegment other) {
      if (other == null) {
        return;
      }
      if (other.segment_ != null) {
        if (segment_ == null) {
          segment_ = new global::Google.Cloud.VideoIntelligence.V1.VideoSegment();
        }
        Segment.MergeFrom(other.Segment);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (segment_ == null) {
              segment_ = new global::Google.Cloud.VideoIntelligence.V1.VideoSegment();
            }
            input.ReadMessage(segment_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video frame level annotation results for face detection.
  /// </summary>
  public sealed partial class FaceFrame : pb::IMessage<FaceFrame> {
    private static readonly pb::MessageParser<FaceFrame> _parser = new pb::MessageParser<FaceFrame>(() => new FaceFrame());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceFrame(FaceFrame other) : this() {
      normalizedBoundingBoxes_ = other.normalizedBoundingBoxes_.Clone();
      TimeOffset = other.timeOffset_ != null ? other.TimeOffset.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceFrame Clone() {
      return new FaceFrame(this);
    }

    /// <summary>Field number for the "normalized_bounding_boxes" field.</summary>
    public const int NormalizedBoundingBoxesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.NormalizedBoundingBox> _repeated_normalizedBoundingBoxes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1.NormalizedBoundingBox.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.NormalizedBoundingBox> normalizedBoundingBoxes_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.NormalizedBoundingBox>();
    /// <summary>
    /// Normalized Bounding boxes in a frame.
    /// There can be more than one boxes if the same face is detected in multiple
    /// locations within the current frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.NormalizedBoundingBox> NormalizedBoundingBoxes {
      get { return normalizedBoundingBoxes_; }
    }

    /// <summary>Field number for the "time_offset" field.</summary>
    public const int TimeOffsetFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration timeOffset_;
    /// <summary>
    /// Time-offset, relative to the beginning of the video,
    /// corresponding to the video frame for this location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeOffset {
      get { return timeOffset_; }
      set {
        timeOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!normalizedBoundingBoxes_.Equals(other.normalizedBoundingBoxes_)) return false;
      if (!object.Equals(TimeOffset, other.TimeOffset)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= normalizedBoundingBoxes_.GetHashCode();
      if (timeOffset_ != null) hash ^= TimeOffset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      normalizedBoundingBoxes_.WriteTo(output, _repeated_normalizedBoundingBoxes_codec);
      if (timeOffset_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += normalizedBoundingBoxes_.CalculateSize(_repeated_normalizedBoundingBoxes_codec);
      if (timeOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeOffset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceFrame other) {
      if (other == null) {
        return;
      }
      normalizedBoundingBoxes_.Add(other.normalizedBoundingBoxes_);
      if (other.timeOffset_ != null) {
        if (timeOffset_ == null) {
          timeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeOffset.MergeFrom(other.TimeOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            normalizedBoundingBoxes_.AddEntriesFrom(input, _repeated_normalizedBoundingBoxes_codec);
            break;
          }
          case 18: {
            if (timeOffset_ == null) {
              timeOffset_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timeOffset_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Face annotation.
  /// </summary>
  public sealed partial class FaceAnnotation : pb::IMessage<FaceAnnotation> {
    private static readonly pb::MessageParser<FaceAnnotation> _parser = new pb::MessageParser<FaceAnnotation>(() => new FaceAnnotation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceAnnotation(FaceAnnotation other) : this() {
      thumbnail_ = other.thumbnail_;
      segments_ = other.segments_.Clone();
      frames_ = other.frames_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceAnnotation Clone() {
      return new FaceAnnotation(this);
    }

    /// <summary>Field number for the "thumbnail" field.</summary>
    public const int ThumbnailFieldNumber = 1;
    private pb::ByteString thumbnail_ = pb::ByteString.Empty;
    /// <summary>
    /// Thumbnail of a representative face view (in JPEG format).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Thumbnail {
      get { return thumbnail_; }
      set {
        thumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.FaceSegment> _repeated_segments_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.VideoIntelligence.V1.FaceSegment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceSegment> segments_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceSegment>();
    /// <summary>
    /// All video segments where a face was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceSegment> Segments {
      get { return segments_; }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.FaceFrame> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.VideoIntelligence.V1.FaceFrame.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceFrame> frames_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceFrame>();
    /// <summary>
    /// All video frames where a face was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceFrame> Frames {
      get { return frames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Thumbnail != other.Thumbnail) return false;
      if(!segments_.Equals(other.segments_)) return false;
      if(!frames_.Equals(other.frames_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Thumbnail.Length != 0) hash ^= Thumbnail.GetHashCode();
      hash ^= segments_.GetHashCode();
      hash ^= frames_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Thumbnail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Thumbnail);
      }
      segments_.WriteTo(output, _repeated_segments_codec);
      frames_.WriteTo(output, _repeated_frames_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Thumbnail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Thumbnail);
      }
      size += segments_.CalculateSize(_repeated_segments_codec);
      size += frames_.CalculateSize(_repeated_frames_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.Thumbnail.Length != 0) {
        Thumbnail = other.Thumbnail;
      }
      segments_.Add(other.segments_);
      frames_.Add(other.frames_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Thumbnail = input.ReadBytes();
            break;
          }
          case 18: {
            segments_.AddEntriesFrom(input, _repeated_segments_codec);
            break;
          }
          case 26: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Annotation results for a single video.
  /// </summary>
  public sealed partial class VideoAnnotationResults : pb::IMessage<VideoAnnotationResults> {
    private static readonly pb::MessageParser<VideoAnnotationResults> _parser = new pb::MessageParser<VideoAnnotationResults>(() => new VideoAnnotationResults());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoAnnotationResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationResults(VideoAnnotationResults other) : this() {
      inputUri_ = other.inputUri_;
      segmentLabelAnnotations_ = other.segmentLabelAnnotations_.Clone();
      shotLabelAnnotations_ = other.shotLabelAnnotations_.Clone();
      frameLabelAnnotations_ = other.frameLabelAnnotations_.Clone();
      faceAnnotations_ = other.faceAnnotations_.Clone();
      shotAnnotations_ = other.shotAnnotations_.Clone();
      ExplicitAnnotation = other.explicitAnnotation_ != null ? other.ExplicitAnnotation.Clone() : null;
      Error = other.error_ != null ? other.Error.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationResults Clone() {
      return new VideoAnnotationResults(this);
    }

    /// <summary>Field number for the "input_uri" field.</summary>
    public const int InputUriFieldNumber = 1;
    private string inputUri_ = "";
    /// <summary>
    /// Video file location in
    /// [Google Cloud Storage](https://cloud.google.com/storage/).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUri {
      get { return inputUri_; }
      set {
        inputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "segment_label_annotations" field.</summary>
    public const int SegmentLabelAnnotationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> _repeated_segmentLabelAnnotations_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> segmentLabelAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation>();
    /// <summary>
    /// Label annotations on video level or user specified segment level.
    /// There is exactly one element for each unique label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> SegmentLabelAnnotations {
      get { return segmentLabelAnnotations_; }
    }

    /// <summary>Field number for the "shot_label_annotations" field.</summary>
    public const int ShotLabelAnnotationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> _repeated_shotLabelAnnotations_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> shotLabelAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation>();
    /// <summary>
    /// Label annotations on shot level.
    /// There is exactly one element for each unique label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> ShotLabelAnnotations {
      get { return shotLabelAnnotations_; }
    }

    /// <summary>Field number for the "frame_label_annotations" field.</summary>
    public const int FrameLabelAnnotationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> _repeated_frameLabelAnnotations_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> frameLabelAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation>();
    /// <summary>
    /// Label annotations on frame level.
    /// There is exactly one element for each unique label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.LabelAnnotation> FrameLabelAnnotations {
      get { return frameLabelAnnotations_; }
    }

    /// <summary>Field number for the "face_annotations" field.</summary>
    public const int FaceAnnotationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.FaceAnnotation> _repeated_faceAnnotations_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.VideoIntelligence.V1.FaceAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceAnnotation> faceAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceAnnotation>();
    /// <summary>
    /// Face annotations. There is exactly one element for each unique face.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.FaceAnnotation> FaceAnnotations {
      get { return faceAnnotations_; }
    }

    /// <summary>Field number for the "shot_annotations" field.</summary>
    public const int ShotAnnotationsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.VideoSegment> _repeated_shotAnnotations_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.VideoIntelligence.V1.VideoSegment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoSegment> shotAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoSegment>();
    /// <summary>
    /// Shot annotations. Each shot is represented as a video segment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoSegment> ShotAnnotations {
      get { return shotAnnotations_; }
    }

    /// <summary>Field number for the "explicit_annotation" field.</summary>
    public const int ExplicitAnnotationFieldNumber = 7;
    private global::Google.Cloud.VideoIntelligence.V1.ExplicitContentAnnotation explicitAnnotation_;
    /// <summary>
    /// Explicit content annotation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1.ExplicitContentAnnotation ExplicitAnnotation {
      get { return explicitAnnotation_; }
      set {
        explicitAnnotation_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 9;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// If set, indicates an error. Note that for a single `AnnotateVideoRequest`
    /// some videos may succeed and some may fail.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoAnnotationResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoAnnotationResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputUri != other.InputUri) return false;
      if(!segmentLabelAnnotations_.Equals(other.segmentLabelAnnotations_)) return false;
      if(!shotLabelAnnotations_.Equals(other.shotLabelAnnotations_)) return false;
      if(!frameLabelAnnotations_.Equals(other.frameLabelAnnotations_)) return false;
      if(!faceAnnotations_.Equals(other.faceAnnotations_)) return false;
      if(!shotAnnotations_.Equals(other.shotAnnotations_)) return false;
      if (!object.Equals(ExplicitAnnotation, other.ExplicitAnnotation)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputUri.Length != 0) hash ^= InputUri.GetHashCode();
      hash ^= segmentLabelAnnotations_.GetHashCode();
      hash ^= shotLabelAnnotations_.GetHashCode();
      hash ^= frameLabelAnnotations_.GetHashCode();
      hash ^= faceAnnotations_.GetHashCode();
      hash ^= shotAnnotations_.GetHashCode();
      if (explicitAnnotation_ != null) hash ^= ExplicitAnnotation.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      segmentLabelAnnotations_.WriteTo(output, _repeated_segmentLabelAnnotations_codec);
      shotLabelAnnotations_.WriteTo(output, _repeated_shotLabelAnnotations_codec);
      frameLabelAnnotations_.WriteTo(output, _repeated_frameLabelAnnotations_codec);
      faceAnnotations_.WriteTo(output, _repeated_faceAnnotations_codec);
      shotAnnotations_.WriteTo(output, _repeated_shotAnnotations_codec);
      if (explicitAnnotation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExplicitAnnotation);
      }
      if (error_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Error);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUri);
      }
      size += segmentLabelAnnotations_.CalculateSize(_repeated_segmentLabelAnnotations_codec);
      size += shotLabelAnnotations_.CalculateSize(_repeated_shotLabelAnnotations_codec);
      size += frameLabelAnnotations_.CalculateSize(_repeated_frameLabelAnnotations_codec);
      size += faceAnnotations_.CalculateSize(_repeated_faceAnnotations_codec);
      size += shotAnnotations_.CalculateSize(_repeated_shotAnnotations_codec);
      if (explicitAnnotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExplicitAnnotation);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoAnnotationResults other) {
      if (other == null) {
        return;
      }
      if (other.InputUri.Length != 0) {
        InputUri = other.InputUri;
      }
      segmentLabelAnnotations_.Add(other.segmentLabelAnnotations_);
      shotLabelAnnotations_.Add(other.shotLabelAnnotations_);
      frameLabelAnnotations_.Add(other.frameLabelAnnotations_);
      faceAnnotations_.Add(other.faceAnnotations_);
      shotAnnotations_.Add(other.shotAnnotations_);
      if (other.explicitAnnotation_ != null) {
        if (explicitAnnotation_ == null) {
          explicitAnnotation_ = new global::Google.Cloud.VideoIntelligence.V1.ExplicitContentAnnotation();
        }
        ExplicitAnnotation.MergeFrom(other.ExplicitAnnotation);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
          case 18: {
            segmentLabelAnnotations_.AddEntriesFrom(input, _repeated_segmentLabelAnnotations_codec);
            break;
          }
          case 26: {
            shotLabelAnnotations_.AddEntriesFrom(input, _repeated_shotLabelAnnotations_codec);
            break;
          }
          case 34: {
            frameLabelAnnotations_.AddEntriesFrom(input, _repeated_frameLabelAnnotations_codec);
            break;
          }
          case 42: {
            faceAnnotations_.AddEntriesFrom(input, _repeated_faceAnnotations_codec);
            break;
          }
          case 50: {
            shotAnnotations_.AddEntriesFrom(input, _repeated_shotAnnotations_codec);
            break;
          }
          case 58: {
            if (explicitAnnotation_ == null) {
              explicitAnnotation_ = new global::Google.Cloud.VideoIntelligence.V1.ExplicitContentAnnotation();
            }
            input.ReadMessage(explicitAnnotation_);
            break;
          }
          case 74: {
            if (error_ == null) {
              error_ = new global::Google.Rpc.Status();
            }
            input.ReadMessage(error_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video annotation response. Included in the `response`
  /// field of the `Operation` returned by the `GetOperation`
  /// call of the `google::longrunning::Operations` service.
  /// </summary>
  public sealed partial class AnnotateVideoResponse : pb::IMessage<AnnotateVideoResponse> {
    private static readonly pb::MessageParser<AnnotateVideoResponse> _parser = new pb::MessageParser<AnnotateVideoResponse>(() => new AnnotateVideoResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotateVideoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoResponse(AnnotateVideoResponse other) : this() {
      annotationResults_ = other.annotationResults_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoResponse Clone() {
      return new AnnotateVideoResponse(this);
    }

    /// <summary>Field number for the "annotation_results" field.</summary>
    public const int AnnotationResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationResults> _repeated_annotationResults_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationResults.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationResults> annotationResults_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationResults>();
    /// <summary>
    /// Annotation results for all videos specified in `AnnotateVideoRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationResults> AnnotationResults {
      get { return annotationResults_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotateVideoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotateVideoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!annotationResults_.Equals(other.annotationResults_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= annotationResults_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      annotationResults_.WriteTo(output, _repeated_annotationResults_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += annotationResults_.CalculateSize(_repeated_annotationResults_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotateVideoResponse other) {
      if (other == null) {
        return;
      }
      annotationResults_.Add(other.annotationResults_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            annotationResults_.AddEntriesFrom(input, _repeated_annotationResults_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Annotation progress for a single video.
  /// </summary>
  public sealed partial class VideoAnnotationProgress : pb::IMessage<VideoAnnotationProgress> {
    private static readonly pb::MessageParser<VideoAnnotationProgress> _parser = new pb::MessageParser<VideoAnnotationProgress>(() => new VideoAnnotationProgress());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoAnnotationProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationProgress(VideoAnnotationProgress other) : this() {
      inputUri_ = other.inputUri_;
      progressPercent_ = other.progressPercent_;
      StartTime = other.startTime_ != null ? other.StartTime.Clone() : null;
      UpdateTime = other.updateTime_ != null ? other.UpdateTime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationProgress Clone() {
      return new VideoAnnotationProgress(this);
    }

    /// <summary>Field number for the "input_uri" field.</summary>
    public const int InputUriFieldNumber = 1;
    private string inputUri_ = "";
    /// <summary>
    /// Video file location in
    /// [Google Cloud Storage](https://cloud.google.com/storage/).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUri {
      get { return inputUri_; }
      set {
        inputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "progress_percent" field.</summary>
    public const int ProgressPercentFieldNumber = 2;
    private int progressPercent_;
    /// <summary>
    /// Approximate percentage processed thus far.
    /// Guaranteed to be 100 when fully processed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgressPercent {
      get { return progressPercent_; }
      set {
        progressPercent_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Time when the request was received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Time of the most recent update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoAnnotationProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoAnnotationProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputUri != other.InputUri) return false;
      if (ProgressPercent != other.ProgressPercent) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputUri.Length != 0) hash ^= InputUri.GetHashCode();
      if (ProgressPercent != 0) hash ^= ProgressPercent.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      if (ProgressPercent != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProgressPercent);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUri);
      }
      if (ProgressPercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgressPercent);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoAnnotationProgress other) {
      if (other == null) {
        return;
      }
      if (other.InputUri.Length != 0) {
        InputUri = other.InputUri;
      }
      if (other.ProgressPercent != 0) {
        ProgressPercent = other.ProgressPercent;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
          case 16: {
            ProgressPercent = input.ReadInt32();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTime_);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(updateTime_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video annotation progress. Included in the `metadata`
  /// field of the `Operation` returned by the `GetOperation`
  /// call of the `google::longrunning::Operations` service.
  /// </summary>
  public sealed partial class AnnotateVideoProgress : pb::IMessage<AnnotateVideoProgress> {
    private static readonly pb::MessageParser<AnnotateVideoProgress> _parser = new pb::MessageParser<AnnotateVideoProgress>(() => new AnnotateVideoProgress());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotateVideoProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1.VideoIntelligenceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoProgress(AnnotateVideoProgress other) : this() {
      annotationProgress_ = other.annotationProgress_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoProgress Clone() {
      return new AnnotateVideoProgress(this);
    }

    /// <summary>Field number for the "annotation_progress" field.</summary>
    public const int AnnotationProgressFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationProgress> _repeated_annotationProgress_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationProgress.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationProgress> annotationProgress_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationProgress>();
    /// <summary>
    /// Progress metadata for all videos specified in `AnnotateVideoRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1.VideoAnnotationProgress> AnnotationProgress {
      get { return annotationProgress_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotateVideoProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotateVideoProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!annotationProgress_.Equals(other.annotationProgress_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= annotationProgress_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      annotationProgress_.WriteTo(output, _repeated_annotationProgress_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += annotationProgress_.CalculateSize(_repeated_annotationProgress_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotateVideoProgress other) {
      if (other == null) {
        return;
      }
      annotationProgress_.Add(other.annotationProgress_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            annotationProgress_.AddEntriesFrom(input, _repeated_annotationProgress_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
