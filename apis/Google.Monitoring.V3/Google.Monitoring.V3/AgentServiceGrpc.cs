// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/agent_service.proto
// Original file comments:
// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Monitoring.V3 {
  /// <summary>
  ///  The AgentTranslation API allows `collectd`-based agents to
  ///  write time series data to Cloud Monitoring.
  ///  See [google.monitoring.v3.MetricService.CreateTimeSeries] instead.
  /// </summary>
  public static class AgentTranslationService
  {
    static readonly string __ServiceName = "google.monitoring.v3.AgentTranslationService";

    static readonly Marshaller<global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest> __Marshaller_CreateCollectdTimeSeriesRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly Method<global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CreateCollectdTimeSeries = new Method<global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "CreateCollectdTimeSeries",
        __Marshaller_CreateCollectdTimeSeriesRequest,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Monitoring.V3.AgentServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AgentTranslationService</summary>
    public abstract class AgentTranslationServiceBase
    {
      /// <summary>
      ///  **Stackdriver Monitoring Agent only:** Creates a new time series.
      ///
      ///  &lt;aside class="caution">This method is only for use by the Google Monitoring Agent.
      ///  Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
      ///  instead.&lt;/aside>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> CreateCollectdTimeSeries(global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AgentTranslationService</summary>
    public class AgentTranslationServiceClient : ClientBase<AgentTranslationServiceClient>
    {
      /// <summary>Creates a new client for AgentTranslationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AgentTranslationServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AgentTranslationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AgentTranslationServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AgentTranslationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AgentTranslationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  **Stackdriver Monitoring Agent only:** Creates a new time series.
      ///
      ///  &lt;aside class="caution">This method is only for use by the Google Monitoring Agent.
      ///  Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
      ///  instead.&lt;/aside>
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CreateCollectdTimeSeries(global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateCollectdTimeSeries(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  **Stackdriver Monitoring Agent only:** Creates a new time series.
      ///
      ///  &lt;aside class="caution">This method is only for use by the Google Monitoring Agent.
      ///  Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
      ///  instead.&lt;/aside>
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CreateCollectdTimeSeries(global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCollectdTimeSeries, null, options, request);
      }
      /// <summary>
      ///  **Stackdriver Monitoring Agent only:** Creates a new time series.
      ///
      ///  &lt;aside class="caution">This method is only for use by the Google Monitoring Agent.
      ///  Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
      ///  instead.&lt;/aside>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CreateCollectdTimeSeriesAsync(global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateCollectdTimeSeriesAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  **Stackdriver Monitoring Agent only:** Creates a new time series.
      ///
      ///  &lt;aside class="caution">This method is only for use by the Google Monitoring Agent.
      ///  Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
      ///  instead.&lt;/aside>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CreateCollectdTimeSeriesAsync(global::Google.Monitoring.V3.CreateCollectdTimeSeriesRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCollectdTimeSeries, null, options, request);
      }
      protected override AgentTranslationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AgentTranslationServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(AgentTranslationServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCollectdTimeSeries, serviceImpl.CreateCollectdTimeSeries).Build();
    }

  }
}
#endregion
